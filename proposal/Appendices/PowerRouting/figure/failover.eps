%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: failover.pdf
%%Creator: Adobe Acrobat 8.0
%%For: twenisch
%%CreationDate: 12/21/09, 1:57:18 AM
%%BoundingBox: 0 0 639 269
%%HiResBoundingBox: 0 0 639 269
%%CropBox: 0 0 639 269
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 3438 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c321 44.398116, Tue Aug 04 2009 14:24:30">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xap:CreateDate="2009-08-10T06:04Z"
   xap:CreatorTool="OmniGraffle Professional 5.1"
   xap:ModifyDate="2009-08-10T18:58Z"
   dc:format="application/pdf"
   pdf:Producer="Mac OS X 10.5.7 Quartz PDFContext">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>David Meisner&#xA;Thomas Wenisch</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">failover.graffle</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedABC 20 dict
dup /CreationDate (20020513120000) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (Generic RGB Profile) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright 2007 Apple Inc., all rights reserved.) put
dup /ProfileID <4B564FD2E33619AD8EB24BD818BD5501> put
dup /DecodeABC [
{{0 0.00012 0.00024 0.00037 0.00056 0.00084 0.00116 0.00153 0.00195 0.00241
0.00291 0.00346 0.00404 0.00467 0.00534 0.00604 0.00679 0.00757 0.00839 0.00925
0.01014 0.01107 0.01204 0.01305 0.01408 0.01516 0.01627 0.01741 0.01859 0.0198
0.02105 0.02233 0.02364 0.02499 0.02637 0.02779 0.02923 0.03071 0.03222 0.03376
0.03534 0.03695 0.03858 0.04025 0.04195 0.04369 0.04545 0.04725 0.04907 0.05093
0.05282 0.05473 0.05668 0.05866 0.06067 0.0627 0.06477 0.06687 0.069 0.07115
0.07334 0.07556 0.0778 0.08008 0.08238 0.08471 0.08707 0.08946 0.09188 0.09433
0.09681 0.09931 0.10184 0.10441 0.107 0.10961 0.11226 0.11493 0.11763 0.12036
0.12312 0.12591 0.12872 0.13156 0.13443 0.13732 0.14025 0.1432 0.14618 0.14918
0.15221 0.15527 0.15836 0.16147 0.16461 0.16778 0.17097 0.17419 0.17744 0.18071
0.18401 0.18734 0.19069 0.19407 0.19748 0.20091 0.20437 0.20786 0.21137 0.2149
0.21847 0.22206 0.22567 0.22931 0.23298 0.23668 0.24039 0.24414 0.24791 0.25171
0.25553 0.25937 0.26325 0.26715 0.27107 0.27502 0.27899 0.28299 0.28702 0.29107
0.29515 0.29925 0.30337 0.30752 0.3117 0.3159 0.32013 0.32438 0.32866 0.33296
0.33728 0.34163 0.34601 0.35041 0.35483 0.35928 0.36376 0.36826 0.37278 0.37733
0.3819 0.3865 0.39112 0.39577 0.40044 0.40513 0.40985 0.41459 0.41936 0.42415
0.42897 0.43381 0.43867 0.44356 0.44847 0.45341 0.45837 0.46335 0.46836 0.47339
0.47845 0.48353 0.48864 0.49376 0.49891 0.50409 0.50929 0.51451 0.51976 0.52503
0.53032 0.53564 0.54098 0.54634 0.55173 0.55714 0.56258 0.56804 0.57352 0.57902
0.58455 0.5901 0.59568 0.60128 0.6069 0.61255 0.61821 0.62391 0.62962 0.63536
0.64112 0.6469 0.65271 0.65854 0.66439 0.67027 0.67617 0.68209 0.68804 0.69401
0.7 0.70601 0.71205 0.71811 0.72419 0.73029 0.73642 0.74257 0.74875 0.75494
0.76116 0.7674 0.77367 0.77996 0.78627 0.7926 0.79895 0.80533 0.81173 0.81815
0.8246 0.83106 0.83755 0.84407 0.8506 0.85716 0.86374 0.87034 0.87696 0.88361
0.89028 0.89697 0.90368 0.91042 0.91718 0.92396 0.93076 0.93758 0.94443 0.9513
0.95819 0.9651 0.97204 0.979 0.98598 0.99298 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2271381704 0.1212687428 0.0074094887
0.176661326 0.3370753975 0.04522001
0.0783093004 0.0416634892 0.3598294927
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
<< /1 
[/CIEBasedA 20 dict
dup /CreationDate (20000214120000) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (Generic Gray Profile) put
dup /ColorSpace (GRAY) put
dup /Copyright (Copyright 2007 Apple Inc., all rights reserved.) put
dup /ProfileID <059F0C81F0883C23BA4232307F3F569E> put
dup /MatrixA [1 1 1] put
dup /DecodeLMN [
{{0 0.00006 0.00012 0.00018 0.00027 0.0004 0.00056 0.00073 0.00093 0.00116
0.0014 0.00166 0.00195 0.00224 0.00258 0.00291 0.00327 0.00365 0.00404 0.00446
0.00488 0.00534 0.0058 0.00629 0.00679 0.00731 0.00784 0.00839 0.00896 0.00955
0.01015 0.01077 0.0114 0.01205 0.01271 0.0134 0.0141 0.0148 0.01553 0.01628
0.01704 0.01781 0.0186 0.01941 0.02023 0.02106 0.02191 0.02278 0.02365 0.02455
0.02547 0.02638 0.02733 0.02827 0.02925 0.03023 0.03122 0.03224 0.03327 0.0343
0.03536 0.03642 0.03751 0.03861 0.03972 0.04083 0.04198 0.04314 0.0443 0.04547
0.04668 0.04788 0.0491 0.05034 0.05159 0.05284 0.05412 0.05541 0.05672 0.05803
0.05936 0.0607 0.06206 0.06343 0.06481 0.06621 0.06761 0.06903 0.07047 0.07192
0.07338 0.07486 0.07634 0.07785 0.07936 0.08089 0.08243 0.08399 0.08554 0.08713
0.08872 0.09032 0.09194 0.09357 0.0952 0.09686 0.09853 0.10021 0.1019 0.10361
0.10533 0.10706 0.1088 0.11055 0.11232 0.11411 0.11589 0.11771 0.11952 0.12136
0.12319 0.12505 0.12691 0.12879 0.13068 0.13259 0.13451 0.13643 0.13837 0.14032
0.14229 0.14427 0.14626 0.14826 0.15027 0.1523 0.15433 0.15639 0.15845 0.16053
0.1626 0.16471 0.16681 0.16893 0.17107 0.17322 0.17537 0.17754 0.17972 0.18192
0.18412 0.18633 0.18856 0.1908 0.19306 0.19532 0.19759 0.19988 0.20218 0.20449
0.20681 0.20914 0.21149 0.21384 0.21622 0.21859 0.22098 0.22339 0.2258 0.22823
0.23067 0.23311 0.23557 0.23804 0.24053 0.24303 0.24553 0.24805 0.25058 0.25312
0.25566 0.25823 0.26081 0.2634 0.266 0.2686 0.27123 0.27385 0.27649 0.27915
0.28182 0.28449 0.28718 0.28988 0.29259 0.29531 0.29804 0.30079 0.30355 0.30631
0.30909 0.31188 0.31467 0.31749 0.3203 0.32314 0.32599 0.32885 0.33172 0.33458
0.33747 0.34037 0.34328 0.34621 0.34914 0.35209 0.35503 0.35801 0.36098 0.36396
0.36696 0.36997 0.37299 0.37603 0.37906 0.38212 0.38518 0.38825 0.39135 0.39445
0.39754 0.40066 0.4038 0.40693 0.41009 0.41325 0.41642 0.41959 0.4228 0.426
0.42921 0.43244 0.43568 0.43893 0.44218 0.44544 0.44872 0.45202 0.45531 0.45862
0.46195 0.46528 0.46863 0.47198 0.47535 0.47872 0.48211}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00006 0.00012 0.00018 0.00027 0.00041 0.00058 0.00076 0.00098 0.00121
0.00145 0.00172 0.00201 0.00233 0.00267 0.00302 0.00339 0.00378 0.0042 0.00462
0.00507 0.00554 0.00603 0.00652 0.00705 0.00758 0.00813 0.00871 0.00929 0.0099
0.01053 0.01117 0.01183 0.0125 0.01318 0.01389 0.01462 0.01535 0.01611 0.01688
0.01767 0.01848 0.01929 0.02013 0.02098 0.02185 0.02272 0.02362 0.02454 0.02547
0.02641 0.02736 0.02834 0.02933 0.03033 0.03136 0.03238 0.03343 0.0345 0.03558
0.03667 0.03778 0.0389 0.04004 0.04118 0.04236 0.04353 0.04474 0.04595 0.04717
0.0484 0.04965 0.05092 0.0522 0.0535 0.05481 0.05614 0.05747 0.05882 0.06018
0.06155 0.06296 0.06436 0.06578 0.06722 0.06867 0.07013 0.0716 0.07309 0.07459
0.07611 0.07764 0.07918 0.08074 0.08231 0.08389 0.08548 0.0871 0.08872 0.09036
0.09201 0.09367 0.09535 0.09703 0.09874 0.10047 0.10219 0.10393 0.10568 0.10745
0.10924 0.11102 0.11284 0.11466 0.11649 0.11833 0.1202 0.12207 0.12396 0.12586
0.12776 0.12969 0.13162 0.13358 0.13553 0.13751 0.1395 0.1415 0.14351 0.14554
0.14757 0.14963 0.15169 0.15376 0.15586 0.15795 0.16007 0.16219 0.16432 0.16648
0.16864 0.17083 0.17301 0.1752 0.17742 0.17964 0.18189 0.18413 0.18639 0.18866
0.19095 0.19326 0.19556 0.19788 0.20021 0.20256 0.20493 0.20729 0.20969 0.21208
0.21448 0.21691 0.21933 0.22179 0.22425 0.2267 0.22919 0.23168 0.23418 0.2367
0.23923 0.24176 0.24433 0.24689 0.24945 0.25205 0.25464 0.25725 0.25988 0.26252
0.26517 0.26783 0.2705 0.27318 0.27587 0.27857 0.2813 0.28402 0.28676 0.28951
0.29229 0.29506 0.29784 0.30065 0.30346 0.30628 0.30912 0.31196 0.31481 0.31768
0.32056 0.32346 0.32636 0.32927 0.3322 0.33513 0.33809 0.34105 0.34403 0.34701
0.35 0.35302 0.35602 0.35906 0.3621 0.36515 0.36822 0.3713 0.37438 0.37748
0.38059 0.3837 0.38685 0.38999 0.39313 0.39631 0.39948 0.40267 0.40587 0.40908
0.4123 0.41553 0.41878 0.42203 0.42531 0.42858 0.43188 0.43517 0.43848 0.44181
0.44515 0.44849 0.45185 0.45522 0.45859 0.46198 0.46538 0.4688 0.47222 0.47565
0.4791 0.48257 0.48603 0.48951 0.49299 0.4965 0.50001}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00005 0.00011 0.00015 0.00023 0.00035 0.00047 0.00063 0.00081 0.00099
0.00121 0.00142 0.00166 0.00192 0.0022 0.00249 0.00279 0.00313 0.00346 0.00381
0.00418 0.00456 0.00496 0.00539 0.00581 0.00626 0.00671 0.00719 0.00766 0.00816
0.00868 0.00922 0.00975 0.01031 0.01088 0.01146 0.01205 0.01266 0.01329 0.01393
0.01457 0.01524 0.01591 0.0166 0.0173 0.01802 0.01875 0.01949 0.02023 0.02101
0.02179 0.02257 0.02338 0.0242 0.02502 0.02586 0.02672 0.02759 0.02846 0.02934
0.03024 0.03116 0.03209 0.03304 0.03398 0.03494 0.03592 0.0369 0.0379 0.03891
0.03993 0.04096 0.04201 0.04306 0.04413 0.04521 0.0463 0.04741 0.04852 0.04965
0.05078 0.05193 0.05309 0.05426 0.05545 0.05664 0.05785 0.05907 0.06029 0.06152
0.06278 0.06404 0.06531 0.06661 0.06789 0.0692 0.07051 0.07184 0.07318 0.07454
0.0759 0.07727 0.07866 0.08005 0.08145 0.08287 0.08429 0.08572 0.08717 0.08864
0.0901 0.09158 0.09308 0.09458 0.0961 0.09761 0.09915 0.10069 0.10225 0.10382
0.10539 0.10698 0.10858 0.11019 0.1118 0.11344 0.11507 0.11673 0.11838 0.12006
0.12174 0.12343 0.12512 0.12683 0.12856 0.1303 0.13204 0.13379 0.13556 0.13733
0.13912 0.1409 0.14272 0.14453 0.14635 0.1482 0.15004 0.15189 0.15375 0.15563
0.15752 0.15941 0.16132 0.16324 0.16516 0.1671 0.16904 0.17101 0.17298 0.17494
0.17693 0.17893 0.18094 0.18296 0.18497 0.18701 0.18906 0.19112 0.19318 0.19525
0.19734 0.19944 0.20154 0.20366 0.20578 0.20792 0.21006 0.21221 0.21437 0.21656
0.21874 0.22094 0.22313 0.22535 0.22757 0.2298 0.23204 0.23429 0.23656 0.23882
0.24111 0.2434 0.2457 0.248 0.25032 0.25264 0.25499 0.25733 0.25969 0.26206
0.26444 0.26682 0.26921 0.27163 0.27404 0.27646 0.27889 0.28133 0.28379 0.28624
0.28872 0.2912 0.29369 0.29619 0.2987 0.30121 0.30375 0.30628 0.30883 0.31139
0.31395 0.31652 0.31911 0.32171 0.3243 0.32691 0.32953 0.33216 0.3348 0.33745
0.34011 0.34278 0.34546 0.34815 0.35084 0.35354 0.35625 0.35898 0.36172 0.36445
0.36721 0.36997 0.37273 0.37551 0.3783 0.38109 0.3839 0.38671 0.38953 0.39237
0.39521 0.39806 0.40093 0.4038 0.40667 0.40957 0.41247}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
<< /2 
[/CIEBasedABC 20 dict
dup /CreationDate (20090521181043) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (Color LCD) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright Apple, Inc., 2009) put
dup /ProfileID <A3E22CE28214C35BC2337F36ABD85077> put
dup /DecodeABC [
{{0 0.00012 0.00024 0.00037 0.00056 0.00084 0.00116 0.00153 0.00195 0.00241
0.00291 0.00346 0.00404 0.00467 0.00534 0.00604 0.00679 0.00757 0.00839 0.00925
0.01014 0.01107 0.01204 0.01305 0.01408 0.01516 0.01627 0.01741 0.01859 0.0198
0.02105 0.02233 0.02364 0.02499 0.02637 0.02779 0.02923 0.03071 0.03222 0.03376
0.03534 0.03695 0.03858 0.04025 0.04195 0.04369 0.04545 0.04725 0.04907 0.05093
0.05282 0.05473 0.05668 0.05866 0.06067 0.0627 0.06477 0.06687 0.069 0.07115
0.07334 0.07556 0.0778 0.08008 0.08238 0.08471 0.08707 0.08946 0.09188 0.09433
0.09681 0.09931 0.10184 0.10441 0.107 0.10961 0.11226 0.11493 0.11763 0.12036
0.12312 0.12591 0.12872 0.13156 0.13443 0.13732 0.14025 0.1432 0.14618 0.14918
0.15221 0.15527 0.15836 0.16147 0.16461 0.16778 0.17097 0.17419 0.17744 0.18071
0.18401 0.18734 0.19069 0.19407 0.19748 0.20091 0.20437 0.20786 0.21137 0.2149
0.21847 0.22206 0.22567 0.22931 0.23298 0.23668 0.24039 0.24414 0.24791 0.25171
0.25553 0.25937 0.26325 0.26715 0.27107 0.27502 0.27899 0.28299 0.28702 0.29107
0.29515 0.29925 0.30337 0.30752 0.3117 0.3159 0.32013 0.32438 0.32866 0.33296
0.33728 0.34163 0.34601 0.35041 0.35483 0.35928 0.36376 0.36826 0.37278 0.37733
0.3819 0.3865 0.39112 0.39577 0.40044 0.40513 0.40985 0.41459 0.41936 0.42415
0.42897 0.43381 0.43867 0.44356 0.44847 0.45341 0.45837 0.46335 0.46836 0.47339
0.47845 0.48353 0.48864 0.49376 0.49891 0.50409 0.50929 0.51451 0.51976 0.52503
0.53032 0.53564 0.54098 0.54634 0.55173 0.55714 0.56258 0.56804 0.57352 0.57902
0.58455 0.5901 0.59568 0.60128 0.6069 0.61255 0.61821 0.62391 0.62962 0.63536
0.64112 0.6469 0.65271 0.65854 0.66439 0.67027 0.67617 0.68209 0.68804 0.69401
0.7 0.70601 0.71205 0.71811 0.72419 0.73029 0.73642 0.74257 0.74875 0.75494
0.76116 0.7674 0.77367 0.77996 0.78627 0.7926 0.79895 0.80533 0.81173 0.81815
0.8246 0.83106 0.83755 0.84407 0.8506 0.85716 0.86374 0.87034 0.87696 0.88361
0.89028 0.89697 0.90368 0.91042 0.91718 0.92396 0.93076 0.93758 0.94443 0.9513
0.95819 0.9651 0.97204 0.979 0.98598 0.99298 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.1875058284 0.1049709437 0.013994594
0.2179099107 0.3502310846 0.0487292679
0.0766930577 0.0448056012 0.3497351294
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /2 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -269 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 269 li
639 269 li
639 0 li
cp
clp
[1 0 0 1 0 0 ]ct
-2.502 314.496 mo
753.498 314.496 li
753.498 -238.5 li
-2.502 -238.5 li
-2.502 314.496 li
false sop
<< /3 
/CIEBasedDEFG /ColorSpaceFamily resourcestatus
{pop pop false} {true} ifelse
{[/DeviceCMYK]}
{[/CIEBasedDEFG 20 dict
dup /CreationDate (20000726054153) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (U.S. Web Coated (SWOP) v2) put
dup /ColorSpace (CMYK) put
dup /Copyright (Copyright 2000 Adobe Systems, Inc.) put
dup /ProfileID <79D7E984EA3AC74EED7CC92BF6B22A0D> put
dup /DecodeDEFG [
{{0 0.00833 0.01601 0.02278 0.02885 0.03445 0.03976 0.04486 0.04976 0.05451
0.05916 0.06374 0.06831 0.07287 0.07742 0.08193 0.08642 0.09088 0.09529 0.09965
0.10399 0.10832 0.11265 0.11733 0.12201 0.12661 0.13116 0.13566 0.14012 0.14456
0.14896 0.15337 0.15775 0.16214 0.16652 0.17091 0.17529 0.17967 0.18404 0.18843
0.19281 0.19715 0.20147 0.20579 0.21012 0.21445 0.21878 0.2231 0.22742 0.23173
0.23605 0.24038 0.2447 0.24899 0.25327 0.25752 0.26179 0.26608 0.27035 0.27463
0.27892 0.2832 0.28749 0.29178 0.29607 0.30036 0.30462 0.30885 0.31307 0.31731
0.32154 0.32576 0.33 0.33423 0.33847 0.34271 0.34694 0.35117 0.35541 0.35963
0.36381 0.36798 0.37213 0.37629 0.38044 0.38459 0.38874 0.39289 0.39704 0.40118
0.40533 0.40947 0.41359 0.41772 0.42181 0.42586 0.4299 0.43393 0.43796 0.44199
0.446 0.45002 0.45402 0.45802 0.46202 0.466 0.46999 0.47397 0.47794 0.48191
0.48584 0.48973 0.49361 0.49748 0.50135 0.50521 0.50907 0.51292 0.51677 0.52061
0.52444 0.52827 0.53209 0.5359 0.53972 0.54353 0.54733 0.55112 0.55487 0.5586
0.56232 0.56604 0.56974 0.57345 0.57716 0.58086 0.58456 0.58825 0.59194 0.59564
0.59933 0.60302 0.6067 0.61037 0.61406 0.61775 0.62142 0.62508 0.62871 0.63233
0.63594 0.63955 0.64316 0.64677 0.65038 0.654 0.65762 0.66123 0.66484 0.66846
0.67207 0.67569 0.67931 0.68292 0.68654 0.69016 0.69378 0.69741 0.70103 0.70464
0.70826 0.71186 0.71547 0.71908 0.72269 0.7263 0.72991 0.73352 0.73713 0.74074
0.74436 0.74797 0.75158 0.7552 0.75881 0.76243 0.76605 0.76965 0.77327 0.77689
0.7805 0.78411 0.78772 0.79132 0.79488 0.79844 0.80199 0.80554 0.80909 0.81265
0.81619 0.81973 0.82327 0.82681 0.83034 0.83386 0.83739 0.8409 0.84442 0.84792
0.85143 0.85491 0.8584 0.86188 0.86536 0.86884 0.87232 0.87579 0.87925 0.88272
0.88617 0.8896 0.89296 0.89631 0.89965 0.90297 0.90629 0.90958 0.91288 0.91615
0.91941 0.92265 0.92585 0.92906 0.93228 0.93569 0.93908 0.94245 0.94579 0.94912
0.95242 0.95571 0.95898 0.96223 0.96547 0.96871 0.97191 0.97505 0.97815 0.98119
0.98414 0.98699 0.98974 0.9924 0.99497 0.99749 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00742 0.01421 0.02013 0.02537 0.03016 0.03467 0.03901 0.04317 0.04716
0.05109 0.05495 0.05879 0.06266 0.0665 0.07033 0.07415 0.07794 0.08171 0.08546
0.08916 0.09284 0.09654 0.10056 0.10457 0.10852 0.11241 0.11628 0.12011 0.12393
0.12774 0.13154 0.13533 0.13913 0.14293 0.14674 0.15056 0.15438 0.15821 0.16204
0.1659 0.16976 0.17363 0.17749 0.18131 0.18513 0.18896 0.19279 0.19664 0.20048
0.20434 0.2082 0.21208 0.21598 0.21988 0.2238 0.22766 0.23153 0.23539 0.23928
0.24317 0.24707 0.25099 0.25492 0.25886 0.26281 0.26676 0.27072 0.2747 0.27864
0.28255 0.28646 0.29039 0.29433 0.29827 0.30222 0.30618 0.31015 0.31413 0.31811
0.3221 0.3261 0.33009 0.33404 0.33796 0.34188 0.34581 0.34974 0.35367 0.35762
0.36156 0.3655 0.36944 0.3734 0.37734 0.38128 0.38524 0.38918 0.39307 0.39693
0.40078 0.40464 0.4085 0.41235 0.4162 0.42005 0.42391 0.42776 0.43161 0.43545
0.43929 0.44313 0.44696 0.45079 0.45458 0.45833 0.46207 0.46581 0.46954 0.47328
0.47701 0.48074 0.48446 0.48819 0.49191 0.49563 0.49934 0.50306 0.50677 0.51048
0.51418 0.51788 0.52154 0.52517 0.52879 0.53242 0.53604 0.53966 0.54328 0.54691
0.55053 0.55415 0.55778 0.5614 0.56503 0.56867 0.5723 0.57594 0.57958 0.58322
0.58687 0.59052 0.59416 0.59776 0.60135 0.60495 0.60855 0.61216 0.61578 0.6194
0.62304 0.62667 0.63033 0.63399 0.63766 0.64134 0.64502 0.64872 0.65243 0.65616
0.65989 0.66362 0.66737 0.67114 0.67491 0.67868 0.68246 0.68625 0.69005 0.69385
0.69767 0.70152 0.70537 0.70922 0.7131 0.71698 0.72089 0.7248 0.72872 0.73265
0.7366 0.74055 0.74453 0.74851 0.75249 0.7565 0.76051 0.76454 0.76856 0.77254
0.77652 0.78051 0.78451 0.78852 0.79254 0.79656 0.80059 0.80462 0.80867 0.81271
0.81675 0.82081 0.82485 0.82892 0.83299 0.83706 0.84114 0.84523 0.84932 0.8534
0.85749 0.86158 0.86569 0.86978 0.87387 0.87788 0.88186 0.88584 0.88981 0.89377
0.89773 0.90168 0.90561 0.90955 0.9135 0.91765 0.9218 0.92593 0.93005 0.93416
0.93826 0.94233 0.9464 0.95046 0.95452 0.95858 0.96262 0.96662 0.97057 0.97447
0.97831 0.98208 0.98576 0.98938 0.99295 0.99647 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00786 0.01496 0.02105 0.02638 0.03125 0.03581 0.04019 0.04438 0.04847
0.05246 0.05638 0.06027 0.06416 0.06804 0.07187 0.07569 0.07946 0.0832 0.08691
0.09061 0.09429 0.09797 0.10199 0.10602 0.10997 0.11385 0.11767 0.12147 0.12525
0.129 0.13274 0.13648 0.14021 0.14393 0.14765 0.15138 0.1551 0.15881 0.16253
0.16626 0.16998 0.17369 0.1774 0.18111 0.18483 0.18854 0.19225 0.19597 0.19968
0.20339 0.20711 0.21084 0.21457 0.2183 0.22202 0.22575 0.22948 0.23323 0.23698
0.24074 0.24451 0.24828 0.25206 0.25584 0.25964 0.26345 0.26725 0.27106 0.27487
0.27868 0.2825 0.28633 0.29017 0.29402 0.29787 0.30174 0.30561 0.30949 0.31337
0.31728 0.32116 0.32505 0.32894 0.33283 0.33673 0.34064 0.34454 0.34846 0.35238
0.3563 0.36022 0.36416 0.36808 0.37201 0.37594 0.37986 0.38377 0.38768 0.3916
0.39551 0.39942 0.40334 0.40724 0.41115 0.41505 0.41895 0.42285 0.42675 0.43064
0.43453 0.43841 0.44227 0.44613 0.44999 0.45384 0.45768 0.46152 0.46535 0.46918
0.473 0.47682 0.48063 0.48444 0.48824 0.49203 0.49583 0.49961 0.50339 0.50716
0.51091 0.51466 0.5184 0.52215 0.52589 0.52963 0.53336 0.53709 0.54082 0.54456
0.54829 0.55202 0.55575 0.55948 0.56322 0.56696 0.5707 0.57444 0.57819 0.58194
0.58569 0.58945 0.59322 0.597 0.6008 0.60459 0.60841 0.61223 0.61607 0.61992
0.62378 0.62766 0.63156 0.63547 0.6394 0.64334 0.6473 0.65129 0.65529 0.65932
0.66336 0.66741 0.6715 0.67561 0.67973 0.68387 0.68803 0.69221 0.69642 0.70065
0.70489 0.70915 0.71343 0.71773 0.72204 0.72638 0.73073 0.7351 0.73948 0.74386
0.74827 0.75268 0.75709 0.76151 0.76595 0.77038 0.77481 0.77926 0.78371 0.78814
0.79258 0.79702 0.80144 0.80586 0.81027 0.81467 0.81905 0.82342 0.82776 0.83209
0.83641 0.8407 0.84496 0.84921 0.85343 0.85763 0.86181 0.86599 0.87013 0.87425
0.87832 0.88237 0.88639 0.89037 0.89432 0.89822 0.90208 0.9059 0.90967 0.9134
0.91707 0.9207 0.92428 0.92781 0.93139 0.93533 0.9392 0.94301 0.94674 0.9504
0.954 0.95752 0.96099 0.96439 0.96775 0.97106 0.97429 0.9774 0.98039 0.98326
0.98601 0.9886 0.99106 0.9934 0.99565 0.99784 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00719 0.01382 0.0196 0.02464 0.02919 0.03344 0.0375 0.04144 0.04526
0.04897 0.05261 0.05623 0.05986 0.06346 0.06704 0.07059 0.07412 0.07763 0.08113
0.08461 0.08808 0.09155 0.09537 0.09921 0.10297 0.10665 0.11029 0.11388 0.11745
0.12103 0.12457 0.12813 0.13167 0.13522 0.13877 0.14232 0.14588 0.14944 0.15299
0.15656 0.16015 0.16372 0.16732 0.17092 0.17452 0.17812 0.18173 0.18533 0.18894
0.19255 0.19616 0.19978 0.20341 0.20703 0.21067 0.21431 0.21795 0.2216 0.22526
0.22892 0.23259 0.23625 0.23991 0.24359 0.24727 0.25096 0.25464 0.25833 0.26202
0.26573 0.26942 0.27313 0.27682 0.28053 0.28424 0.28795 0.29165 0.29537 0.29909
0.3028 0.30652 0.31023 0.31394 0.31765 0.32135 0.32505 0.32874 0.33243 0.33611
0.33979 0.34346 0.34714 0.35081 0.35448 0.35815 0.36182 0.36548 0.36914 0.3728
0.37645 0.3801 0.38373 0.38735 0.39098 0.3946 0.39822 0.40184 0.40546 0.40907
0.41268 0.41628 0.41989 0.42349 0.42708 0.43067 0.43426 0.43784 0.44141 0.44497
0.44853 0.45208 0.45562 0.45916 0.4627 0.46624 0.46978 0.47332 0.47684 0.48037
0.4839 0.48742 0.49094 0.49446 0.49798 0.50149 0.505 0.50851 0.51199 0.51548
0.51896 0.52243 0.5259 0.52938 0.53286 0.53634 0.53982 0.54329 0.54677 0.55025
0.55373 0.55722 0.56071 0.5642 0.56769 0.57119 0.57468 0.57819 0.5817 0.58521
0.58873 0.59225 0.59578 0.59932 0.60286 0.60641 0.60997 0.61355 0.61712 0.62072
0.62432 0.62794 0.63157 0.63521 0.63887 0.64254 0.64622 0.64991 0.65361 0.65734
0.66109 0.66485 0.66862 0.67241 0.67621 0.68003 0.68385 0.68768 0.69153 0.6954
0.69928 0.70317 0.70708 0.71102 0.71496 0.71894 0.72293 0.72694 0.73096 0.735
0.73907 0.74314 0.74724 0.75136 0.75549 0.75963 0.7638 0.768 0.7722 0.77641
0.78066 0.78491 0.78918 0.79348 0.79779 0.80213 0.80646 0.81078 0.81512 0.81948
0.82386 0.82826 0.83268 0.83712 0.84158 0.84606 0.85056 0.85508 0.85963 0.86417
0.86874 0.87331 0.8779 0.8825 0.8872 0.89223 0.89728 0.90236 0.90745 0.91256
0.9177 0.92285 0.92803 0.93325 0.93851 0.94385 0.94918 0.9545 0.9598 0.96506
0.97026 0.97538 0.98041 0.98533 0.99021 0.99508 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
] put
dup /Table [9 9 9 9 [
[<FE8080E57F7FCD7F7EB47F7E9B7F7E837F7E6A7F7E51807F398180FC7E8BE47E89CB7E87
B37E869A7E85827E84697F83507F82388081FA7D96E27D93CA7D90B27D8E997D8C807E8A
687E884F7F85377F83F87CA1E07C9DC87C99B07C96987C937F7D8F677D8C4F7E89367F85
F67BACDF7BA7C77BA2AF7B9E967C997E7C95667D914E7D8C367E86F57AB8DD7AB1C57AAB
AD7BA6957BA07D7C9B657C954D7D8F357E88F47AC3DC7ABBC47AB4AC7AAE947BA77C7BA0
647C994D7D92357E89F279CEDB79C5C379BDAB7AB5937AAD7C7BA6647C9D4C7C94347D8A
F279DADA79CFC279C6AA79BD937AB47B7BAB637BA14C7C97347D8B>
<ED887ED7877DC0867DA9857D92857D7B847D63837E4C837E358380EB8788D58687BF8585
A884849184837983836283824B8282358281EA8693D48590BD848EA6838C8F838A788288
6182864B8285348283E8859DD2849ABC8396A582938E829077828E60818B4A8188338184
E684A8D183A3BA829FA4829B8D819776819360818F49818B338186E583B3CF83ADB982A8
A381A38C819E7580985F809349808E338087E483BDCE82B7B881B0A281AA8B80A475809E
5E8097488090328088E383C8CD82C0B781B9A180B18A80AA7480A35E809B488093328089
E282D3CC81CAB681C1A080B88A80B0737FA75D7F9E477F95327F8A>
<DD917CC88F7CB38E7C9E8C7C888A7C72897D5D877D47867E32857FDB9086C78E85B28C84
9D8B838789827188825C8781468581328481DA8F90C58D8EB18B8C9B8A8A868888708787
5B8685468584318483D88E9AC48C97AF8A949A899185888F6F868C5A858A458487318384
D78DA4C38BA0AE8A9C9988988487956F869159858E45848A308386D68DAEC28BA9AD89A4
98889F83879B6E859659849244838C308287D58CB8C18AB2AC89AC9787A78286A16D859B
58849544838F308288D48CC2C08ABBAB88B49687AD8186A76C85A0588499438391308289
D38CCCBF8AC4AA88BC9687B48185AC6C84A457839C4382932F8289>
<CE9B7BBA987BA6957B92937B7E907B6A8E7C568C7D42897E2F877FCC9984B99783A59482
9292827E8F81698D81558B814289812F8681CA988EB8968CA4938A9191887D8E87698C86
558A854188842E8682C99897B69594A3929190908F7C8E8D688C8B5489884187862E8584
C897A0B5949DA292998E8F967B8D93678B9053898C4087892E8585C796AAB494A5A191A1
8D8F9D7A8C98668A9453889040868B2E8486C696B3B393AEA091A88D8EA3798C9E668A99
52889340868D2E8487C595BCB393B6A090B08C8EAA798CA3658A9D5288963F868F2E8488
C595C6B292BE9F90B78B8EB0788BA86589A15287993F86912D8489>
<BEA47AACA07A9A9D7A889A7A75967B62937C50907C3E8C7E2C897FBDA383AB9F82999C81
8799817495806292804F8F803D8C802C8881BCA28CAA9E8A989B88869887739586619185
4F8E843D8B832C8782BBA194A99E92979A8F85978D73948B6091894E8E873C8A862C8784
BAA09DA89D9A969A9784969472939160908E4E8D8B3C8A882C8785B9A0A6A79CA296999E
83969A7193965F90924D8D8E3C898A2C8686B8A0AFA79CAA9599A58395A071929B5E8F96
4D8C913C898C2C8687B79FB7A69CB19498AC8295A67092A05E8F9A4D8C943C898E2C8687
B79FC0A69BB99498B28295AC7092A55E8F9E4C8C973B89902C8588>
<B0AD7A9FA97A8EA57A7DA17A6C9D7A5B987B4A947C39907E2A8B7FAFAD829EA8818DA480
7DA0806B9C805A9780499380398F802A8A81AEAC8A9DA7888DA3877C9F866B9B855A9784
499283398E832A8982ADAB929DA7908CA28E7B9E8C6A9A8A599688489287388D852A8983
ACAA9A9CA6978BA2947A9D9269998F58958C48918A388D872A8884ACAAA39BA59F8BA19B
7A9D9769999458959048918D388C892A8885ABA9AB9BA5A68AA1A1799C9D689899589494
479090388C8B2A8886AAA9B39AA4AD8AA0A8799CA268989D579498479092388C8D2A8787
AAA9BB9AA4B489A0AE789CA86898A157949B479095388B8E2A8787>
<A2B77992B27983AD7973A87A63A37A539E7B44987C35937D278C7FA1B68192B18082AC80
73A77F63A27F539D7F44977F359280288C81A1B68991B08782AB8672A68562A184539C83
439783359182288B82A0B59091B08E81AA8C71A58A62A089529B87439686359084288A83
A0B49890AF9581AA9271A59061A08D529B8B439589359086288A849FB4A090AE9C80A998
70A495619F92529A8F43958C358F882889859FB3A78FAEA380A99E70A49A619F96519992
43948E358F8A2889869EB3AE8FADA980A8A470A39F609E9A519995429490358E8B288986
9EB2B68FADB07FA8AA70A3A4609E9E519998429392358E8D298987>
<95C17987BB7978B5796AAF795BA97A4DA37B3F9C7C31957D258E7F95C08086BA7F78B47F
69AE7F5BA87E4CA27F3E9B7F319580268D8194BF8886B98677B38569AD845AA7834CA182
3E9B82319482268C8294BF8F86B98C77B38B69AD895AA6874CA0863E9A85329384268C83
94BE9685B89377B29068AC8E5AA68C4CA08A3E9988329286278B8493BD9D85B79976B196
68AB935AA5904C9F8D3E988A329287278B8593BDA485B79F76B19B68AB9859A5944B9E90
3E988D329189278A8593BCAA85B6A576B0A168AA9C59A4984B9E933E988F32918A278A86
92BCB184B6AB76B0A568AAA059A49B4B9D963E979132918B278A86>
<89CB797BC4796EBE7961B77953B07A46A87B3AA17C2E987D248F7F89CA807BC47F6EBD7E
60B67E53AF7E46A77E3A9F7F2E977F248E8089C9877BC3856EBC8460B58353AE8246A682
3A9E822E9681258E8289C88D7BC28B6DBB8960B48853AD8646A5853A9E842F9583258D83
89C7947BC1916DBA8F60B38C53AC8A46A4893A9D872F9585258C8389C79A7BC0976EB994
60B29153AB8E46A48C3A9C892F9487268C8488C6A17BBF9C6EB89960B19553AA9246A38F
3A9B8B2F9488268C8588C6A77BBFA26EB89D60B19953AA9546A3913A9B8D2F9389268B85
88C5AD7BBEA76EB7A260B09D53A99846A2933A9B8F2F938A268B86>
][<F27B79DB7B79C47C7AAC7C7A957C7A7D7D7B667E7C4E7E7D377F7EF07984D97A83C27A82
AB7B82947B817C7C81647D804D7E80367F80EE788FD8788DC1798BAA7A8A927A887B7B86
647C854C7D83357E82EC779BD67797BF7894A8799191798F7A7A8C637B8A4B7C87347E83
EA76A6D476A1BE779DA77899907996797A92627B8E4B7C8A347D85E975B1D376ABBC76A6
A677A18F789C787997617A924A7B8D337D87E875BCD275B5BB76AFA477A98E77A377789D
607A964A7B90337C88E774C7D175BFBA75B8A476B08D77A97678A260799A497A92337C89
E674D1D074C9BA75C0A376B88C77AF7578A75F799E497A94337C8A>
<E28478CD8378B78378A282798B827A75827A5F817B49817C33827EE08282CC8281B68181
A181808A81807481805E8080488180338180DE818DCA808BB580899F8088898086738085
5D8084478083328082DD8097C87F94B37F929E7F8F887F8D727F8B5C7F88477F86328083
DB7FA2C77E9EB27E9A9C7E97877E93717E905C7E8D467F89317F85DA7EACC67EA7B17DA3
9B7D9E867D9A707E955B7E91467E8C317F86D97EB6C57DB1B07DAB9A7DA5857DA06F7D9A
5A7D95457E8E317E87D87DC1C47DBAAF7CB3997CAD847CA66F7D9F5A7D98457E91307E88
D87DCBC37CC3AE7CBB997CB4837CAC6E7CA4597D9B457D93307E89>
<D28C76BF8B77AB8A779788788287796D867A59857B44847C30847ED18B80BE8A80AA887F
96877F81867F6C857F58847F44847F308380CF8A8ABC8889A987879586868085856C8484
5784834383822F8281CE8994BB8792A7868F93858D7F848B6B84895683874282852F8283
CD889EBA879BA685979285947E84916A838E56828B4282882F8184CC87A8B986A4A5859F
91849B7D839769829355828F41818B2F8186CB87B2B885ACA484A79083A27C839D688298
55819341818D2E8187CA86BBB785B5A384AF8F83A97C82A368829D54819641818F2E8088
C986C5B685BEA384B78F83AF7B82A86781A15481994180912E8088>
<C39575B193769F91778C8F77798D78668B7952897A40887C2D867EC2947FB0927E9E907E
8B8E7E788C7E658A7E52897E3F877F2D8580C19388AF91879D8F868A8D85778B84648983
5188823F86822D8481C09291AE908F9C8E8D898C8B768A8A6389885087863E85842D8483
BE919BAD8F989B8D95888B92758A8F62888D50868A3E85872C8384BD91A4AC8EA09A8C9C
878B997489956287914F868E3D84892C8385BD90ADAB8EA8998CA4868A9F74889A618796
4F85913D848C2C8386BC90B6AA8EB1988CAB868AA57388A061879A4F85943D848E2C8287
BB8FBFAA8DB9988BB28589AB7388A560869E4E85973D838F2C8288>
<B49F75A49C759399768196777093785E90794C8E7A3B8B7C2B887EB39E7DA39A7D92987D
81957D6F927D5D8F7E4C8D7E3B8A7F2A877FB29C86A299859197848094836E91835D8F82
4B8C823A89812A8681B19C8FA1998D90968B7F938A6D90885C8E874B8B853A88842A8682
B19B98A098958F95927E92906D908D5B8D8B4A8A893A88862A8583B09AA09F979D8F9499
7D92966C8F935B8C8F4A8A8C3987882A8585AF9AA99F97A58E94A07D919C6B8E985A8C94
49898F39878A2A8486AE99B19E96AC8D93A77C91A26B8E9D5A8C9749899239878C2A8486
AE99BA9E96B48D93AE7C90A76A8EA1598B9B49899439868E2A8487>
<A6A87497A47587A076779D7667997756967946927A378E7C28897EA6A77D96A37C879F7C
779C7C66987D56957D46917E368D7E28897FA5A68596A284869E83769B82669782559481
469081368C81288881A4A58D95A18B859E89759A88659687559386458F84368B83288782
A3A49594A192849D9074998E64968C54928A458F88368B85288783A3A49D93A09A849C97
74999464959154928E458E8B368A87288684A2A3A5939FA1839C9D739899639595549191
448D8D368A89298685A2A3AD929FA8839BA373989F63949A539195448D90368A8B298686
A1A3B5929FAF829BA97397A463949E539098448D9236898C298686>
<99B2748BAD757CA9756DA4765E9F774F9B7841967A33917C268B7E99B17C8AAC7C7CA87B
6DA37C5E9E7C4F9A7C40957D33907E268A7F98B0838AAB827BA7826CA2815E9E814F9981
409480338F80268A8198AF8B89AA897BA6886CA1875D9D854E9884409384338E83278982
97AE9289AA907AA58E6BA08C5D9C8A4E9788409387338E8527888396AE9A88A9977AA494
6BA0915C9B8F4E978C409289338D8727888496ADA188A89E79A49A6B9F975C9B934D968F
40918C328D8827888596ADA988A8A479A3A06A9F9B5C9A974D96933F918E328C8A278785
95ACB087A8AA79A3A56A9EA05B9A9B4D95953F9190328C8B278786>
<8DBC747FB67472B17564AB7656A67749A0783C9A7A2F947C248D7E8CBB7B7FB57B71B07B
64AA7B56A57B489F7C3B997D2F937E248C7F8CBA827FB48171AF8164A98056A480489E80
3B98802F9280258B808CB9897EB38871AE8663A88556A384489D833B97832F9182258A82
8BB8907EB28E70AD8C63A88A55A289489C873B96862F9084258A838BB7977EB29470AC92
63A78F55A18D489C8A3B96883090862589838BB79E7DB19B70AC9762A69455A191489B8E
3B958A308F872689848BB6A57DB1A070AB9C62A69855A094489B903B958D308F89268985
8AB6AB7DB0A670ABA162A59C55A098489A933B948E308E8A268885>
<81C67474BF7468B9755BB3754FAC7742A578379E7A2C967B228E7E81C57A74BF7A68B87A
5BB27A4FAB7B42A47C379D7D2C957E238D7F81C48174BD8068B7805BB17F4EAA7F42A37F
379C7F2C9480238C8081C38874BC8667B6855BB0844EA98342A283379B822C9382248C81
80C28E74BB8C67B58A5BAF894EA88742A186379A852D9383248B8280C19574BB9267B48F
5BAE8D4EA78B42A0893799872D9285248B8380C09B74BA9867B4945BAD914EA78F42A08C
3799892D9186258A8480C0A174B99D67B3995BAD954EA692429F8E37988B2D9188258A84
80BFA774B9A267B39E5BAC994EA595439F9137988D2D9188258A85>
][<E67673D17774BB7875A579768E7A77777B78617C794B7D7B347E7DE4747ECF757EB9767D
A3777D8D787D76797E607B7E4A7C7E347D7EE27389CD7488B87586A276858C7784757883
5F7A82497B81337D80E07294CB7391B6748FA0758D8A768B7477895E7987487A85337C82
DF709FCA729BB573989F749589759273778E5D788B487A88327C84DD70AAC971A5B372A1
9E739C8875987276945C789047798B327B85DC6FB4C870AFB271A99D73A487749F717599
5C779447798E327B87DB6FBFC770B9B171B29C72AB8673A571759E5B7797467890317A88
DB6EC9C66FC2B170BA9B72B38573AB7075A35B769B467892317A89>
<D67F72C37F73AF7F749A7F75857F76707F775B7F7946807A31807DD57D7CC27D7CAE7D7C
997D7C847E7C6F7E7D5A7E7D457F7E31807ED37B87C07C85AC7C84987C84837D836E7D82
597D82447E81307F80D27A91BF7A8FAB7B8D967B8B827C896D7C88587D86447D84307E82
D0799BBD7998A97A95957A92817B906C7B8D587C8A437D87307E83CF78A5BC79A2A8799E
94799A807A966B7B92577B8E437C8A2F7D85CE78B0BB78ABA778A69379A17F799C6A7A97
567B92427C8C2F7D86CD77BABA78B4A678AE9278A87E79A26A7A9C567A95427B8F2F7D87
CD77C4BA77BDA677B69178AF7D78A76979A0557A99427B912F7C88>
<C78771B68672A386739085747C847568847755837841837A2E827CC6867AB4857BA2847B
8F847B7B837C68837C54827D41827D2E827EC58484B38483A183838E82827A8282678281
5381814081802E8180C4838EB2828CA0828B8C81897981886681865381854080832D8082
C28298B181959E81938B809078808E65808B5280893F80862D8083C181A1B0819E9D809B
8A8097777F94647F90517F8D3F7F892D7F84C081ABAF80A79C80A2897F9E767F99647F95
517F903E7F8B2D7F86C080B4AE80AF9C7FAA897FA4767E9F637E99507E933E7F8D2D7F86
BF80BEAD7FB89B7FB1887EAB757EA4627E9D507E963E7E8F2D7F87>
<B99070A88E71978D72868B74738A756188764F87783D867A2B857CB88F79A88D79968C7A
858A7A73897B60877B4E867C3C857D2B847EB78D82A68C82958A818489817288805F8680
4D85803C84802B8380B68C8BA58B8A9489898388877187865F86854D84843B83832B8281
B58B95A48A9293889082878E70868C5E858A4C84883B83852B8283B48B9EA3899B928898
8186956F85915D848E4C838B3B82882B8184B38AA7A288A391879F80869B6E85975D8493
4B838E3B828A2B8185B289B0A288AB9187A67F85A16E849C5C83974B82913A828C2B8186
B289B8A188B39086AD7F85A76D84A15C839B4B82943A818D2B8187>
<AB996F9C97718C94727B92736B90755A8D76498B7838897A29867CAA98789B95788B9379
7B91796A8F7A598C7B488A7C38887D29867EA997819A94808A92807A9080698E7F588B7F
48897F38877F298580A89689999388899187798F86688D85588B84478983388682298481
A7959298929088908E788E8C688C8A578A88478886378684298482A7949A979298888F95
778D92678B8F56898D47878A378587298383A693A397919F878F9C778D98668B94568991
46878D378589298384A593AB9691A7868EA2768C9E668A9956889446869037848A298385
A593B39690AE868EA9768CA3658A9E55889846869237848C298286>
<9DA26F8F9F70809C71719973629674529376438F78348C7A26887C9DA1778F9E78809B78
71987961957952927A438E7B348B7D27887E9CA07F8E9D7F7F9A7F70977F61947F51917F
428D7F348A7F27877F9B9F878D9C867E99856F9684609384519083428D82348981278681
9B9E8F8C9B8D7E988C6F958A5F9288508F87428C853489842786829A9D978C9A957D9792
6E94905F918D508E8B418B88348886278583999D9F8B9A9C7D97996E94955E9192508E8F
418B8B348888278584999CA78B99A37C969F6D939A5E90964F8D92418A8E338789278485
999CAE8A99AA7C96A56D939F5E909A4F8D95418A9033878B278485>
<90AC6F83A87076A47168A0735A9C744B98763E9378308F7A248A7C90AB7683A77775A377
679F78599B794B977A3D927B308E7C25897E90AA7E82A67E75A27D679E7D599A7E4B967E
3D917E308D7F25887F8FA98582A58474A184669D835899824A95823D9181308C81258881
8FA88D81A48B74A08A669C885898874A94863D9084308C832587828EA79481A392739F90
659B8E57978B4A93893D8F87308B852687838EA69B80A399739F96659B935797904A938D
3D8E8A308A872686848DA6A280A29F739E9B659A975796944992903C8E8C308A88268684
8DA6A980A2A5729EA1649A9C5796974992933C8E8E308A89268685>
<84B66E78B16F6BAC715FA77252A274459D763897772D927A228C7C84B57678B0766BAB77
5EA67751A178459C7938967B2D917C238B7E84B47D78AF7C6BAA7C5EA57C51A07D459B7D
38957E2D907E238A7F83B28477AE836BA9825EA481519F81449A813894812D8F80248980
83B18B77AD896AA8885DA386519E854499843894832D8E8224888183B19177AC8F6AA78D
5DA28B509D8A4498883893862D8D8424888283B09876AB956AA7935DA290509D8D44978B
3892882E8D8624888382B09E76AB9B6AA6985DA194509C9144978E38928A2E8C87258784
82AFA576ABA169A69D5DA099509B9444969038918C2E8C88258784>
<79BF6E6DBA6F61B57056AF724AA9733EA275349B7729947A218D7C79BF756DB97562B376
56AE774AA7783FA179349A7A2A937C218C7E79BE7C6DB87B61B27B56AC7B4AA67C3FA07C
34997D2A927E228B7F79BC826DB78161B18156AB804AA5803F9F803498802A9180228A80
78BB886DB68761B08655AA854AA4843F9E833497822B9082238A8178BA8F6DB58D61AF8B
55A9894AA3883F9D863496852B908323898278BA956DB49261AE9055A88E4AA28B3F9C89
3496872B8F8523898378B99B6DB49861AE9555A8924AA28F3F9C8C3495892B8F86238883
78B9A16DB39D61AD9955A7954AA1923F9B8E34958A2B8E87248884>
][<DA716DC6736EB174709D75718777737278755C7977477B79327D7BD86F78C47178B07279
9B747986757A71777A5B787B467A7C327C7DD66E83C36F82AF71819A7281857480707680
5B778046797F317B7FD46C8DC16E8CAD6F8A9871888473876F75865A7684457883317B81
D36B98BF6D95AB6E9397709082728D6D748B597689457886317A83D26AA2BE6C9FAA6D9B
966F988171946D739058758D447789307A84D069ADBD6BA8A96DA4956E9F80709A6C7296
58749144778B307986D069B7BC6AB2A86CAC946EA67F70A06B729B57749443768E307987
CF68C1BC6ABBA86CB4936DAD7F6FA66A719F567498437690307988>
<CB7A6CB97A6EA67B6F937B717F7C736A7C74567D76437E792F7F7BCA7876B87877A57977
927A787E7A796A7B7A567C7B427D7C2F7E7DC87680B67780A4788090787F7C797F697A7F
557B7F417C7F2F7E7FC7758BB57589A276888F77877B7886687984547A83417B822E7D81
C57395B37492A175908E768E7A778C67788A537987407B852E7C82C4729FB2739CA07498
8C759579769266778F53798B407A882E7C84C372A9B173A59F73A08C749C787698657794
52788F407A8A2E7C85C271B2B072AD9E73A88B74A378759E6576985278933F798D2E7B86
C271BCB072B69D72B08A73A97774A364769D5177963F798F2E7B87>
<BD826BAC826D9B816F8981707681726381745181763E81782D817BBC8075AB80769A8076
88807775807863807950807A3E807C2C817DBA7F7EAA7F7E997E7E877E7E747E7E627F7E
4F7F7E3D7F7F2C807FB97D88A97D87977D86857D85737D84617E834F7E823D7E822C7F80
B87C91A77C90967C8E847C8C727C8A607D884E7D863C7E842C7F82B77B9BA67B98957B96
837B93717C905F7C8D4E7D8A3C7D872C7E83B67AA4A57AA1947A9D827B99717B965F7B92
4D7C8E3C7D892C7E84B57AAEA57AA9937AA5827AA0707A9B5E7B964D7C913C7C8B2B7D85
B579B7A47AB1937AAC817AA66F7AA05E7B9A4C7B943B7C8D2B7D86>
<AF8B6AA0896C90886E7F87706E87725C86744B85763A84782A837BAE89739F88748F8775
7E86766D85775C84794A847A3A837B2A837DAD887D9E877D8E867D7D857D6C847D5B837D
4A837E39827E2A827FAC86869D85858D84847C84836B83835A82824982823981812A8180
AB858E9C848D8C838B7B838A6A82885982874981853981842A8182AA84979B83958B8293
7A829069818E59818B4880893880862A8083A983A09A839D8A829A798197698193588090
48808C388088298084A883A99982A58981A179819C688098588094487F8F387F8A297F85
A883B19982AD8981A87880A268809D577F97477F92387F8C297F86>
<A1946A93916C85906E758E6F658C71558A7345897636877827857BA19273939074848E75
748D76658B7755897845887936867B27857DA0917B928F7B838D7C748B7C648A7C54887D
44877D35857E27847E9F8F83918E83828C82738A82638981538781448681358480278380
9E8E8C908C8B818B897289886288875386854485843584832882819D8D948F8C92808A90
71888E62878C52868A4384873583852882829D8D9C8E8B9A80899770889461869152858E
43848A3583872882839C8CA48E8BA17F899D70879961869551859143838D358289288184
9C8CAC8D8AA87F88A46F879F60859A51849542839034828A288185>
<949D6A879A6B7A976D6B956F5D92714E9073408D76328A7825877B949B72879973799674
6B93755C91764E8E783F8C7932897B25867D939A7A86977A78957A6A927B5C907B4D8D7C
3F8B7D32887D25867E9299828596817894816A91805B8F804D8C803F8A80328780268580
9298898595887793876990865B8E854C8B843F898331878226848191979184948F76928E
688F8C5A8D8A4C8B883E8886318684268482919699839496769194688F915A8C8E4C8A8C
3E88893185862683839096A083939D75919A678E96598C934B8A8F3E878B318588268384
9095A88393A47590A0678E9B598B974B89923E878E318589268384>
<88A6697CA26B6F9F6D629C6F5598714795733A91752E8D7823897B88A5717CA1726F9E73
629A745497764793773A90792E8C7B23887D87A3787BA0796E9D7961997A54967A47927B
3A8F7C2E8B7D24877E87A2807A9F806E9B7F61987F54957F46917F3A8E7F2E8A7F248680
86A1877A9E866D9A856097845394844690833A8D822E898124868185A08E799D8D6D9A8B
60968A5393884690863A8C852E898324858285A095799C936C99915F968F52928C468F8A
3A8B872E8885248583859F9C799C9A6C98975F9593529290458E8D3A8B8A2E8887258483
859FA3789BA06C989C5F9598529194458E90398B8C2E8788258484>
<7CAF6971AB6B65A76C59A36E4D9E71419A733595752B9078218B7B7CAE7071AA7165A672
59A2744D9D754198773694782B8F7A22897D7CAD7770A97865A57859A0794D9C7941977A
36927B2B8E7D22897E7BAC7E70A87E64A37E589F7E4C9B7E41967E36917E2B8D7F22887F
7BAB8570A78464A283589E834C9A824095823691812B8C812387807BAA8B6FA68A64A289
589D884C99864094853590842B8B832387817AA9926FA59063A18E589D8C4C988A409488
368F862C8B842386827AA9986FA59663A093579C904C988E40938B358F882C8A85238683
7AA89F6FA49C63A098579B954B979140938D358E8A2C8A87238583>
<71B96866B46A5BB06C50AA6E46A5703B9F73319975279278208C7B71B86F66B3705BAE71
51A97346A3743B9E7631977828917A208B7D71B77666B2765BAD7750A87846A2793B9C7A
31967B28907C218A7E71B67C66B17C5BAC7C50A67C46A17D3B9B7D31957E288F7E21897F
70B48366B0825BAB8150A58145A0813B9A80319480298E8022888070B38966AF885BAA87
50A485459F843B9984329383298D8222888170B38F66AE8D5BA98B50A38A459E883B9886
329385298D8322878270B29566AD935BA89050A38E459D8B3B9889329287298C85228783
70B29A66AD985BA89550A291459D8E3B978B329288298C86228783>
][<CE6D67BB6E69A8706B94726D80746F6C7572587774447977317C7ACC6A71BA6C72A76E74
9370757F72766B747757767943787A307B7CCA687CB86A7CA56C7C926E7C7E717C6A737D
56757D43777D307A7EC86687B66986A46B85906D847D6F83697182557482427781307980
C76591B5678FA2698D8F6C8B7B6E896870885573864176842F7982C6649BB36698A16896
8E6B937A6D9067708D54728A4175872F7883C563A5B365A2A0679E8D6A9A7A6C96666F92
53728E4175892F7885C462AFB264AB9F67A68C69A1796C9C666E9753719240748C2F7886
C362B9B164B49E66AE8B68A8786BA1656E9B52719540748E2F7787>
<C07566AF76689D776B8B786D78796F657A71527B74407C772E7E7ABE7270AE74719C7573
8A7674777775647877517A783F7B7A2D7D7CBD707AAC727A9B737B89747B76767C63777C
51797D3E7A7D2D7C7EBB6F84AB70839971838773827574826276815078813E7A802D7C80
BA6D8EA96F8C98708B8672897473886175864F77853E79832D7B81B96C98A86E95976F93
85719073728E61748B4F76893D78862D7B83B86BA1A76D9E966E9B847097727194607390
4E758C3D78882C7A84B76AABA76CA7956DA2836F9E7171995F73954E75903D778B2C7A85
B76AB4A66CAF956DAA836EA471709F5F72994D74933C778D2C7986>
<B27D65A37D68937D6A827D6C707E6F5E7E714D7F743B7F772B807AB17B6FA27B70927B72
817C736F7C755D7D764C7D783B7E7A2B7F7CB07978A17979907A79807A7A6E7B7B5D7B7B
4B7C7C3B7D7D2B7F7EAF77829F78828F78817E79816D7A815C7A804B7B803A7C802B7E7F
AD768B9E768A8E77897D78886C78865B79854A7A843A7C822A7D81AC75949D75928D7690
7C778E6B788C5A798A4A7A873A7B852A7D82AB749E9C749B8C75987B76956B77925A788E
49798B397B872A7C84AB73A69B74A38B749F7B759B6A769759779349798E397A892A7C85
AA72AF9B73AB8B74A67A75A169769C597796497891397A8B2A7C85>
<A5856597846788846A78836C68836E57837147827437827628827AA4836E96836F878271
77827367827457817647817837817928817CA3817795817886817876807966807A56807B
46807B37807C28817EA28080947F80857F80757F7F657F7F557F7F467F7F367F7F28807F
A17E88937E88847E87747E86657E85557E84457E83367F82287F81A07D91927D90837D8E
747D8C647D8A547D88457E86367E84287F829F7C9A917C97827C95737C92637C8F547D8C
457D8A367E86287E839F7CA2907C9F827C9C727C98637C94537C90447C8C367D88287E84
9E7BAA907BA7817BA2727B9E627B99537C94447C8F357D8A287E85>
<988E658B8C677D8B696F8A6C60896E51877142867333857626847A978C6D8A8B6F7D8970
6E88725F877350867541857733847926837C978A758989767C88776D87785E86794F857A
41847B33837C26837D96897E88887E7B877E6C867E5E857E4F847E41837E33827F26827F
9587868886857A85856C84845D84834F838340828233828126818094868E87858D79848B
6B838A5C83884E82874081853381832681819385968685947884926A838F5C828D4E818B
40818832808526808393859E86849B7883986A82955B81924D818E3F808B328087268083
9284A68584A277839E69829A5B81964D80923F808D328089268084>
<8C966480946773926965906B588E6E4A8C713C8A732F887624867A8B956C7F936E729170
658F71578D73498B753C89772F877924857C8A93747E9175728F76648E77578C78498A79
3C887A2F867C24847D8A927C7D907C718E7C648C7D568B7D49897D3C877E2F857E24847F
8991837D8F83708D83638B825689824888813B86812F8480248380888F8B7C8E8A6F8C89
628A885589864887853B85842F8483258281888F937C8D916F8B8F62898D55888B488689
3B85872F8384258282878E9A7B8C986E8B9561899254878F47868C3B84892F8386258183
878EA17B8C9E6E8A9B61889754879347858F3B848B2F8287258184>
<809F64759D66699A695C976B50946E439170378E732C8B7622887A7F9E6C749B6D68996F
5C9671509372439074378D772C8A7922877C7F9D73739A746897755C94764F9277438F78
378C7A2C897B22867D7E9B7A73987A67967B5B937B4F907C438E7C378B7D2C887E23857F
7E9A817297816795815B92804E8F80428D80378A802C87802384807D9988729688669487
5A91864E8E85428C843789832C86822384817D988F71968E66938C5A908B4E8E89428B87
3788852C86832383827C989671959465929259908F4D8D8D428A8A3788882C8585238382
7C979D71959A659297598F944D8C90428A8D37878A2C8586248383>
<74A9646AA5665FA268549E6B489A6D3D9670339273298E7620897A74A86B6AA46C5FA16E
549D704899723D9574339176298D7920887C74A67269A3735E9F74539B754898763D9478
339079298B7B21877D73A57869A1795E9E79539A7A48967B3D927B338E7C298A7D21877E
73A37F68A07F5E9C7F53997F48957F3D917F338E7F298A7F22867F72A286689F855D9C84
5298844794833D9082338D822A898122858172A28C689E8B5D9B8A5297884793873D9085
338C842A888322858172A192689E915D9A8F52968C47938A3C8F88338B862A8884228482
72A198689D965D9A9352969047928D3C8E8B338B882A8785228483>
<6AB26360AE6556AA684BA56A41A16D379B702E96732690761F8B7A69B16A5FAD6B56A96D
4BA46F419F71389A732E9476268F791F8A7B69B0705FAC7155A7724BA374419E75389877
2F9379268E7B20897D69AE775FAA7755A6784BA178419C7938977A2F927C278D7D20887E
69AD7D5FA97D55A57D4BA07D419B7D38967E2F917E278C7F20877F68AC835FA88255A382
4B9F81419A813895812F9081278B8021868068AB895FA78855A3874B9E86419985389484
2F8F83278A8221868168AB8F5FA68D55A28C4B9D8A4198883894862F8F85278A83218582
68AA945FA69255A1904B9D8D41988B3893892F8E86288A84218582>
][<C26860B16A639F6C668C6E6979706C66736F5375724178752F7B79C0656BAF676D9D6A6F
8B6C70786E726571745374764076782F7A7BBE6276AD65769C68778A6A78776D79646F7A
52727A40757C2E797DBD6080AC63809A667F88687F766B7F636E7F51717F3F757F2E787F
BB5E8AAA6189996488876786756A85626D845070833F74822E7881BA5D94A96092986390
86668E74698C626C89506F873E73852E7782B95C9EA85F9B976298856595736892616B8E
4F6F8B3E72882E7684B85BA8A75EA49661A084649C726797606A934F6E8F3E728A2E7685
B75AB1A75DAC9560A78463A272669D606A974E6E923D728C2D7686>
<B56F60A5716395726683746972756B60776E4E79713C7B752C7D79B36D6AA46E6C94706E
8272707173725F75744D77763C79782C7C7BB26A74A26C75926E768170777072785E7479
4D767A3C787B2C7B7DB0687EA16A7E916C7E806E7E6E707E5D727E4C757E3B777E2C7A7F
AF67879F69878F6B867F6D856D6F845C71834B74823B77812B7A80AE65919E678F8E698E
7D6C8C6D6E8A5B70884B73863B76842B7982AD649A9D66988D68957D6B926C6D905B708D
4A728A3A75872B7983AC63A49D65A08D689D7C6A996B6C955A6F914A728D3A75892B7884
AC62AD9C65A88C67A47B699F6B6C9A5A6E954A71903A758B2B7885>
<A877609A78638A78667A79686A7A6B597B6E497C71387E75297F79A7756999766B89766D
79776F697871587A73487B75387C78297E7BA67272977374887575787676687777587878
487A7A387B7B297D7DA4707C96727C87737C77747D67757D57777D47797E387A7E297D7E
A36F85957084867184767383667483567682467881377A81297C80A26D8E946F8D85708B
75728A657388557587467785377983297B81A16C97936E95846F9274719065728D55748B
467688377886297B83A06B9F926D9D836E9974709664719354738F45768B377888297B84
A06BA8926CA4836EA0736F9C64719754739345758E367889297A85>
<9B7F5F8E7F63807F65717F68627F6B53806E4380713581752781799A7D688D7D6A7F7D6D
717D6F617E71527E73437F75347F7827807B997B718C7B727E7B74707C75607C76517D78
427D79347E7B277F7C98797A8B797A7D7A7B6F7A7B607B7C517C7C427C7D347D7D277F7E
9777828A78827C78826E79825F7A81507A81427B80347D80277E8096768B89768A7B7789
6D78885E7886507985417B84347C82277D819575938875927A76906C778E5E788B4F7989
417A87337B85277D8295749B8875997A75966C76935D77904F788D41798A337B87277D83
9473A38774A079759D6B75995D76954E789140798C337A88277C84>
<8F875F8387627686656885685A856B4C846E3E84713183752583798E856882856A75846C
68846E5A83704C83733E837531827825827B8D83708183717482736782745982754B8177
3D817931817A25817C8C817880817973817966817A58807B4A807B3D807C30807D25817E
8B80807F8080727F80657F80587F804A7F803D7F80307F7F25807F8B7F887F7E87727E87
657E86577E854A7E843D7E83307F82257F818A7E907E7E8F717D8D647D8B577D89497D88
3C7E86307E84257F82897D977D7D96717D93637C91567D8E497D8B3C7D88307E86257E83
897C9F7D7C9C707C99637C96567C92497C8E3C7D8B307D87257E83>
<83905F788E626C8D655F8C68528A6B46896E3988712D8675228579828E67778D696B8B6B
5F8A6D5289704588723986752D857823847B828C6F768B706B8A725E8973528775458676
3985782D847A23837C818A767689776A88785E877951867A44857A39847B2D837D23827E
80897E75887E69877E5D867E51857E44847E38837F2D827F23827F7F8885748785688684
5C85845084834483823882822D82812481807F878C74868B68858A5C8489508387448286
3881842D81832481817E86947385926884905B838E4F828B4381893881872D8084248082
7E859A7385986784955B83924F828F43818C3880892D8086248083>
<78995F6D97626295655792674B906A3F8E6E348B712A89752187797797666D956862936B
57916D4B8F6F3F8C72348A742A887721867B77956D6C936F619170568F724B8D743F8B76
3489782A877A21857C7694756B9275619076558E774A8C783F8A7A34887B2A867C22847E
75927C6B907C608E7C558C7D4A8B7D3F897D34877E2A857E22837F7591826A8F82608D82
548B82498A813E88813486812A84802283807490896A8E895F8C88548B864989853E8784
3485832A8482228281748F906A8E8F5F8C8D548A8B4988893E86873485852A8384228282
738F96698D945F8B9254898F49878D3E868A3484872A8385238182>
<6DA25E639F61599C644F996744966A3A936D308F71278C751F88796CA065639E67599B6A
4E986C44946F3A9171308E74278A771F877B6C9F6C629C6E58996F4E96714493733A9075
308C7727897A20867C6B9D73629A745897754E9576439277398E79308B7A27887C20857D
6B9B7961997A57967A4D937B43907B398D7C308A7D28877E21857F6A9A80619880579580
4D9280438F7F398C7F3089802887802184806A99866197865794854D9184438E83398B83
3089822886812183816A998C60968B56938A4C9088438E87398B85308884288583218381
6A989260969156938F4C908C438D8A398A88308786288584218382>
<62AB5E59A86050A46347A0663D9C6A34986D2C9371248E751D8A7962AA6459A66650A369
469F6B3D9A6E3496712C9174248D771E897A61A86B58A56C4FA16E469D703D9972349474
2C9077258C791F877C61A67158A3724F9F73469C753D97763493782C8F7A258B7B1F877D
61A57758A2784F9E78469A793D967A34927B2C8E7C258A7D1F867E60A47D58A07D4F9D7D
46997E3D957E34917E2C8D7F25897F20857F60A383589F834F9C824698823D9481349081
2D8C8126888120858060A289589F884F9B874697863D9385348F842D8B83268882208481
60A18E579E8D4F9A8B4697893D9388348F862D8B84268783208482>
][<B7625BA6655E966861846A65736D6861706B4F736F3E76732D7A77B55F65A5626794656A
83686C726B6E606E714E71743D75762D797AB35C6FA35F719362728266737069755F6C76
4E70783D737A2D787CB15A79A15D7A91607A80647B6F677B5E6B7C4D6E7C3C727D2D777E
B05783A05B83905E827F62826E65815D69814C6D803C72802D7680AE558D9F598C8F5D8A
7E60896D64875C68864C6C853C71832D7681AD54979E58958E5B927D5F906C638D5C678B
4B6C883B70862D7583AC53A09D579D8D5A9A7D5E966C62935B668F4B6B8C3B70882C7584
AC52A99C56A58D5AA17C5D9C6B61985B66944A6A8F3B6F8A2C7485>
<AA6A5A9B6C5E8C6E617C6F656B72685A746B4A766F3A79732B7C78A967649A69678B6B69
7B6D6C6A6F6E5A72714975733978762A7B7AA7646E99666F8A69717A6B73696E74597076
49737839767A2A7A7CA66177976478886779786979686C7A586F7B48727C39757D2A797E
A45F81966281876581776780676A80576E804771803875802A797FA35D8A956089866388
766687666986566C854770843874822A7881A25C93945F9285629075658E66688B566C89
476F873873852A7782A15B9C935E9A846197756494656791556B8E466F8A3873872A7784
A15AA5935DA284609E74639A656796556A91466E8D3772892A7784>
<9E715A91725E82746173756464766854786B457A6F367C73287E789D6E638F7066817169
72736B63746E537670447873357B76287D7A9B6C6D8E6D6E806F70717172627373537575
447777357979287C7C9A69768D6B777F6D78706F7861717952737A43767B35787C287B7D
99677F8C697F7E6B7F6F6D7F60707F51727F43757F35787F287B7F9865878B68877D6A86
6E6C85606E84517183427483357782287A819764908A668F7C698D6D6B8B5F6D8A507088
427386347684287A829663998965967B68946D6A915E6C8E506F8C427289347686287983
9662A189659E7B679A6C69975E6C934F6F8F42728C347588287984>
<92795A86795E797A616B7B645C7C684E7C6B407D6F327F73268078917663857766787868
6A796B5C7A6D4D7B703F7C73327D76267F7A90746B84756D77766F6977715B78734D7975
3F7B77327C79267E7C8F71748272757574766875775A76784C78793F797B327B7C267D7D
8E6F7C81717D74727D67737D59757E4C777E3E787E317A7E267D7F8D6E85806F84747184
6672835974834B75823E7781317A81267C808C6C8D806E8C736F8B6671895873884B7586
3E7785317983267C818B6B957F6D93726E9165708F58728C4A748A3D7687317985267B82
8B6B9D7F6C9A726E97656F945771914A738D3D768A317887267B83>
<86815A7B815E6F816162816455816848816B3B816F2E8273238278857E627A7E656E7F68
617F6A547F6D477F703A80732E807624817A847C6A797C6C6D7D6E617D70547D72477E74
3A7E762E7F7924807B837A72787A746C7B75607B76537C77467C793A7D7A2E7E7B247F7D
82787A77787B6B797B5F7A7C527A7C467B7D3A7C7D2E7D7E247F7F8276827677826B7882
5E7881527981457A81397B802E7D80247E8081758A7676896A76885E7787517886457985
397A832E7C82247E8180749175759069768E5D768C51778A457988397A862E7B84247D82
8073987574966975945D769151778E44788B3979882E7B85247D83>
<7B895A70885D6588615A87644D866841866B36856F2B85732184787A8762708664658667
59856A4D856D4184703684732B837622837A7985696F846B64846D58836F4D8371418374
3682762B827922827B7882716E82726382735882754C81764081783581792B817B22817D
7881786D807962807A57807A4C807B40807C35807D2B807D22807E777F7F6C7F80627F80
567F804B7F7F407F7F357F7F2B7F7F238080767E876C7E86617E85567E854B7E84407E83
357E822B7F81237F81767D8E6B7D8D617D8B567D894A7D883F7D86357E852B7E83237F81
757C946B7C93607C90557C8E4A7C8C3F7D89357D872B7E84237F82>
<70925A66905D5C8F60518D64468C673C8A6B31896F2887731F86786F9061668E645C8D66
518C69468A6C3B896F31877228867620857A6F8D68658C6A5B8B6C508A6E4688713B8773
31867628857820847B6E8B6F648A715A89725088744587753B867731857928847B21837D
6D8A766489775A88784F877945867A3B857B31847C28837D21827E6C887D63877D59867D
4F857E45847E3B837E31837E28827F21817F6C87836286835985834E84824483823A8381
3182812981812181806C868A6285895884884E83874483863A8284318183298182218081
6B859062858F58848D4E838B4482893A8187318185298083228082>
<659B595D985D5396604A9463409267368F6B2D8C6F258A731E87786599605C9763539566
49926840906B368D6F2D8B722588761E867A6497675B956952936B49906D3F8E70368C72
2D89752587781F857B64956D5B936F529171498F723F8C74368A762D887826867A1F847D
6393745A9175518F76488D773F8B7836897A2D877B26857C20837E63917A5A907B518E7B
488C7C3F8A7C36887D2E867E26847E20837F6290805A8F80518D80478B803E8980368780
2E8580268480208280628F86598E86508C85478A843E88833586832D8582268381208281
628F8C598D8B508B8A4789883E87873686852E8484268383208181>
<5BA45953A15C4B9E5F429B6339976731946B29906F228C731D89785AA25F539F624A9C65
42996839966B31926E298E72238B761D887A5AA065529D674A9A6A41976C39946F319072
2A8D752389781E867B5A9E6B529B6D49996F419571399273318F752A8B7823887A1E857C
599C71519A73499774419475399177318E792A8A7A24877C1E857E599B77519878499679
41937A398F7B318C7C2A897D24867E1F847F599A7D51977E49957E41927E398E7E318B7E
2A887F24867F1F8380589983519683499482419182398E81318B812A88812485811F8380
589888509688499387409086398D84318A832A87832485821F8381>
][<AC5D559D60598D635D7D66616C69655B6C694B706D3B74712C7976AA595F9B5C628C5F65
7C63686B676B5B6A6E4A6E713A73752C7779A8556999596B8A5D6D7A606F6A64715A6873
4A6D763A72782C777BA65273985674895A75795E76696277596779496B7A3A707B2C767D
A54F7D96547D87587D785C7D68607D58657E486A7E396F7E2C757FA34D86955186865685
775A84675F83576483486982396F812C7481A24B9094508E85548D76598B665E89576388
486886396E842C7482A14999934E97855394755891665D8F56628C476889396D862C7483
A148A2934D9E84529B755797665C9456619047678C396D882C7384>
<A0645592665984685D756B61656E6555716946746D377771297B779F605F916362836565
746868646B6B556F6E457271377675297A799D5C688F606A81636C72666E636971546D73
45707536757829797B9B59718E5D73806074716475626777536B78446F7936737B29787D
9A577B8D5A7B7F5E7C70627C61657C526A7D446E7D36737E29777F9955848B58847E5C83
6F6083616482526882436D8136728129778098538D8A578C7D5B8A6E5F89606388516786
436C853671832976829751968A55947C59916E5D8F5F628D51668A436B88357185297683
96509E89549B7C58986D5D955F619150668E436B8B357087297684>
<956B55886D597B6E5D6D70615E73654F756941776D337A71277D7793675E8769617A6C64
6C6E675D706A4F736E417671337975277C7992646786676979696C6B6B6E5C6E704E7172
407475337778277B7B9061708464717767736A69745C6C764D6F7740737933767B277A7D
8F5F7983627976647A68677B5B6B7B4D6E7C3F727D33757D277A7E8E5C81826081756381
6866815A69814C6D803F71803275802779808D5B8A815E897461886764875968864C6C85
3F70843274822778818C5992805D9174608F66638D59678B4B6B893F6F87327384277882
8C589A805C98735F9566629258668F4B6A8C3E6E89327386277883>
<8972557E735971755D6476615778654979693C7B6D307D72247F77886F5E7D7061707264
64746756756A49776D3C7971307C75257E79876C667B6E686F6F6B63716D567370487572
3C78752F7A78257D7B86696E7A6B706E6D72626F735571754874773B76782F797A257C7D
8467777969786D6B79616D7954707A47727B3B757C2F787D257C7E83657F78677F6C697F
606C7F536E7F47717F3B747F2F787F257B808363877765866C68865F6A85536D84467083
3B73822F7782257A8182618F77648D6B678C5F698A526C89466F873A73852F7683257A82
8260967663946B66925E698F526C8D466F8A3A72882F7685257A83>
<7E7A55747B59687B5D5C7C61507D65437E69377F6D2C80722281777D775D737860677964
5C7A674F7B6A437C6D377D712C7F752380797C746572756866766A5B776C4F796F437A72
377C742C7D77237F7B7B716D70736F6574715A75724E7774427876377A782C7C7A237E7C
7A6F756F70766472775974784E757942777A37797B2C7B7C237E7E796D7C6F6F7D64707D
58727D4D747E41767E36787E2C7A7F237D7F786B846E6D84636F835871834C7382417582
3677812C7A81237C80786A8B6D6C8A636E895770884C72864174853677842C7983247C81
7769926D6B91626D8F576F8D4C718A4073883676862C7984247C82>
<7382556982595F825D5482614982653E826933826D298372208377727F5D697F605E8063
54806648806A3D806D338171298175218279717C64687D675E7D69537E6C487E6E3D7F71
337F7429807721817B707A6C677A6D5D7B6F527C71477C733D7D75337E77297F7A21807C
6F77736678745C7975517A76477B783C7C79327D7B297E7C227F7E6F767A65777B5B777B
51787C46797C3C7B7D327C7D297D7E227F7F6E74816575815B76815077814678803C7A80
327B80297D80227E806D73886474875A75865076854677843C7983327A83297C82227E81
6D728E64738D5A748C50758A4577883B7886327A85297B83227D82>
<698A55608A5956895D4C88604288643887692F866D2685721F857768885C5F875F568762
4C866642856938856D2F84712684751F84796785635E85665584684B846B41846E388371
2F83742683771F837B66826A5D826C54826E4B82704182723782742F827727827920827C
6580715D80725380744A80754180773780782F807A27817C20817D657E775C7F78537F79
4A7F7A407F7B377F7C2F7F7D27807E20807F647D7E5B7D7E527E7E497E7F407E7F377E7F
2F7E7F277F7F208080647C845B7C84527C84497D83407D82377D822F7E81277E81217F80
637B8A5B7B8A527C89497C87407C86377D852F7D83277E82217F81>
<5F93555692584E905C458F603C8D64338B692B8A6D2388721D87775E905B568F5E4D8E62
448C653C8B6933896C2B88702486751E85795D8E62558D644D8C67448A6A3B896D338870
2B86732485771E847A5C8B68548B6A4C8A6C44886F3B87713386742B85762484791E837C
5C896F5489704B88724387733B86753285772B847924837B1F827D5B88755387764B8677
4385783A847932837A2B837C24827D1F827E5B867B53867C4B857C42847D3A837D32827E
2B827E25817F1F817F5A85815284814A84814283813A82803282802B81802581801F8180
5A84875284864A83864282843A81843281832B8082258081208081>
<559C544D9A5746985B3E955F3692642E9068278D6D218A721C8877549A5A4D985D459661
3D93643690682E8E6C278B702189751C87795397604C95634593663D9169358F6C2E8C70
288A732287771D857A5395664B936944916B3D8F6D358D702E8A732888762286791D847C
52936C4B916E448F703C8D72358B742E897628877822857B1E847D5291724B8F74438E75
3C8C76358A782E887928867B22847D1E837E518F784A8E79438D7A3C8B7A35897B2E877C
28857D23837E1E827F518E7E4A8D7E438C7E3C8A7E35887E2E867F28847F23837F1E8280
518D834A8C83438B823C89823587812E85812884812382811F8180>
][<A2564F935A54855D5876615D666561566966476E6B3872702B7876A0515992565D835A60
745E6465626756676B466C6F3871732B76789E4D63905266825668735B6B645F6E556570
466A733870772B767A9C496D8E4E6F805370725872635D74546376456878376E7A2B757C
9A46778D4B777F5078715679625B7A53617B45677C376D7D2B747E9943808C48807E4E80
705480615980535F80446680376D802B73809740898B46887D4C876F5286615885525E84
446583376C822B7381963E928A44907D4A8E6F508C60578B525D89446487376B852B7283
963C9B8943987C49956E4F9260568F525C8D44638A376B872B7284>
<975D508A60547C63586E665D5F6A61516D6642716B347570287A76955859885C5D7B5F60
6D63645F6767506B6B426F6F347473287978935462875865795C686C606A5D646D4F6970
416E7334737628787A91516C85556D78596F6A5D715C62734E6775416C7734717A28777C
904D75845276775677695B785C60794E657A406B7B34707C28767E8F4A7E824F7E76547E
68597E5B5E7E4D647F406A7F34707F2876808E4887824D867552856857845A5D844D6383
406982336F822975818D468F814B8E74518C67568A5A5C894C6287406886336E84297582
8C4497804A95744F926755905A5B8D4C618B3F6788336E86297483>
<8C6450806654736959666C5D596E614B71663E756B317870267C768A60597F635C726560
656864586C674A6F6B3D736F317773267B78895C627D5F6471626764666A57696D4A6D70
3D7173317676267A7A87586A7C5C6C705F6E636370566772496B753C707731747926797C
8655737A59746E5D75626177556578486A793C6E7B30737C26797E85527C79567C6E5B7C
615F7D55637D48687E3C6D7E30737F26787F8450847954836D5983615D83546282486782
3C6C81307281267781834E8C78528B6C5789605C885461874766863B6C84307183267782
824C937751926C5690605B8D53608B4765893B6B87307185277783>
<826B50766D556B6F595E715D52736245766639786B2D7B70237E7680675975695C696C60
5D6E6351716745746B39776F2D7A73247D787E63617466646869675D6B69506E6C44726F
3875732D7976247C7A7D606972636B67666D5C696F506C724470743873762D7779247B7C
7C5D717160736663745B67754F6A77436E7838727A2D767C247B7D7B5A79705E7A65617B
5A657B4E697C436D7C38717D2D767E247A7F7A58816F5C81655F815963814E6780426C80
3870802D75802479807956896F5A88645E875962864D6685426B84376F832D7482257981
7954906E598E645D8D58618B4D6589426A87376F852D7484257982>
<7773516D745562755956775D4B78623F7A66347C6B2A7E70218176756F586B705C617260
5674634A76673F786B347A6F2A7D73227F78746B606A6D63606F665571694A746C3F766F
3479722A7B76227E7A736868696A6A5F6D6C546F6F4972713E74733477762A7A79227D7C
72656F6867715E6A73536D744970763E73773476792A797B227D7D7162776765785D6879
536B7A486E7A3E717B34757C2A787D237C7F70607E66637F5C667F52697F486D7F3D707F
34747F2A787F237B806F5E856662855C6584526884476C833D6F823373822A7781237B81
6F5D8C65608B5B648A516788476B873D6F853373842A7783237B81>
<6C7A51637B55597C594F7D5D447E623A7F6630806B2781711F83766B775862785C58795F
4E7A63447B673A7D6B307E6F2780732081786A735F6175625776654D776843796B397B6F
307C72277E7620807A69706660726956736B4D756E437770397973307B76277D78207F7C
686D6E5F6F6F5671714C7373427575397777307A79287C7B217E7D676B755E6D76556F77
4B717842747939767A30797C287B7D217E7E66697C5D6B7C546D7C4B707D42727D38757E
30787E287A7F217D7F6567825D6A82546C824B6F81417181387481307781287A80217D80
6565895C6888536B874A6E864170853873842F7683287982217C81>
<6282515A825551835948835D3E83623583662C836B2484711E8476617F57597F5B50805F
4780623E816635816A2C826F2582731E8378607C5E587C614F7D64467E683D7E6B347F6E
2C80722581761F827A5F7965577A674E7B6A467B6D3D7C6F347D722C7E752580781F817B
5E766C56776E4E78704579713C7B74347C762C7D78257F7A1F807D5D73725575744D7675
4478763C7978347A792C7C7B257E7C207F7E5D717955737A4C757A44767B3C787C34797C
2C7B7D257D7E207F7F5C707F54727F4C737F44757F3C777F33787F2C7A80257C80207E80
5C6E855470854C72844474833B76833378822C7A82257C81207E81>
<588B50518A5449895841895D38886130876628876B2286711C867657875750875A48875E
40866238866630856A29856F2285731D847856845D4F84604784633F846737846A30836E
2983722283761D837A5581634E82664782693F826B37826E3082712982752382781E827B
557F6A4D7F6C467F6E3E80703780722F807529807723817A1E817D547C704D7D71457E73
3E7E75377E762F7F78297F7A23807C1E817E537A764C7B77457C783E7D79367D7A2F7E7B
297E7C237F7E1F807F53787C4C7A7C457B7D3D7B7D367C7D2F7D7E297E7F237F7F1F7F80
5377824C7882447A813D7A81367B812F7C80297D80237E801F7F80>
<4F934F4892534191583A8F5C338D612C8C66258A6B1F88711B87764D9055478F59408E5D
398D61328B652B8A6A25886F2087731C86784D8D5B468D5F408C62398A663289692B886D
2586722085761C857A4C8B61468A643F896738886A32876D2B86712685742184781D837B
4C886745886A3E876C38866F3185712B847426847721837A1D837C4B856D45856F3E8571
3884733184752B837726827921827C1D827E4A83734484743E83763783773182782B827A
26817C21817D1E817E4A81794482793D827A37827B31817C2B817D26817E21817E1E817F
4A807E43817E3D817E37817E31817F2B807F26807F2180801E8080>
]]] put
dup /DecodeABC [
{{0 0.00392 0.00784 0.01176 0.01569 0.01961 0.02353 0.02745 0.03137 0.03529
0.03922 0.04314 0.04706 0.05098 0.0549 0.05882 0.06274 0.06667 0.07059 0.07451
0.07843 0.08235 0.08627 0.09019 0.09412 0.09804 0.10196 0.10588 0.1098 0.11372
0.11765 0.12157 0.12549 0.12941 0.13333 0.13725 0.14117 0.1451 0.14902 0.15294
0.15686 0.16078 0.1647 0.16862 0.17255 0.17647 0.18039 0.18431 0.18823 0.19215
0.19608 0.2 0.20392 0.20784 0.21176 0.21568 0.2196 0.22353 0.22745 0.23137
0.23529 0.23921 0.24313 0.24706 0.25098 0.2549 0.25882 0.26274 0.26666 0.27058
0.27451 0.27843 0.28235 0.28627 0.29019 0.29411 0.29803 0.30196 0.30588 0.3098
0.31372 0.31764 0.32156 0.32549 0.32941 0.33333 0.33725 0.34117 0.34509 0.34901
0.35294 0.35686 0.36078 0.3647 0.36862 0.37254 0.37646 0.38039 0.38431 0.38823
0.39215 0.39607 0.39999 0.40392 0.40784 0.41176 0.41568 0.4196 0.42352 0.42744
0.43137 0.43529 0.43921 0.44313 0.44705 0.45097 0.4549 0.45882 0.46274 0.46666
0.47058 0.4745 0.47842 0.48235 0.48627 0.49019 0.49411 0.49803 0.50195 0.50587
0.5098 0.51372 0.51764 0.52156 0.52548 0.5294 0.53333 0.53725 0.54117 0.54509
0.54901 0.55293 0.55685 0.56078 0.5647 0.56862 0.57254 0.57646 0.58038 0.5843
0.58823 0.59215 0.59607 0.59999 0.60391 0.60783 0.61176 0.61568 0.6196 0.62352
0.62744 0.63136 0.63528 0.63921 0.64313 0.64705 0.65097 0.65489 0.65881 0.66273
0.66666 0.67058 0.6745 0.67842 0.68234 0.68626 0.69019 0.69411 0.69803 0.70195
0.70587 0.70979 0.71371 0.71764 0.72156 0.72548 0.7294 0.73332 0.73724 0.74117
0.74509 0.74901 0.75293 0.75685 0.76077 0.76469 0.76862 0.77254 0.77646 0.78038
0.7843 0.78822 0.79214 0.79607 0.79999 0.80391 0.80783 0.81175 0.81567 0.8196
0.82352 0.82744 0.83136 0.83528 0.8392 0.84312 0.84705 0.85097 0.85489 0.85881
0.86273 0.86665 0.87057 0.8745 0.87842 0.88234 0.88626 0.89018 0.8941 0.89803
0.90195 0.90587 0.90979 0.91371 0.91763 0.92155 0.92548 0.9294 0.93332 0.93724
0.94116 0.94508 0.94901 0.95293 0.95685 0.96077 0.96469 0.96861 0.97253 0.97646
0.98038 0.9843 0.98822 0.99214 0.99606 0.99998 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00391 0.00781 0.01172 0.01563 0.01953 0.02344 0.02734 0.03125 0.03516
0.03906 0.04297 0.04687 0.05078 0.05469 0.05859 0.0625 0.06641 0.07031 0.07422
0.07812 0.08203 0.08594 0.08984 0.09375 0.09765 0.10156 0.10547 0.10937 0.11328
0.11719 0.12109 0.125 0.1289 0.13281 0.13672 0.14062 0.14453 0.14844 0.15234
0.15625 0.16015 0.16406 0.16797 0.17187 0.17578 0.17968 0.18359 0.1875 0.1914
0.19531 0.19922 0.20312 0.20703 0.21093 0.21484 0.21875 0.22265 0.22656 0.23046
0.23437 0.23828 0.24218 0.24609 0.25 0.2539 0.25781 0.26171 0.26562 0.26953
0.27343 0.27734 0.28125 0.28515 0.28906 0.29296 0.29687 0.30078 0.30468 0.30859
0.3125 0.3164 0.32031 0.32421 0.32812 0.33203 0.33593 0.33984 0.34374 0.34765
0.35156 0.35546 0.35937 0.36328 0.36718 0.37109 0.37499 0.3789 0.38281 0.38671
0.39062 0.39453 0.39843 0.40234 0.40624 0.41015 0.41406 0.41796 0.42187 0.42577
0.42968 0.43359 0.43749 0.4414 0.44531 0.44921 0.45312 0.45702 0.46093 0.46484
0.46874 0.47265 0.47655 0.48046 0.48437 0.48827 0.49218 0.49609 0.49999 0.5039
0.5078 0.51171 0.51562 0.51952 0.52343 0.52734 0.53124 0.53515 0.53905 0.54296
0.54687 0.55077 0.55468 0.55859 0.56249 0.5664 0.5703 0.57421 0.57812 0.58202
0.58593 0.58984 0.59374 0.59765 0.60155 0.60546 0.60937 0.61327 0.61718 0.62108
0.62499 0.6289 0.6328 0.63671 0.64062 0.64452 0.64843 0.65233 0.65624 0.66015
0.66405 0.66796 0.67186 0.67577 0.67968 0.68358 0.68749 0.6914 0.6953 0.69921
0.70311 0.70702 0.71093 0.71483 0.71874 0.72264 0.72655 0.73046 0.73436 0.73827
0.74218 0.74608 0.74999 0.75389 0.7578 0.76171 0.76561 0.76952 0.77343 0.77733
0.78124 0.78514 0.78905 0.79296 0.79686 0.80077 0.80468 0.80858 0.81249 0.81639
0.8203 0.82421 0.82811 0.83202 0.83593 0.83983 0.84374 0.84764 0.85155 0.85546
0.85936 0.86327 0.86717 0.87108 0.87499 0.87889 0.8828 0.88671 0.89061 0.89452
0.89842 0.90233 0.90624 0.91014 0.91405 0.91795 0.92186 0.92577 0.92967 0.93358
0.93749 0.94139 0.9453 0.9492 0.95311 0.95702 0.96092 0.96483 0.96873 0.97264
0.97655 0.98045 0.98436 0.98827 0.99217 0.99608 0.99998}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
] put
dup /MatrixABC [
0.625 0.625 0.625
0.3712 0 0
0 0 -0.928
] put
dup /RangeLMN [0 1.1856 0 1 -0.464 1] put
dup /DecodeLMN [
{-0.1856 add 100 mul 0.625 div
dup 8 le {27 24389 div mul}
{16 add 116 div dup dup mul mul} ifelse
0.4821087968 mul} bind
{100 mul 0.625 div
dup 8 le {27 24389 div mul}
{16 add 116 div dup dup mul mul} ifelse
0.5000076295 mul} bind
{0.464 add 100 mul 0.625 div
dup 8 le {27 24389 div mul}
{16 add 116 div dup dup mul mul} ifelse
0.4124589914 mul} bind
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0.0210579822 0.0218397835 0.0180157552] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
} ifelse

/CSA add_res
/CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
49.5 -183.501 mo
-1.503 -183.501 li
-1.503 -237.501 li
49.5 -237.501 li
49.5 -183.501 li
f
260.739 168.993 mo
241.659 168.993 li
241.659 141.336 li
241.659 141.21 241.605 141.075 241.515 140.985 cv
241.416 140.895 241.29 140.841 241.155 140.841 cv
236.07 140.841 li
242.334 137.709 li
237.231 134.496 li
238.349 133.533 li
252.387 133.533 li
252.522 133.533 252.648 133.479 252.747 133.389 cv
252.837 133.299 252.891 133.164 252.891 133.038 cv
252.891 122.355 li
252.891 122.085 252.666 121.86 252.387 121.86 cv
252.117 121.86 251.892 122.085 251.892 122.355 cv
251.892 132.534 li
239.508 132.534 li
244.638 128.115 li
234.562 132.534 li
232.299 132.534 li
232.173 132.534 232.047 132.588 231.948 132.678 cv
231.858 132.777 231.804 132.903 231.804 133.038 cv
231.804 133.744 li
231.525 133.866 li
231.804 134.049 li
231.804 139.364 li
228.995 140.841 li
209.736 140.841 li
209.736 114.993 li
260.739 114.993 li
260.739 168.993 li
232.803 138.839 mo
232.803 134.704 li
236.304 136.998 li
232.803 138.839 li
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[51.4811 0 0 54.48 209.498 99.7627 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 214 
/H 227 
/M[214 0 0 -227 0 227 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 214 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 214 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 214 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 214 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcPfNO9"kQi;oYQ\,atYq#H!HhuM4,d/]"'q>p0gr;u<dW;s1'dfBFKJcOI(dfJ)$
JcO7#YQ1['liI%dncAUgL]Gj'dfJ>+JcPWIdfHoXUB'3QoDt!Qb5gl0r;u<djoBu5o)R5?^&XZ'k5jrN
Q2ni'dfJh9JcP-;liI%dliG'*PlU4QjoM"Q]`?L^oDjICjT*a1bQ.YCO9"kQq>pNrliEg\^]<j)klU>T
r;_ELkQ()QklU>TeGt^3ncAakklU>TXT5m3q#U6lkl^\^quQctK`L'3n,_bTn,_;EM?*GQp]9U\n,]lr
Z2j@pklU\^pAp3Qg&UpLp]B[^p]C6lirF]3!!2TjklU>T])\l3n,_bTn,\^QdfAk<klU>Tl2ZD9qZ-Em
p]B[^p]C6l_>pA3n,`"[q?$-eRK1P3n,_bTn,`%ZJcPECn,_bTn,^W2SH/Hdp]C0lo)nahq#R/hdK&n?
q#^Ksj955Zo`=sjJcPWIoE"ahn,rUlo`Osjo`<PBrrAkqoE"aho)nsor<2cqp]C*hWW:9Dp]:<pq#gQu
j9>;\r;ucqJcPHDoE"ahr<)*`p]C*hf`7TDoE"ahq?-Hor<2cqp]C*hYlMcDoE"ahn,rUlo`OsjquQWp
M#crDp]:<pq#gQuj9>;\r;ucqhuK)DoE"ahr<)*`p]C*h\,a8DoE"ahn,rUlo`P$lrrVioO9"GDoE"ah
n,rUlo`Osjo`=4UO9#%Vr;ls$q?-[!j9>;\r;ucq^AtbDoE"ahr<)*`p]C*hQN5qDoE"ahn,rUlo`Osj
o`=I\M#dAQqZ6Kon,rUlo`Osjo`<&4YlOP"r;ucsr<2Eiq??Wrr;ucqScI^LoE"mlr<)iur<;s#r<N-&
r<;s!r<*!"q#U-gM?*GQquQ`tq#gQuoEG0to`b9sp]LHrq#S_?Z2jLtr;ucsr<2`rr<E9*pBCKup]LHr
q#R;lg&UpLquZg!r<2p"r<E$%r<W3(r<E$#r<3'$q#UBnK)blPo`>!mr<)iur<;s#r<N-&r<;s!r<*!"
q#StFrrB/$oE"mlq#gQuoE>4!rW`$!r<2ltr;ucqWW:QLoE"mlq#gQuoEG0to`b9sp]LHrq#Q'Ir;cWo
quZg!r<2p"r<E$%r<W3(r<E$#r<3'$q#T.KV?$5hr;up"q#pX"rW`6(r<N-&r<;s!r<*!"q#R`#c2dJ;
r;ucsr<2`rr<Dour<2ltr;ls"q>lEQp&O^cr;ucsr<2`rr<Dour<2ltr;ucqhuKALq#UBpr<*!$q$$^$
p]pa'q$6j&p]^U!r<)ir\,aPLoE"mlr<)iur<;s#r<N-&r<;s!rr`9'r;ucqO9"_LoE"mlq#gQuoEG0t
o`b9sp]LHrq#TXYQiQaZr;um!rWE*%oEG0to`b9sp]LHrq#S51^]=02quZg!r<2p"r<E$%r<W3(r<E3(
r!!$%r<)irQN6@Pq#UEqqucm#r<<-(r<N*'q$Hj&r<N9*p]UNsq#Tm`PlUU\r;uftrr`'#r<E$%q$?d$
r<E3(quls#r;ucq`W3[Pq#UEqp]L<qr<E$%q$?d$!!`E,r<<*%r<*!"q#R&ejT,5[r;up"quls%r<E3*
r<W0*q$[!*r<W?,p]^Tur;uouo`1!Pq#UEqqucm#r<<-(r<N*'q$Hj&r<N9*p]UNsq#S_?[K-+(r;u`r
q$$^$p]pU#rs/E+r<E3(quls#r;ucqV#]?Pq#UEqp]L<qr<E$%q$?d$r<E3(quls#r;ucqquDKPr;cm"
rW<$#quls%r<E3*r<W0*q$[!*r<W?,p]^Tur;uoue,]LKYlOS#r;um!r<3'&r<E3*p^$d(rX&B+r<N9*
p]UNsq#RJqf`:gKr;u`rq$$^$p]pU#q$6j&r<<*%r<*!"q#Q'Iq#UEqp]L<qr<E$%q$?d$r<E3(quls#
r;ucqf`8#Pr;liur<)s#r<<-(r<N9,q?m60q$[!*r<W?,p]^Tur;uouYlN2Pq#UEqqucm#r<<-(r<N*'
q$Hj&r<N9*p]UNs!!2osM#dAPq#UEqp]L<qr<E$%q$?d$r<E3(quls#r;ucqhuKMPq#UEqp]L<qr<E$%
q$?d$r<E3(quls#r;ucq\,a\Pr;liur<)s#r<<-(r<N9,p^6g)q$R'+r<N0&rrr?'r;uouO9#"Tq#UEq
r<3$%r<N9,r<`E0r<r6+r<rQ2r<`E-r!**&r<*!"q#Td]TE+cgr;up"r!!$'r<E<.rWrH/r<i0)r<iK0
r<W?,r!!$%r<*!"q#SA5a8l#:r;up"r!!$'r<N9,r<`E0oF(U)r<`E.r<N6(r<3'$r;ucqRfMpXr;liu
r<*!%r!***r<iK2r=/*'r=&W4r<`B,r<<-&r<)irnc5'Xq#UEqr<3$%rs/Q/r<W?.r<iK2oF1[+r<iK0
r<N6)r<3'$r;ucqaoK6Xq#UEqr<)s$r<E3*r<W?.r<i0)r<iK0!!rQ0r<N6(r<3'$r;ucqU&aEXq#UEq
r<)s$r<E3*r<W?.r<i0)r<iK0r<W?,r!!$%r<*!"q#U9kOoYF]r;up"r<<*'r<W?/r<rQ5ljit&r<rQ1
r!30(r<3'$q#SkC\cDO,r;up#r!!$(r<W?.r<iK2oF1a-rsSc4r<`E-r!**&r<*!"q#RGpiW/cTr;up"
r!!$'r<N9,r<`E0oF(U)r<`E.r<N6(r<3'$r;ucq!!%oWq#LHsrW<$#r!!$'r<N9,r<`E0oF(U)r<`E.
r<N6(r<3'$r;ucqfDtpO[/g.+r;up"r<<*'r<W?/r<rQ5o+(U,r=&W4r<`B,r<<-&r<)irXoR8Xq#UEq
r<3$%r<N9,r<`E0r<r6+r<rQ2r<`E-r!**&r<*!"r;litM?*SUr;liur<)s$r<E3*r<W?.r<i0)r<iK0
r<W?,r!!$%r<*!"q#T:OXoS7ur;up"r!!$'r<N9,r<`E0rX8H.r<iK0r<W?,r!!$%r<*!"q#Rl'ec>XL
r;up"r<<*'r<W?/r<rQ5ljit&r<rQ1r!30(r<**&rWDrsNW9%[q>pNrr<3'&r!30,r<rQ5r=8c:p^mB7
r=8c8r<rQ1r!30(r<3'#q#TOVWrVqrr;up"r<<*(r<W?/r=&W6n.,C+r=&W3r<W<*r<<-%r;ucq]E$C\
q#UEqr<*!%r!30+r<iK2q$m*/q$m91r<iK/r!*0)rrr?'r;ucqPQ:R\r;liur<*!%r<E0+r<rQ6r=Ai=
r=\l=r=]&@r=Ai:r<rN/r<E3(r<)irlN!^\q#UEqr<3'&r!30,r<iT7rXJf9r=AZ7r=Ai:r=/]5r<`B,
r<<-&r;ucq_Z7m\q#UEqr<*!%r!30+r<iK3r=/6+r=/]6r<iK/r!**'r<*!"q#QrboDn[fr;up"r<<*(
r<W?/r<rE1p^[*/r<rQ2r<W<*r<<-%r;ucqnc53\r;liur<*!%r<E0+rsSi7r=8c:r=Su@p_3T=r=Su=
r=8c6r!<6*r<<-%q#SV<`;o]7r;up#r<<*(r<`E1r=/]8r=AZ7r=Ai:r=&`7rX8Z2r!30(r<3'#q#R2i
m/Zq_r;up"r<<*(r<W?/r=&W6n.,C+r=&W3r<W<*r<<-%r;ucqq#H]\q#UEqr<*!%r!30+r<iK2q$m*/
q$m91r<iK/r!**'r<*!"q#SkC^&\*4r;up"r<<-(r!E<0r=8c:r=Su@p_3T=rt58Cr=Ai:r<rN/r<E3(
r<)irW;u&\q#UEqr<3'&r!30,r<rQ5r=8c:p^mB7r=8c8r<rQ1r!30(r<3'#q#LHqNr\tVr;ls$rWE*&
r!30+r<iK3r=/6+r=/]6r<iK/r!**'r<*!"q#T+JrrBS0q#UEqr<*!%r!30+r<iK2q$m*/!"Jc6r<rQ2
r<W<*r<<-%r;ucqXoRD\r;liur<*!%r<E0+r<rQ6r=Ai=r=\l=r=]&@r=Ai:r<rN/r<E3(r<*!!r;hoY
q#UEqr<3'&r!30,r<rQ5r=8c:p^mB7r=8c8r<rQ1r!30(r<3'#q#T:OZ2j\$r;up"r<<*(r<W?/r=&W6
q@<60r=/]6r<iK/r!**'r<*!"q#Rl'g&UpLr;up"r<<*(r<W?/r<rE1p^[*/r<rQ2r<W<*r<<-%!!<-$
q#QKU!!3'"r;up"r<<-(r!E<0r=8c:r=Su@p_3T=r=Su=r=8c6r!<6*r<<-%q#TOVY5nA!r;up#r<<-)
r!NB2r=8c;r=f,Cr"Sr?r=Su=r=/]4r!<6*r<3'#q#S,.f)YUIr;up"r<<-)r!E<0r=/]9r=SZ7r=Su>
r=8c7r<`B,rrrE+r<*!"q#Q][rrDiqr;up"r<<-)r!E<0r=/]9q%<N;q%<Q9r=/]5r<`B,r<<-%r;ucq
lN!j`q#UErr<<-(r<`B1r=8c<!#5DHq%rrGq%ruEr=]&>r=/Z3r<N9)r<*!"r;je9ciEkBr;up#r<<-)
r!NB2r=8c;q%NZ?q%N]=r=Ai9r<iH.r<E3'r;ucqRfN3`q#UEqr<*!%r<N6,r<rQ5r=Ai=oFh*7r=Jo;
r=&W2r!30(r<*!"q#U$dT`Flhr;up"r<<-)r!EB2rsSc7r=A]9r"Af;r=Ai9r<rQ1r!30(r<*!"q#SV<
aT2,;r<*!%r<E3,r!`N6r=SuBq%rrGq%ruEr=T)@rX\r:r!NB-r<<-%r;uouU&a]`q#UEqr<3'&r<N6-
r=&W7r=Jc<r"Sr?r=Su=r=/]4r!<6*r<3'#q#U9kRK3-ar;up"r<<-)r!E<0r=/]9r=SZ7r=Su>r=8c7
r<`B,r<<-%r;ucqd/_#`q#UEqr<*!%r<N6,r<rQ5r=A]9r"Af;rt#,?r=/]5r<`B,r<<-%r;ucqW;u2`
q#UErr<<-(r<`B1r=8c<r=o&Dr##5Gr>#8Dr=Ai9r!NB-r<<-%r;uou!!&2_q#UEqr<**(rWW6*r!NB2
r=8c;q%NZ?q%N]=r=Ai9r<iH.r<E3'r;ucqfDtpO]`@j/r;up"r<<-)r!E<0r=/]9r=SZ7!"o2Br=Jo;
r=&W2r!30(r<*!"q#RVujT,)Wr;up"r<<-)r!E<0r=/]9q%<N;q%<Q9r=/]5r<`B,r<<-%r;uour;i&]
q#UErr<<-(r<`B1r=8c<r=o&Dr##5Gr>#8Dr=Ai9r!NB-r<<-%r;uouh#Ok`q#UErr<3'(r<iH3r=Jo@
r>#8Ir>>MOru(bPr>,>Gr=Su<r<rN/r<E3'r;ucq[/f%`q#UErr<3''r<`B1r=8c<r=f,EoG7B>r=]&?
r=/]4r!30(r<!$$rW;lrOoYC\rW2s"r<3''r<`B0r=8c<r=euAr"f5Gr=o2Cr=Ai9r<iH-r<<-%r;ucq
j8c@`r;liur<3'&r<W?1r"&`>r>5DMr>bbVr#YeWr>Y\Pr>#8Cr=8`4r<N9)r<)ir]E$O`q#UErr<3'(
r<iH3r=Jo@r>#8Ir>>GMr>>JKr=o2Br=8c6r!<<,rs&E)r;ucqPQ:^`q#UErr<3''r<`B1r=8c<r=f,E
oG7B>r=]&?r=/]4r!30(r<*!"q#Td]VuZVor<*!$r<E3,r!WH5r=K#CrY,)Br"f5Gr=o2Cr=Ai9r<iH-
r<<-%r;ucq_Z8$`r;liur<3'&r<W?1r"&`>r>5DMr>bbVr#YeWr>Y\Pr>#8Cr=8`4r<N9)r<)irRfN3`
q#UErr<3'(r<iH3r=Jo@r>#8Ir>>GMr>>JKr=o2Br=8c6r!<6*r<3'#q#U$dT`Flhr<*!$r<E3,r!`T8
rsnu>r=f,EoG7B>r=]&?r=/]4r!30(r<*!"q#SV<aT2,;r<*!$r<E3,r!WH5r=SuAq%`fCr>#8Fr=]&>
!"Jo:r<iH-r<<-%r;ucqU&a]`r;liur<3'&r<W?1r"&`>r>5DMr>bbVr#YeWr>Y\Pr>#8Cr=8`4r<N9)
r<)irq#Hi`q#UErr<3'(r<iH3r=Jo@r>#8Ir>>GMr>>JKr=o2Br=8c6r!<6*r<3'#q#SkC_>sB4r<*!$
r<E3,r!`N6r=SuAr>"r?r=o8Ert>8Ar=/]4r!30(r<*!"q#RGpl2^V\r<*!$r<E3,r!WH5r=SuAq%`fC
r>#8Fr=]&>r=/]4r!30(r<*!"q#LHqP5tO^r;up#r<30,rWrH2r"&`>r>5DMr>bbVr#YeWr>Y\Pr>#8C
r=8`4r<N9)r<)irfDtpO]`A!3r;up#r<E3,r=/Z9r=o2Hr>PVSp`9;Q!#bbRr>5DGr=Jo:r!E<+r<3'#
r;inujT,5[r;up"r<<-*r=&T7r=]&Dr>>JNp_s)Kr>5DIr=]&=r=&T0r<<-%r;uouNWB"Yr;up"r<<-*
r<rN6r=]&Dr>5DMp_s)Kr>5DIr=Su<r<rN/r<<-%r;uouf`8G\r;lj!r<<-)r<rQ7r"T)Hr>bbYr?;"^
s!.Icr?(tXr>5DGr=Af6r<N9)r<*!!YlNV\r;liur<3''r<`E3r"/f@r>5DNr>bSQr>bbRr>5DGr=Jo:
r!E<+r<**%rW<$!NWB"Y!!<-$r<*!%r<W?1r"&`=r>#8Jr>GAKr>GPMr>#8Dr=8c7r!<6)r<*!"r;kgV
Y5nM%r;up"r<<-*r<rN6r=]&Dr>5DMp_s)Kr>5DIr=Su<r<rN/r<<-%r;uou\,b+\r;lj!r<<-)r<rQ7
r"T)Hr>bbYr?:q\r?;+]r>bbPr=f,?r!WN0rs/K+r<*!!O9#:\r;liur<3''r<`E3r"/f@r>5DNr>bSQ
r>bbRr>5DGr=Jo:r!E<+r<3'#r;l']VuZbsr;up"r<<-*r=&T7r=]&D!#Y\Pr>GAKr>GPMr>#8Dr=8c7
r!<6)r<*!"r;jY5ciF"Fr;up"r<<-*r<rN6r=]&Dr>5DMp_s)Kr>5DIr=Su<r<rN/r<<-%r;uouQN6d\
r;lj!r<<-)r<rQ7r"T)Hr>bbYr?:q\r?;+]r>bbPr=f,?r!WH.r<<-%r;l<dT`G#lr;up#r<E3,r=/Z9
rtPJIr>5DNr>bSQr>bbRr>5DGr=Jo:r!E<+r<3'#r;jn<aT28?r;up"r<<-*r=&T7r=]&Dr>>JNp_s)K
r>5DIr=T)?rXSl8r!<6)r<*!"r;iJinGrLgr;up"r<<-*r<rN6r=]&Dr>5DMp_s)Kr>5DIr=Su<r<rN/
r<<-%r;uouo`1E\r;lj!r<<-)r<rQ7r"T)Hr>bbYr?:q\r?;+]r>bbPr=f,?r!WH.r<<-%r;k.C`rPl8
r<*!%r<W?1r=Jl@r>>JQr?(t\r?D._r?(tXru(hSr>#8Br=/Z2r<E3'r;uouV#]rap]:<qr<<-)r<rQ6
r"ArDr>GPRr>khYr#YeVr>PVMr=f,?r=&T0r<<-%r;uouquE)ap]:<qr<<-)!"8c6r=8`<r>#8Kr>Y\U
p`BAQr>GPLr=f,?r<rN/r<<-%r;uoue,]LK_>sK7r;up#r<E3-r=8c>r##AQr?;+cr?qOmr$_Li!$_Cd
r>tnTr=o2@r!WH.r<<-%r;inul2^S[r<*!%r<W?1r=Jl@r>>JQr?(t\r?D._r?(tXr>GPKr=Jo:r!E<+
r<3'#r;i)^p]:<qr<<-)r<rQ6r"ArDr>GPRr>khYr#YeVr>PVMr=f,?r=&T0r<<-%r;uouf`8Vap]:<q
r<<-)r<rQ6r"ArCr>GPQr>k_UruV+Xr>GPLr=f,?r<rN/r<<-%r;uouYlNeaquQ`tr<3''r<iK5r=f)G
r>kh[r?_Cir@.Xmr?_Cdr>tnTr=o2@r!WH.r<30'rWE*"P5t@Y!!E3&r<<-*r=&W9r"T)Hr>bbXr?2%_
r#u"\r>bbRr>#8Br=/Z2r<E3'r;uouhuL+ap]:<qr<<-)r<rQ6r"ArDr>GPRr>khYr#YeVr>PVMr=f,?
r=&T0r<<-%r;uou\,b:ap]:<qr<<-)r<rQ6r"ArCr>GPQr>kYSr>Y\Qr>,>Fr=Ai7r!<<+rrr?'r;uou
P5tR_rrN'"r<3''r<iK5r=f)Gr>kh[r?_Cir@.Xmr?_Cdr>tnTr=o2@r!WH.r<<-%r;l']XT8+sr<*!%
r<W?1r=Jl@r>>JQ!$D1^r?2%_r#u"\r>bbRr>#8Br=/Z2r<E3'r;uou^Audap]:<qr<<-)r<rQ6r"ArD
r>GPRr>khYr#YeVr>PVMr=f,?r=&T0r<<-%r;uouQN6sap]:<qr<<-)r<rQ6r"ArCr>GPQr>kYSr>Y\Q
r>,>Fr=Ai7r!<6)r<*!"r;l<dV?$Mpr;up#r<E3-r=8c>r##GSruM%]r?_Cir@.Xmr?_Cdr>tnTr=o2@
r!WH.r<<-%r;jn<c2dbCr;up#r<N9.r=8c>r##APr?2%_q'Gqar?D1]r>PVM!"o2Br=/Z2r<E3'r;uou
ScJHaquQ`tr<3'(r<`E3r=SrCr>GPSr?(YTr?(tWr>>JIr=Jo9r!<6)r<*!"r;lQkT)ecir;up#r<N9-
r=/];r"]/Jr>khYq'#YYr>tnVr>5DGr=Ai7r!<6)r<*!"r;k.C`rQ#<r<*!%r<`E3r=SuEr#P_Zr?qOm
q(2For@.[jruh=ar>PVLr=Af6r<N9)r<*!!V#]raquQ`tr<3'(r<iK5r=f)Gr>bbYr?D%`r$;4br>tnU
r>,>Dr=/Z2r<E3'r;uouquE)aquQ`tr<3'(r<WH5rXJf<r"f5Kr>khYoHF/Tr>Y\Pr=o2Ar=&T0r<<-%
r;uoue,]LK_>sK7r;up#r<N9-r=/];r"]/Jr>khYq'#YYr>kqXrYtePr=f,?r<rN/r<<-%r;uouWW;;a
quQ`ur<<-+r=/];r>5APr?;+er@.Onr%%^pr?V=ar>PVLr=Af6r<N9)r<*!!P5tL]r;up#r<N9.r=8c>
r##APr?2%_q'Gqar?D1]r>PVMr=Su;r!E<+r<3'#r;kRO])_a0r;up#r<N9-r=/];r"f5Kr>khYp*'GZ
r?(tWr>>JIr=Jo9r!<6)r<*!"r;j/'irJuXr;up#r<N9-r=/];r"]/Jr>khYq'#YYr>tnVr>5DGr=Ai7
r!<6)r<!$$rW<$!P5tL]r<!$'rWW6,r=/];r>5APr?;+er@.Onr%%^pr?V=ar>PVLr=Af6r<N9)r<*!!
huL+aquQ`tr<3'(r<iK5r=f)Gr>bbYr?D1dr?_@er?D1]r>PVMr=Su;r!E<+r<3'#r;jD.g]76Qr;up#
r<N9-r=/];r"f5Kr>khYoHF/Tr>Y\Pr=o2Ar=&T0rrrE+r<*!"r;i)^rW3$"r;up#r<N9-r=/];r"]/J
r>khYq'#YYr>tnVr>5DGr=Ai7r!<6)r<*!"r;l']XT88"r<*!%r<`E3r=SuEr#P_Zr?hRor[IXor%%^p
r?V=ar>PVLr=Af6r<N9)r<*!!^Auper;lftr<3''r<iK4r=SuDr#>SVr?M7fq'Z(er?M7_r>Y\Nr=Su;
r!E<*r<2osQN6sbquZg!r<<-+r=&W9r=o/Hr>bbYn0@lSr>bbQr=o2Ar=&T0r<<-%q#Tm`WW;tuquZg!
r<<-+r<rQ7r=o/HruD%Yr?2%_q'5e]r?2%Yr>>JHr=Ai7r!<6)r<)ir`W4Eer;lfur<<-)r=&W8r>#8M
r#kqbr@7auq(MXur@7amr?2%W!#>JJr=Af6r<E3(r;uouScJTer;lftr<3''r<iK4r=SuDr#>SVr?M7f
q'Z(er?M7_r>Y\Nr=Su;r!E<*r<2oso`1`er;lftr<*!%r<`E2r=JoAr##APr?1SSr?2%Yr>>JIr=Jo9
r!<6)r<)irblGoer;lftr<*!%r<`E1r=Ai@r##APr?2%_q'5e]r?2%YrttbQr=f,?r<rN/r<<-%q#R;l
o)S^iqucm$r<N90r=AiAr>YYWr?hImr@[n!r%@ptr?hIcr>PVLr=Af6r<E3(r;uouquE5er;lftr<3''
r<iK4!"o2Br>,;Mr?(t_r?h=fr$M@er?(tWr>,>Dr=/Z2r<<-&q#StFrrC%=r;lftr<*!%r<`E2r=JoA
r##APr?1SSr?)([rZ(kRr=o2Ar=&T0r<<-%q#RJqmK!1dquZg!r<<-+r<rQ7r=o/Hr>bbYr?D%^r$)(^
r>bbQr=f,?r<rN/r<<-%q#Qf^r;lfur<<-)r=&W8r>#8Mr#kqbr@7auq(MXur@7amr?2%Wr>#8Ar!WH-
r<<-$r;kRO^B"35quZg"r<E3-r=/];r>,;Mr?(t_r?h=fr[.Xlr?M7_r>Y\Nr=Su;r!E<*r<2osYlNqe
r;lftr<*!%r<`E2r=JoAr##APr?1SSr?2%Yr>>JIr=Jo9r!<6)r<!$#q>lo_r;lftr<!$'rWW6,r<rQ7
r=o/Hr>bbYr?D%^r$)(^r>bbQr=f,?r<rN/r<<-%q#TCR\,cI.qucm$r<N90r=AiAr>YYWr?hImr@\%%
r@e($r@7amr?2%Wr>#8Ar!WH-r<<-$r;jD.huN]VquZg"r<E3-r=/];r>,;Mr?(t_r?h=fr$M@er?(tW
r>,>Dr=/Z2rrrE+r<2osQN6sbrW<*$r<*!%r<`E2r=JoAr##APr?1SSr?2%Yr>>JIr=Jo9r!<6)r<)ir
k5_aer;lftr<*!%r<`E1r=Ai@r##APr?)(arZ_._r$)(^r>bbQr=f,?r<rN/r<<-%q#S51f`:sOqucm$
r<N90r=AiAr>YYWr?hImr@[n!r%@ptr?hIcr>PVLr=Af6r<E3(r;uouRfNBfr;lfur<<-*r<rQ8r=o2J
r#Ye\r?hIkq'l4hr?V=ar>Y\Nr=Su;r!<6)r<)irmJsBiq#UBqr<<-)r<iK5r=]&Er#>YXru_1aod0M\
r?;+[r>>JIr=Jo9r!30(r<)ir`W4Qiq#UBqr<<-)r<iK5r=]&Er#>SVr?D1cq'Gq`r?2%Zr>>JH!"]&>
r<rN.r<<-%q#R&erW)ltr;um"r<E3-r=8c>r>>JSr$;4ir@\%'q(hk$r@@gor?2%Wr>#8Ar!NB,r<3'#
r;lQkVZ?Mnqucm$r<W?0r=JoAr>GMSr?D1er@%Ijr$VFgr?2%Xr>,>Dr=/Z1r<<-%q#S_?cN*bAqucm$
r<N9.r=8c=r>,;Mr?(t_od0M\r?;+[rttbQr=o2Ar=&T/r<<-%q#R;lpAk!iqucm$r<N9.r=8c=r>,;M
r?(t^r?V1br$2._r>khRr=f,?r<rN.r<<-%q#UBnTE+okr;um"r<E3-r=8c>!#Y\Pr>tk^r@.[trA"+'
r%J"!r?qOdr>PVLr=Af5r<E3'r;uoue,]LKaoM5<qucm$r<W?0r=JoAr>GMSr?D1er@%Ijr$VFg!$M7`
r>Y\Nr=Su;r!<6)r<)irWW;Siq#UBqr<<-)r<iK5r=]&Er#>SVr?Lt]r$2.`r>khRr=o2Ar=&T/r<<-%
q#Qrbq#UBqr<<-)r<iK5r=]&Er#>SVr?D1cq'Gq`r?2%Zr>>JHr=Ai7r!30(r<)irf`8nir;liuquls&
r<iK5r=f,Hr>tk^r@.[trA"+'r\+:)r@@gor?2%Wr>#8Ar!NB,r<3'#r;j/'lN$_]qucm$r<W?0r=JoA
r>GMSr?D1er@%Ijr$VFgr?2%Xr>,>Dr=/Z1r<<-%!!2osRfN6bqucm$!!iK.r<iK5r=]&Er#>SVr?Lt]
r$2.`r>khRr=o2Ar=&T/r<<-%q#TCR]E%a.qucm$r<N9.r=8c=r>,;Mr?(t^r?V=fr?_@dr?2%Zr>>JH
r=Ai7r!30(r<)ir\,bRir;liuquls&r<iK5r=f,Hr>tk^r@.[trA"+'r%J"!r?qOdr>PVLr=Af5rs&K-
r<3'#r;iMjq#UEqrWN6(r<N9.r=8c=r>5DPr#u"br@%Uor@@grr$_Lir?2%Xr>,>Cr=&T0r<<-%r;kpY
\H)F+r;um"r<E3,r=/]:r>#8Kr#Ye[r?VFjr[.Rkr?hFfr?;+[r>>JIr=Ai7r!30(r<*!!])^diq#UEq
quls&r<`E3r=JoBr>GMSr?;+bod9S^r?;+[r>>JHr=Ai7r!30(r<*!!RfNBfr;up"r!!$)r=&W:r>,>O
r?;(er@In%oeZM"r@Impr?2%Wr=o2?r!NB,r<3'#l2\*iq#UEqquls'r<iK5r=]&Fr>b_Ys!@[kr@%Uo
r@@grr$_Lir?2%Xr>,>Cr=&T0r<<-%r;jb8g&UpLr;um"r<E3,r=/]:r>#8Kr#Ye[r?_Chr?qOjr$;4a
r>khRr=f5BrX\r8r!30(r<*!!RfEEhq>pNrquls&r<`E3r=JoBr>GMSr?;+bod9S^r?;+[r>>JHr=Ai7
r!30(r<*!!nGoTir;liur<)s$r<W?1r=SuDr>bbZr$_LprA!t$r%S(#r?qOdr>PVKr=8`4r<E3'r;t(@
dfB1Er;um"r<N9.r=8c=r>5DPr#u"br@%Uor@@grr$_Lir?2+Zru:nPr=Jo9r!<6)r<*!!T`Friq#UEq
quls&r<`E3r=JoBr>GMSr?;+cr?hIjr?hFfr?;+[r>>JIr=Ai7r!30(r<*!!p].)iq#UEqquls&r<`E3
r=ArDrY>ALr#Ye[r?V%_r$;4ar>khRr=f,?r<rN.r<<-%r;k7FrrC=Er;liur<)s$r<W?1r=SuDr>bbZ
r$_LprA!t$r%S(#!%7anr?2%Wr=o2?r!NB,r<3'#V?$;iq#UEqquls'r<iK5r=]&Fr>b_Yr?_Cjr@7ar
r@7^nr?_Cbr>Y\Nr=Jo9r!<6)r<*!!r;`Giq#UEqquls&r<`E3r=JoBr>GMSr?;+cr?hIjr?hFfr?;+[
r>>JIr=Ai7r!30(r<*!!eH!Viq#UEqquls&r<`E3r=JoBr>GMSr?;+bod9Y`s!7Odr>khRr=f,?r<rN.
r<<-%r;j##mf<:er;up"r!!$)r=&W:r>,>Or?;(er@In%oeZM"r@Impr?2%Wr=o2?r!NB,r<**%rW8Ph
r;liur<3$%r<NB3rXA`:r>#8Lr?(q^r?qOnq()Cnr$_Lhr?(tVr=o2Ar<rN.r<3'#r;k[R^]=<6r;up"
r!!$(r<rQ7r=f,Hr>b_Xr?M7fq'Z+fr$;4ar>bbQr=]&=r<iH-r<3'#r;j8*kQ(P^r;up"r!!$(r<rQ7
r=f,Gr>YYWr?M7fq'Z+fr$;4`r>Y\Or=]&=r<iH-rri?)r;uouRfNBfr<*!%rW`B,r<iK5r=o2Jr?2%b
r$qXurA47+rA4@*r@@gmr?2%Ur=f,>r!E<*r<*!!irHUir;liur<3$%r<W?1r=JoBr>PVVr$2.fr@.dt
qCDLor$_Lhr?(tVr=o2Ar<rN.r<3'#r;jM1i;ifWr;up"r!!$(r<rQ7r=f,Hr>b_Xr?M7fq'Z+fr$;4a
r>bbQr=]&=r<iH-r<3'#r;iAfr;liur<)s$r<N9/r=Ai?r>5DOr#kq_r?h=fr?hFfr?2%Xr>5DFr=8c5
r!30'r;uoul2\*ir;lj!r<<*'r<iK5r=o2Jr?2%br$q_"s"F=,q)&%+r%S("r?_Cbr>>JHr=8`3r<<-%
r;jb8g&V'Pr;up#r!!$)r=&W9r>#8Lr?(q^r?qOnq()Cnr$_Lhr?(tVr=f5CrXf#9r!30'r;uouRfEEh
rW2s!r<)s$r<N9/r=Ai?r>>JQr#kq_r?h=fr?hFfr?;+Zr>>JGr=8c5r!30'r;uounGoTir;liur<)s$
r<N9/r=Ai?r>5DOr#kq_r?h=fr?hFfr?2%Xr>5DFr=8c5r!30'r;uouaT0cir;lj!r<<*'r<iK5r=o2J
r?2%br$qXurA47+rA4@*r@@gmruh=ar>>JHr=8`3r<<-%r;iSlqZ-Qqr;up#r!!$)r=&W9r>#8Lr?(q^
r?qOnq()Cnr$_Lhr?(tVr=o2Ar<rN.r<3'#r;lZnU]C>or;up"r!!$(r<rQ7r=]/JrYYSRr#kq_r?h=f
r?hFfr?;+Zr>>JGr=8c5r!30'r;uouciF(Gc2deDr;up"r!!$(r<rQ7r=f,Gr>YYWr?M7fq'Z+fr$;4`
!#tnVr>5DFr=8c5r!30'r;uouV?$;ir;lj!r<<*'r<iK5r=o2Jr?2%br$qXurA47+rA4@*r@@gmr?2%U
r=f,>r!E<*r<*!!r;`Smq#UEqr<3$'r<iK5r=f,Hr>kh\r$M@lr@In!r@Imsr$VFer>khRr=f,>r<iH-
r<3'#r;kFKb5h>=r;up#r!**+r=/];r>,>Mr?(q^r?hIkr@.[nr?hLgs!.Iar>PVMr=Su;r<`B+r<*!"
r;j##o)SRer;up#r!**+r=/];r>#8Lr>tk\r?h1cr?hFer?(tVr>#8Cr=/]3r!**%r;ls"rW/Vkr;liu
r<*!%r!<61!"o2Br>5DQr?M7ir%@q(rAFO3rAFO0r%J!tr?M7]r>5DEr=&T0r<<-%r;k[R_uTT6r;up#
r!30-r=8c>r>>JRr?D.dr@7asr@Rt!r@7^mr?D1\r>>JHr=8c5r!30'r;uouZiKFmq#UEqr<3$&r<`E3
r=SuDr>PVVr$2.er@%Unr@%Ukr$2.^r>PVMr=Su;r<`B+rr`9'r;uouT)eZfr;up#rW`B,r<`E3r=SuC
r>PVUr$)(dodKbcr$2.^r>PVLr=Su;r<`B+r<*!"r;kpY]`A!3r;up"r<<*)r=/];r>5DQr?M7ir%@q(
rA=R5r\j^4rA4@)r@.[ir>khQr=Su:r!<6)r<*!!])^pmq#UEqr<3$'r<iK5r=f,Hr>kh\r$M@lr@In!
r@Imsr$VFer>khRr=f,>r<iH-r<3'#r;iMjq#UEqr<3$&r<`E3r=SuDr>PVVr$2.er@%Unr@%Ukr$2.^
r>PVMr=Su;r<`B+r<*!"r;l0`[K-+(r;up#r!**+r=/];r>#8Lr>tk\s!IamodKbcr$2.^r>PVLr=Su;
r<`B+r<*!"r;jb8h>mKTr;up"r<<*)r=/];r>5DQr?M7ir%@q(rAFO3rAFO0r%J!tr?M7]r>,GGrXo);
r!<6)r<*!!T)ecirW2s!r<3$'r<iK5r=f,Hr>kh\r$M@lr@In!r@Imsr$VFer>khRr=f,>r<iH-r<3'#
r;lEgY5nA!r;up#r!**+r=/];r>,>Mr?(q^r?hIkr@.[nr?hFer?(tVr>,>Dr=/]3r!**%r;uouaT0om
q#UEqr<3$&r<`E3r=SuCr>PVUr$)(dodKbcr$2.^r>P\NrtYJEr=/]3r!**%r;uouT`G)mr;liur<*!%
r!<61r=SuEr>kh]r@.XsrA4C0rAOU3rA4@)r@.[ir>khQr=Su:r!<6)r<*!!p].5mq#UErr<<*)r=&W9
r>,>N!$M7`r?_@ir@@[qr@@gpr$D:ar>Y\Nr=Su:r<W<)r<)irciF(GdK'(Dr<*!%r!30.r=Ai@r>>JR
r?;(br?qCir?qOir#u"Z!#Y\Pr=o2Ar<rQ/r!!$$q#R>mq>g<lr<*!%r!30.r=Ai?r>>JRr?;(ar?qCh
r?qOhr#u"Zr>>JHr=Ai7r<N6(r<)irr;`Smr;liur<3''r!NB4r=o2Kr?2%dr@Ik$rA==.rA=I-r%.do
r?2%Wr>#8@r<iH,r<3'#r;kFKb5h>=r<*!%r!<60r=JoCr>Y\Xr?_@ir@@[qr@@gpr[%Rjr?2%Xr>,>D
r=&W1r!!$$q#RSto)SRer<*!%r!30.r=Ai@r>>JRr?;(br?qCir?qOir#u"Zr>>JIr=Jo8r<N6(r<)ru
rW/Vkq#UErr<<*(r<iT9rX\r@r>>JRr?;(ar?qChr?qOhr#u"Zr>>JHr=Ai7r<N6(r<)irg]57mr;liu
r<3''r!NB4r=o2Kr?2%dr@Ik$rA==.rA=I-r%.dor?2%Wr>#8@r<iH,r<3'#r;j8*li?h^r<*!%r!<60
r=JoCr>Y\Xr?_@ir@@[qr@@gpr$D:ar>Y\Nr=Su:r<W<)rr`9'q#R)fq#UErr<<0*rs/K1r=Ai@r>>JR
r?;(br?qCir?qOir#u"Zr>>JIr=Jo8r<N6(r<)irirHamq#UErr<<*(r<rQ7r=f,Hr>kh[r$;4gr$_Om
r?qOhr#u"Zr>>JHr=Ai7r<N6(r<)ir])^pmr;liur<3''r!NB4r=o2Kr?2%dr@Ik$rA==.rA=I-r%.do
r?2%Wr>#8@r<iH,r<3'#r;iMjq#UErr<<*)r=&W9r>,>Nr?2%br$_Loq(;Oqr@%Rir?2%Xr>,>Dr=&W1
r!!$$q#Ta\[K-+(r<*!%r!30.r=Ai@r>>JRr?;(bs!Rgoq'l7ir?_@br>khRr=o2Ar<rQ/r!!$$q#S>4
h>m?Pr<*!%r!30.r=Ai?r>>JRr?;(ar?qChr?qOhr#u"Zr>>JHr=8l9rX8Z0r!!$$q#R)fr;cm"rW<$$
r<E0,r=8c?r>PVWr?qOpr%\.,q)81.rA"4$r?qOdr>PVLr=8c5r!**&r;uounGo`mr;liur<3'(r!NB4
r=f,Hr>kh\r?qLmr@In!r@Imsr?qLer>khRr=f,>r<iK.quls"q#SS;f)YaMr;up"r<E0+r=/];r>,>M
r?(t_r$M@jr@.[nr?hIfr#bkUr>,DGrt>8>r<`E,quls"q#R/hrrDuur;up"r<E0+r=/];r>#8Lr?(t_
r$M(br?hIfr#bkUr>#8Cr=/]3r<E0&r;ucqp].5mr;lj!r<<-*r!`N9r>5DQr?D:kr[Ie!r%n:/rAOU3
rA4C*r$hRhr>khQr=Su;r<W<)r<*!"r;k7FrrCIIr;liur<3'(r!NB4r=f,Hr>kh\r?qLmr@In!r@Ims
r?qLer>bkTrYYSIr=8c5r<N6'r;ucqV?$Gmr;liur<*!&r!E<2r=SuDr>PVVr?M4er@%Unr@%Ukr?M4^
r>PVMr=]&<r<`E,quls"q#UEoUB(5nr;up"r<E0+r=/];r>#8Lr?(t_r$M(br?hIfr#bkUr>#8Cr=/]3
r<E0&r;ucqeH!bmr;lj!r<<-*r!`N9r>5DQr?M7ir@e()rAFO3rAFO0r@e.!s!dmkr>khQr=Su;r<W<)
r<*!"r;j##o)S^ir;up#r<N6-r=8c>r>>JRr?D1fr$qXrr@Rt!r@7anr$)([r>>JHr=8c5r<N6'r;ult
rW/Vkr;liur<*!&r!E<2!"o2Br>,>Mr?(t_r$M@jr@.[nr?hIfr#bkUr>,>Er=/]3r<E0&r;ucqg]57m
r;liur<*!&r!E<2r=SuCr>PVVr?M4eodKbcr?M4^r>PVLr=Su;r<`E,quls"q#Ri&li?tbr<*!%r<W<0
r=SuEr>kh]r@.[ur%n:/rAOU3rA4C*r$hRhr>khQr=Su;r<W<)rr`9'r;uouT)efjr;up#r<N</rsJ]7
r=f,Hr>kh\r?qLmr@In!r@Imsr?qLer>khRr=f,>r<iK.quls"q#TLU]`A!3r;up"r<E0+r=/];r>,>M
r?(t_r$M@jr@%^pr[@^lr?M4^r>PVMr=]&<r<`E,quls"q#S)-jT,5[r;up"r<E0+r=/];r>#8Lr?(t_
r$M(br?hIfr#bkUr>#8Cr=/]3r<E0&r;ucqT)efjr<*!%r<W<0r=SuEr>kh]r@.[ur%n:/rAOU3rA4C*
r$hRhr>khQr=Su;r<W<)r<*!"r;l0`[K-7,r;up#r<N6-r=8c>r>>JRr?D1fr$q^ts"++#r@Imsr?qLe
r>khRr=f,>r<iK.quls"q#S>4h>mKTr;up"r<E0+r=/];r>,>Mr?(t_r$M@jr@.[nr?hIfr#bkUr>,>E
r=&`5rX&N-quls"q#R)fr;cm"rW<$#r<E0+r=/];r>#8Lr?(t_r$M(br?hIfr#bkUr>#8Cr=/]3r<E0&
r;ucqnGo`mr;lj!r<<-*r!`N9r>5DQr?M7ir@e()rAFO3rAFO0r@e'tr?M7]r>5DEr=/]2r!!$$r;uou
aT0omr;liur<3'(r!WH7r>#8Lr?(t`r@%Roq(2Ipr@%Uir#bkUr>,DErt,,<r<W?+quls"r;iGhrrDuu
r;up#r<N6-r=8c>r>>JQr?;+cr$V:gr?qOhr?;(Yr>>JIr=Ai8r<N9)qucm!r;lNjVuZbsr;up#r<N6-
r=8c>r>5DP!$M7`r?V:fq'c1gr?V=ar#GYOr=f,?r<rQ/r<<*$r;uoubQ.YCdK'4Hr<*!%r<`B3r=f,I
r?2%cr@@h$r%n.+rA4C+r@@dmr?)(YrYk_Lr=Ai6r<N6(r<*!!U&b#ir;liur<3'(r!WH7r>#8Lr?(t`
r@%Roq(2Ipr@%Uir#bkUr>,>Cr=/]2r<E0&r;uouq#I/ir;liur<3'(r!NB4r=f,Hr>bbZr?_@hq'c1h
r?V=br#GYPr=o2@r=&W0r<<*$r;uoud/_>ir;liur<3'(r!NB4r=f,Gr>bbYr?V:fq'c1gr?V=arZ(qX
r>5DGr=Ai7r<N9)qucm!r;ikto)S^ir<*!%r<`B3r=f,Ir?2%cr@@h$r%n.+rA4C+r@@dmr?2%Wr=o2@
r<iK.r!!$$r;cluS,iKgr;up#r<N6.r=ArDrY>AMr?(t`r@%Roq(2Ipr@%Uir#bkUr>,>Cr=/]2r<E0&
r;uoufDrhir;liur<3'(r!NB4r=f,Hr>bbZr?_@hq'c1hr?V=br#GYPr=o2@r=&W0r<<*$r;uouYQ4"i
r;liur<3'(r!NB4r=f,Gr>bbYr?V:fq'c1gr?V=ar#GYOr=f,?r<rQ/r<<*$rrW3%r;iAfr;lj!r<<-+
rXSr<r=f,Ir?2%cr@@h$r%n.+rA4C+r@@dmr?2%Wr=o2@r<iK.r!!$$r;kdU]`A!3r;up#r<N6.r=JoB
r>PVVr?V=ir%%Ro!%\%!r@%Uir#bkUr>,>Cr=/]2r<E0&r;uou[fGLir;liur<3'(r!NB4r=f,Hr>bbZ
r?_@hq'c1hr?V=br#GYPr=o2@r=&W0r<<*$r;uouRfNBfr;up#r<N6-r=8c>r>5DPr?2%ar$M4fr?hIg
r?2"Xr>5DGr=Ai7r<N9)qucm!r;l$\[K-7,r<*!%r<`B3r=f,Ir?2%cr@@h$r%n@1q_e=.r@n1#r$M@b
r>PVKr=Ai6r<N6(r<*!!^&[!ir;lj!r<<-*r!`N8r>,>Or?2%br@%:gr@.[kr?D.Zr>5DGr=8c5!!iK.
r<3$#q#Qrbr;cm#rWE*&r<N6.r=Ai@r>GPSr?;+coI'S`r?D1^r#5MKr=Su;r<`E,r<3$#q#Tj_Y5nM%
r<*!%r<N6.r=Ai?r>GPSr?;+br$M4er?_Cdr>tkSr>#8Cr=/]3r<E3'quc`q`;nKir;lj"r<E3-r!rZ>
r>PVXr?qOprA"4+q)&%*r@Rssr$)(Zr>5JGrt52=r<W?*quls"r;iGhrrDuur<*!%r<W<0r=JoCr>bbY
r?_CjoIKkhr?_Cdr#GYOr=f,>r<iK.r<3$#q#U*fVuZbsr<*!%r<N6.r=Ai@r>GPS!$V=br?_(`r?_Cd
r?(qUr>#8Cr=/]3r<E3'quc`qbQ.YCdK'4Hr<*!%r<N6.r=Ai?r>GPSr?;+br$M4er?_Cdr>tkSr=o;E
rXo)<r<`E,r<3$#q#R2iq>gHpr<3''r<iH4r=o2Kr?;+er@In%r%n.*rA+='r@.Xgr>bbPr=Su;r<W?*
quls"r;l]oUB(5nr<*!%r<W<0r=JoCr>bbYr?_CjoIKkhr?_Cdr#GYOr=f,>r<iK.r<3$#q#SkCb5hJA
r<*!%r<N6.r=Ai@r>GPSr?;+coI'S`r?D1^rYkeTr>#8Cr=/]3r<E3'quc`qW;uMir;lj!r<<-)r!WH6
r=f,Ir>kh[r?V:fq'Z+er?D1]r#,GJr=Su;r<`E,r<3$#q#LHqS,iKgr<3''r<iH4r=f5MrYk_Yr?qOp
rA"4+q)&%*r@Rssr$)(Zr>5DEr=/]2r<<*%r;uoufDrhir;lj!r<<-*r!`N8r>,>Or?2%br@%:gr@.[k
r?D.Zr>5DGr=8c5r<N9(quc`qYQ4"ir;lj!r<<-)r!WH6r=o2Jr>kh[r?_(`r?_Cdr?(qUr>#8Cr=/]3
r<E3'qucs"qZ3/dr;lj!r<<-)rX8`6r=Ai?r>GPSr?;+br$M4er?_Cdr>tkSr>#8Cr=/]3r<E3'quc`q
hZ1=ir;lj"r<E3-r!rZ>r>PVXr?qOprA"4+q(r(,r\FF(r@.Xgr>bbPr=Su;r<W?*quls"r;jA-jT,5[
r<*!%r<W<1r=SuDr>bbZr?_Cjr$qXqr@7anr?M7_r#5MKr=Jo9r<W?+r<3$"q#Qrbr;lj!r<<-)r!`N8
r=o2Jr>tn\r?_@gr?qOjr?M7`r>b_Pr=f,?r<rQ/r<<-%quZZpjoDgir;lj!r<<-)r!WH6r=o2Jr>tn\
r?V4dq^27dr?2%Xr"o;Fr=Ai7r<N9)r<)s!q#S20h>mKUr<3''r<iH5r>#8Mr?;+fr@In%oJ?G!r@7al
r#kqUr=o2?r<`N0rWiB*quc`qRfNBf!!E3&r<<-*r!iT:r>,>Or?;+cr@%Rnr@@grr?qOgr?(qUr>#8B
r=&W1r<E3'quZZpm/X<ir;lj!r<<-)r!`N8r=o2Jr>tn\r?_@gr?qOjr?M7`r>b_Pr=f,?r<rQ/r<<-%
quZZp`;nKir;lj!r<<-)r!WH6r=o2Jr>tn\r?V"^r?M7`r>YYNr=f,?rsSi7r<N9)r<)s!q#R#drrE!!
r<3''r<iH5r>#8Mr?;+fr@In%oJ?G!r@7alr#kqUr=o2?r<iK.r<<*$q#U*fVuZbsr<*!%r<W<1r=SuD
r>bbZ!%%Ujr@%Rnr@@grr?qOgr?(qUr>#8Br=&W1r<E3'quZZpbQ.YCdK'4Hr<*!%r<N6/r=JoAr>GPT
r?;+cr$M@ir?hIfr?2%Yr##AG!"]&>r<rQ/r<<-%quZZpU&b#ir;lj!r<<-)r!WH6r=o2Jr>tn\r?V"^
r?M7`r>YYNr=f,?r<rQ/r<<-%quZZpq#I/ir;up#r<E3-r"&`@r>Y\Yr@%UqrA!q#r@e+!r?_@ar>GPJ
r=8c5r<N9)quc`qd/_>ir;lj!r<<-*r!iT:r>,>Or?;+cr@%Rnr@@grr?qOgr?)"Wru1hNr=Jo9r<W?+
r<3$"q#RGpo)S^ir<*!%r<N6/r=JoAr>GPTr?;+cr$M@ir?hIfr?2%Yr##AGr=Ai7r<N9)r<)s!q#LHq
S,iKgr<*!%r<N6.r=8lBrY5;Kr>tn\r?V"^r?M7`r>YYNr=f,?r<rQ/r<<-%quZZpfDrhir;up#r<E3-
r"&`@r>Y\Yr@%UqrA!q#r@e+!r?_@ar>GPJr=8c5r<N9)quc`qYQ4"ir;lj!r<<-*r!iT:r>,>Or?2%a
r?q4cr?_Ccr>b_Or=f,>r<iK.r<3'#q>pTsQN6sbr<*!%r<N<1rs\i;r=o2Jr>kh[r?M(`r?V=br>tnU
r"]/Br=/]3r<E3'r;u`pgAnner;lj!r<<-)r!WH6r=o2Jr>khZr?Lq[!$V=br>tnTr"]/Br=/]3r<E3'
r;u`pZN0(er;up#r<E3-r"&`@r>Y\Yr?qOor@dq#r@n1$r@%Ugr#GYOr=Su;r<W?*r<)s!r;i5br;lj!
r<<-*r!iT:r>,>Or?2%ar?q4cr?_Ccr>b_Or=f,>r<iK.r<3'#p]9@S[K-7,r<*!%r<N6/r=JoAr>GPS
r?;+aqBc.fr?V=br>tnUr"]/Br=/]3r<E3'r;u`p\cCRer;lj!r<<-)r!WH6r=o2Jr>khZr?Lq[r?;+\
r>GMJr=Su;r<`E,!!N9(r;u`pQN6sc!!N9(r<E3-r"&`@r>Y\Yr?qOor@dq#r@n1$r@%Ugr#GYOr=Su;
r<W?*r<)s!r;l-_Y5nM%r<*!%r<W<1r=SuDr>bbYr?V=hoI0Yar?;+Zr"o;Fr=8c5r<N9(r;u`p_#W'e
r;lj!r<<-)r!`N8r=o2Jr>kh[r?M(`r?V=br>tnUr"]/Br=/c5rsAW.r<3'#p]6c_rrDuur<*!%r<N6.
r=Ai@r>GPSr?2%`oHaAYr>tnTr"]/Br=/]3r<E3'r;u`pn,TBer;up#r<E3-r"&`@r>Y\Yr?hRqr[[q#
pbD_$r@Imqr?D.Zr>5DEr=/]2r<<-%quZfta8l5?dK'4Hr<*!%r<W<1r=SuDr>bbYr?V=hoI0Yar?;+Z
r"o;F!"Su<r<iK.r<3'#p]6rdq>gHpr<*!%r<N6/r=JoAr>GPSr?;+apa,kar?;+\r>PSKr=Su;r<`E,
r<3'#p]:$fUB(5nr<*!%r<N6.r=Ai@r>GPSr?2%`oHaAYr>tnTr"]/Br=/]3r<E3'r;u`pblGoer;up#
r<E3-r"&`@r>Y\Yr?qOor@dq#r@n1$r@%UgrZ(qXr>5DEr=/]2r<<-%quZftV#^5iq#UErr<<-*r!`N8
r>,>Mr?(t^r?_4dr?_Cdr?(tVr"]/Ar=&W1r<<-%p]:-iTE+cgr<*!%r<N6.r=8lBrY5;Jr>bbXr?D"]
r?;+]r>bbQr"K#>r<rQ/r<<-%p]8_Aa8l#:r<*!%r<N6.r=Ai?r>5DOr?(t^p`o_\r?(tWr>5AFr=Ai7
r<N9)r<)fqVuZ;er;liur<3''r<iH4r=o2Kr?2%br@.[spb2Rsr@.[kr?2"Ur=o2?r<iK-r<3'#quQft
R/m$`r<*!%r<WB2rs\i;r>,>Mr?(t^r?_4dr?_Cdr?(tVr"]/Ar=&W1r<<-%p]8tH_#X93r<*!%r<N6.
r=Ai@r>>JQr?(t^p`o_\!$D1^r>bbQr"K#>r<rQ/r<<-%p]7PuklCM[r<*!%r<N6.r=Ai?r>5DOr?(t^
p`o_\r?(tWr>5AFr=Ai7r<N9)r<*!!quN,ar;liur<3''r<iH4r=o2Kr?2%br@.[spb2Rsr@.[kr?2"U
r=o2?r<iK-r<3'#quPXS\cDO,r<*!%r<W<0r=JoCr>PVVr?D1dqBu:jr?_Cdr?(tVr"]/Ar=&W1r<<-%
p]7f'iW/cTr<*!%r<N6.r=Ai@r>>JQr?(t^p`o_\r?(tXr>>GGr=Ai7r<N9)!!E3&p]6]]q#LHtrWE*&
r<N6.r=Ai?r>5DOr?(t^p`o_\r?(tWr>5AFr=Ai7r<N9)r<)fqjT)Uer;liur<3''r<iH4r=o2Kr?2%b
r@.[spb2Rsr@.[kr?2"Ur=o2?r<iK-r<3'#quOJ2gAq$Mr<*!%r<W<0r=JoCr>PVVr?D1dpa?"dr?D1^
r>PSKr=Jo9rs8W1r<<-%p]6]]rrMutr<*!%r<N6.r=Ai@r>>JQr?(t^p`o_\r?(tXr>>GGr=Ai7r<N9)
r<)fqli=*eq#UErr<<-)r!WH6r=f,Gr>P_YrZD(_p`o_\r?(tWr>5AFr=Ai7r<N9)r<)fq_uTf;ec>XL
r;up#r<E3-r!rZ>r>PVWr?_Ckr@Rdtr@Imrr?_Cbr#,GI!"Su<r<iK-r<3'#quN5drW)`pr<*!%r<W<0
r=JoAr>GPSr?2%`r$;4cr?D1^r>Y\Nr"Ar<r<iK.r<3'#r;l6bVZ?Mnr<*!%r<N6.r=8c=r>,>Mr>khZ
r#u"]r?(tXr>>JIr"/f9r<`E,r<*!"r;jh:cN*bAr<*!%r<N6.r=8c=r>,>Mr>kMQr>tnVr>>JIrXf)@
r=/]3r<E3&r;uouS,i9`r;liur<3''r<iH4r=f,Hr>tn^r?qOnr%%^qr@.[kr?2%Xr"f5Cr=&W1r<<-%
r;lKiTE+cgr<*!%r<W<0r=ArCrY5;Kr>khZr?M4cr?M7br?(tWr>,;Dr=8c5r<N9(r;uoub5fT`q#UEr
r<<-)r!WH5r=]&Er>PVTr?2"]r?2%\r>bbQr=o/@r=/]3r<E3&r;uouUB'c`q#UErr<<-)r!WH5r=]&E
r>PVToH=)Rr>Y\Pr=o/@r=/]3r<E3&r;uouq>co`r;liur<3''r<iN6rsnu@r>>JSr?M7gr@7^qr@7ap
r?_Cbr>YYMr=Su:r<W?*r<*!!dK%)`q#UErr<<-*r!`N8r=o2Jr>khZr?M4cr?M7b!$D1^r>Y\Nr"Ar<
r<iK.r<3'#r;inuklCM[r<*!%r<N6.r=8c=r>,>Mr>khZr#u"]r?(tXr>>JIr"/f9r<`E,r<*!"r;i&]
q#UErr<<-)r!WH5r=]&Er>PVToH=)Rr>Y\Pr=o/@r=/]3r<E3&r;uouf`8S`r;liur<3''r<iH4r=f,H
r>tn^r?qOnr%%dss!msrr?_Cbr>YYMr=Su:r<W?*r<*!!YlNb`q#UErr<<-*r!`N8r=o2Jr>khZr?M4c
r?M7br?(tWr>,;Dr=8c5r<N9(!!<-$r;i&]q#LHtrWE*&r<N6.r=8c=r>,>Mr>khZr#u"]r?(tXr>>JI
r"/f9r<`E,r<*!"r;kgVZN0e%r<*!%r<N6.r=8c=r>,>Mr>khZp`TMVr>Y\Pr=o/@r=/]3r<E3&r;uou
\,b7`r;liur<3''r<iH4r=f,Hr>tn^r?qOnr%%^qr@.[kr?2%Xr"f5Cr=&]3rs8Q,r<*!!OoYL_qZ6Wt
r<<-*r!`N8r=o2Jr>khZr?M4cr?M7br?(tWr>,;Dr=8c5r<N9(r;uouk5_R`q#UErr<<-)r!WH5r=]&E
r>GYVrZ1q[r#u"]r?(tXr>>JIr"/f9r<`E,r<*!"r;jY5rrCUMq#UErr<<-)r!WH5r=]&Er>PVToH=)R
r>Y\Pr=o/@r=&`5rX&N-r<*!"r;i/`rW)ltr;up#r<E3-r!rZ=r>>JSr?M7gr@7^qr@7apr?_Cbr>YYM
r=Su:r<W?*r<*!!li<p`q#UErr<<-*r!WH6r=f,Gr>Y\Ur?(q[r?(tZr>Y\Or=f)>r<rQ0r<<-%q#SD6
cN*bAr<*!%r<N6-r=8c=r>#8Jr>PVSr#P_Ur>Y\Pr>#8DrXSr<r<iK.r<<-%q#QucpAk!ir<*!%r<N6-
r=/];r>#8Jr>PVSr#P_Ur>Y\Pr>#8Cr!iT3r<N9)r<)iro)PE`r;liur<3''r<iH4r=T)HrYPMQr?2%`
r?hFir?hIgr?2%Yr>5AEr=8c5r<E3'r;uoub5fT`q#UErr<<-*r!WH6r=f,Gr>Y\Ur?(q[r?(tZr>Y\O
r=f)>r<rQ0r<<-%q#R5jn,W7br<*!%r<N6-r=8c=r>#8Jr>PVSr#P_Ur>Y\Pr>#8Dr!rZ4r<N9)r<)ir
q>co`q#UErr<<-)rX/Z4r=/];r>#8Jr>PVSr#P_Ur>Y\Pr>#8Cr!iT3r<N9)r<)irdK%)`r;liur<3''
r<iH4r=]&Fr>bbYr?M7fr$VFir?M@crZM.Zr>5AEr=8c5r<E3'r;uouWW;8`q#UErr<<-*r!WH6r=f,G
r>Y\Ur?(q[r?(tZr>Y\Or=f)>r<rQ0r<<-%q#QWYq#UErr<<-)r!NB4r=]&Dr>>JOr>b_Ur>bbTr>>JJ
r=]#<r<iK.r<<-%q#T.K\cDO,r<*!%r<N6-r=/];r>#8Jr>PVSr#PeWruCtVr>>JJr=Sr:r<iK.r<<-%
q#R`#iW/oXr;up#r<E3-r!rZ<r>5DPr?2%`r?hFir?hIgr?2%Yr>5AEr=8c5r<E3'!!<-$r;i&]q#LHt
rWE*&r<W</r=Ai?r>5DOr>khYr#kq[r>tnVr>5DGr"&`6r<W?*r<)irhuL(`q#UErr<<-)r!NB4r=]&D
r>>JOr>b_Ur>bbTr>>JJr=]#<r<iK.r<<-%q#Ru*gAq$Mr<*!%r<N6-r=/];r>#8Jr>PVSr#P_Ur>Y\P
r>#8Cr!iT3r<N?+rrr?'q#QWYrrN-#r;up#r<E3-r!rZ<r>5DPr?2%`r?hFir?hIgr?2%Yr>5AEr=8c5
r<E3'r;uouk5_R`q#UErr<<-)r!NB4r=SuCr>5MQrYkPOr>Y\Qr>,>Fr=Jl9r<`E,r<3'#r;jM1rrCUM
q#UErr<<-)r!E<2r=Jo@r>,>Kp_j#Ir>5DHr=]&=r!`N0!!W?*r<*!"r;i#\rW)`pr<*!%r<N6,r=/]9
r=f,Er>55Hr>>JLr=o2Br=8`5r<W?*r<*!"r;l*^VZ?Yrr;up#r<E3,r!iT:r>#8Kr>khZp`]SYr?(tW
r>5DGr"&`6r<N9)r<*!!^];[\q#UErr<<-)r!NB4r=SuCr>>JOp`05Or>GPLr=f,@rXJl:r<`E,r<3'#
r;i8cpAk!ir<*!%r<N6,r=/]:r=f,Fr>>;Ir>>JLr=o2Cr=8`6r<W?*r<*!"r;l?eTE+cgr<*!%r<N6,
r=&`;rX\r@r>#8Ip_j#Ir>5DHr=Su<r!WH/r<<-%r;uou`rO0\r;liur<3''r<`B2r=SuCr>GPSr?1kY
r?2%\r>Y\Or=f)>r<rQ/r<<-%r;iMjn,W7br<*!%r<N6-r=8c<r>#8Jr>PGNr>Y\Qr>,>Fr=Jl9r<`E,
r<3'#r;lTlR/m$`r<*!%r<N<.rsAW5r=Jo@r>,>Kp_j#Ir>5DHr=]&=r!`N0r<<-%r;uouc2bZ\q#UEr
r<<-)r!E<2r=Ai?r>#8Ip_j#Ir>,GJrY5;Cr=8`5r<W?*r<*!"r;ibqklCY_r;up#r<E3,r!iT:r>#8K
r>khZp`]SYr?(tWr>5DGr"&`6r<N9)r<*!!r;_u\q#UErr<<-)r!NB4r=SuCr>>JOp`05Or>GPLr=f,@
r!iT2r<E3'r;uoueH!/\q#UErr<<-)r!E<2r=Jo@r>,>Kp_j)Krtt\Nr=o2Cr=8`6r<W?*r<*!"r;j##
iW/cTr<*!%r<N6,r=/]9r=f,Er>55Hr>>JLr=o2Br=8`5r<W?*r<*!"!!3'"NWB"Yr;ls%rWN0(r<`B2
r=SuCr>GPSr?1kYr?2%\r>Y\Or=f)>r<rQ/r<<-%r;k[RZN0e%r<*!$r<N6-r=/]:r=]&Cr>,>Jr"o;I
r=o2Dr=Jo:r!NB-r<<-%q#Ri&gAq$Mr<*!$r<E0+r=&W7r=Jo?r=o#Ar=o2Cr=Su<r=&T1r<E3(rr`9'
q#QKUrrMutr<*!$r<E0+r<rQ6r=Jo?r=er@r=o2Cr=Su<r<rN0r<E3(r<)irirH.\r;liur<3'&r<W<0
r=Ai?r>,>K!#khTp`05Or>>JLr=f,?r!`N0r<E3'r;uou])_j2ec>LHr<*!$r<N6-r=/]:r=]&Cr>,/E
r>,>Gr=f,@r=/Z3r<E<+rWW6&q#QTXrW)`pr<*!$r<E0+r=&W7r=Jo?r=o#Ar=o2Cr=Su<r=&T1r<E3(
r<)irkQ%L\q#UErr<3''r!E<0r=8c;r=]&Bp_E`Ar=]&@r=8c6r!E<+r<<-%q#S82cN*nEr;up#r<<-*
r!`N7r=f,Fr>>JOp`05Or>>JLr=f,?rXAf8r<W?+r<3'#r;i8cpAk!ir<*!$r<N6-r=/]:r=]&Cr>,/E
r>,>Gr=f,@r=/Z3r<N9)r<)irmf9!\q#UErr<3''r!E<1!"Su<r=Jo?r=o#Ar=o2Cr=Su<r=&T1r<E3(
r<)ir`rO0\q#UErr<3''r!E<0r=8c;r=]&Bp_E`Ar=]&@r=8c6r!E<+r<<-%q#R)fn,WCfr;up#r<<-*
r!`N7r=f,Fr>>JOp`05Or>>JLr=f,?r!`N0r<E3'r;uoup&LK\q#UErr<3'(rX/Z4r=/]:r=]&Cr>,/E
r>,>Gr=f,@r=/Z3r<N9)r<)irc2bZ\q#UErr<3''r!E<1r=8c;r=]&Cp_E`Ar=T)BrXo)=r=&T1r<E3(
r<)irV?#i\q#UErr<3''r!E<0r=8c;r=]&Bp_E`Ar=]&@r=8c6r!E<+r<<-%q#UEoOoYF]r;up#r<<-*
r!`N7r=f,Fr>>JOp`05Or>>JLr=f,?r!`N0r<E3'r;uoueH!/\q#UEqr<3''r!<6.r=/]9r=Jo?p_3Z>
rt52@r=8c7r<iH-r<<-&r;ucqXT7>\q#UEqr<*!%r!30,r=&W7r=Ai<p_!H9r=Ai9r<rQ1r!30(r<*!"
quQctNWAkU!!<-$r<*!%r!30,r<rQ5r=Ai<p_!<4r=/]5r<`B,r<<-%r;ucqg]4Y\r;liur<*!%r<N6-
r=/]9r=]&Cr>,>Jr"o;Hr=o2Br=8c7r!E<+r<<-%r;uouZiJh\q#UEqr<3''r!<6.r=/]9r=Jo?p_3T<
r=Jo;r=&W3r!30(r<3-%rrVusNWB([qZ6Wsr<*!%r!30,r=&W7r=Ai<p_!H9r=Ai9r<rQ1r!30(r<*!"
q#TLUX8r%sr;up"r<<*(r<`E1r=/]9!"f,@p_!<4r=/]5r<`B,r<<-%r;ucq])_j2ec>XLr;up"r<<-)
r!NB3r=Ai>r=o2Gp_WlDr=o2Br=8c7r!E<+!!W?*r<*!"r;i#\rW)`pr;up#r<E0*r<iK4r=Ai<r=\l=
r=Su>r=8c7r<iH-r<<-&r;ucqkQ%L\q#UEqr<*!%r!30,r=&W7r=Ai<p_!H9r=Ai9r<rQ1r!30(r<*!"
q#S82cN*bAr;up"r<<*(r<`E1r=/]9r=J`9q%*E5r<rQ1rWiH.r<<-%r;ucqQiQj\r;liur<*!%r<N6-
r=/]9r=]&Cr>,/Er>#8Fr=Su<r=&T1r<E3(r<*!"r;l?eTE+cgr;up#r<E0*r<`N6rXJf:r=Jo?p_3T<
r=Jo;r=&W3r!30(r<3'#q#SM9a8l#:r;up"r<<*(r<`E2r=8c:r=J`9r=Jo<r=/]5r<`B,r<<-%r;ucq
T)e?\q#UEqr<*!%r!30,r<rQ5r=Ai<p_!<4r=/]5r<`B,r<<-%r;ucqp&LK\r;liur<*!%r<N</rsJ]6
r=Ai>r=o2Gp_WlDr=o2Br=8c7r!E<+r<<-%r;uouc2bZ\q#UEqr<3'&r!30+r<iK3r=/B/q$d<3rX8Z2
r<N6)r<3'$q#R2iklCM[r;up"r<<*'r<N9-r<rQ4oF:U)r<iK/r<N6(q#gEnq#HQXq#UEqr<*!%r!**)
r<`9-oF:a-r<rQ2r<W?,quuluq#SkC\cDO,r<*!%r<E0*r<iK4r=8c:oF_*7rt,,>r=8c6r<`B,r<<-&
r;uouW;toXq#UEqr<3'&r!30+r<iK3r=/B/q$m91r<`E-r!**&r<)ir!!%oWq#LHsrW<$#r<<*'r<N9-
r<rQ4oF:U)r<iK/r<N6(q#gEnfDr5Xq#UEqr<*!%r!**)r<`9-q$m62r=&W4r<iK/r<N6(q#gEnYQ3DX
q#UErr<<-(r!<6.r=/]8r=AN4r=Jo<r=8c6r<`B,r<<-&rrW3%r;hcUrrMutr;up#r<<*(r<W?/r=&W6
oFC[+r<rQ1r<N6)r<3'$q#T@QX8r%sr;up"r<<*'r<N9-r<rQ4!"JT1q$d3/r<W?,quuluq#Rr)rrCUM
q#UEqr<*!%r!**)r<`9-oF:a-r<rQ2r<W?,r!!!#rWDrsN<&qXq#UErr<<-(r!<6.r=/]8r=AN4r=Jo<
r=8c6r<`B,r<<-&r;uouj8c(Xq#UEqr<3'&r!30+r<iK3r=/B/q$m91r<`E-r!**&r<)ir]E$7Xq#UEq
r<*!%r!**)r<`E1r=&<-q$d3/r<W?,rWW<*q#gEnPQ:FXq#UEqr<*!%r!**)r<`9-oF:a-r<rQ2r<W?,
quuluq#Td]TE+cgr<*!%r<E0*r<`N6rXJf9r=AN4r=Jo<r=8c6r<`B,r<<-&r;uou_Z7aXo`>!mr<3$%
r<N9,r<_ftr<`E.r<N9)quls#o`:N^n,W+^r;up"r!!$'r<N9,lj<Urr<N9*r<;ruo`=U`R/lm\r;up"
rWW<*r<E3*r<V`rr<W?,r<E3(p]L0iaoK6Xq#UEqr<*!%r!***r<iK2r=&<-r=&W4!"/]4r<W?+r!!$%
r;ucqU&aEXo`>!mr<3$%r<N9,r<_ftr<`E.r<N9)quls#o`=jgOoY.Ur;up"r!!$'r<N9,lj<Urr<N9*
r<;ruo`<G?\cDC(r;up"r!!$'r<N9,mKrn"r<W?,r<E3(p]L0iW;toXq#UEqr<*!%r!***r<iK2r=&<-
r=&W4r<iK/r<E0'r<3'#q#LHqMZEMQrW2s!r<3$%r<N9,r<_ftr<`E.r<N9)quls#o`<\FZN0Y!r;up"
r!!$'r<N9,oa1C"r<W?,r<E3(p]L0iYQ3DXo`>!mr<)s$r<E3*r<V`rr<W?,r<E3(p]LBoqZ2QSrrMut
r;up"r<<*'r<W?/r<rQ4oF:a-r<rQ2r<W?+r!!$%r;ucqhZ0_Xo`>!mr<3$%r<N9,r<`B/nI#4$r<W?,
r<<*%r<)]n[fHF.ec>@Dr;up"r!!$'r<N9,lj<Urr<N9*r<;ru!!2coN<&qXo`>!mr<)s$r<E3*r<V`r
r<W?,r<E3(p]L0ij8c(Xq#UEqr<*!%r!***r<iK2r=&<-r=&W4r<iK/r<E0'r<3'#q#S,.cN*V=r;up#
r!!$(r<W?.ljE[tr<W?,r<<0'rri9&o`:9WpAjjer;up"r!!$'r<N9,lj<Urr<N9*r<;ruo`=@YTE+Wc
r;up"r!!$'!!iK.r<V`rr<W?,r<E3(p]L0i_Z7aXq#UEqr<*!%r!***r<iK2r=&<-r=&W4r<iK/r<E0'
r<3'#q#Qrbli?h^r;up"quls%r<DHjr<E3(r<3'$quZNlmJrLPq#UEqq?-a"q$$^$n-Amrq$$QrquZNl
`W3[Pq#UEqp]L<qr<D`rr<E0'rWW*"quZNlScIjPr;liur<*!$r!!$'r<N9,n-T%!r<N9*r<<-&qucm!
q#U-gNWAkUr;up"quls%r<DHjr<E3(r<3'$quZNlblG0Pq#UEqp]L<qr<D`rrs&K-q$$QrquZNlV#]?P
q#UEqp]L<qr<D`rr<E'$q#gNro`=sjLB.8R!!<-$r<*!$r!!$'r<N9,n-T%!r<N9*r<<-&qucm!q#StF
Y5nA!r;up"quls%r<Dcsp]pa%r<<-&r<)s!o`;,of)YUIr;u`rq$$^$n-Amrq$$QrquZTnrrIcQrrDiq
r;u`rq$$^$n-Amrq$$QrquZNlgAn/Pr;liur<*!$r!!$'r<N9,r!E$&r<W?,r<E3(r<3$#r;ucqZN1"*
dK'(Dr;up"quls%r<DHjr<E3(r<3'$quZcsq>lEQq>g<lr;u`rq$$^$n-Amrq$$QrquZNlhuKMPq#UEq
p]L<qr<D`rr<E'$q#gNro`;Q&b5hJAr;up"r<3$%r<E3*r<Vm!r<W?,r<E3(r<3*%rr`3$q#QQWo)SFa
r;um!q#p3koE>*pr;uTlhZ0/Ho`>!mp]CL!rWM`pqulZpr;uTl[fF>Ho`>!mp]LHtnHJgno`P-ooDt!Q
li?h^r;up"qulg!nHSUhr<3'$r;u`pjoCYHo`>!mrWE0&q#p3koE>*pr;uTl^&YhHo`>!mp]LHtnHJgn
p]LKtr;uTlQ2p"Ho`>!mp]LHtnHJgno`P-ooE"=ZNWAkUr;up"qulg!nHSUhr<3'$r;u`p`;m=Ho`>!m
quc`tnHJalqZQj"r;uTlSH.LHo`>!mp]LHtnHJgno`P-ooE"RaLB.5Qq>pNrp]LHtnHJgno`P-ooE!/9
Y5nA!r;up"qulg!nHSUhr<3'$r;u`pU]B!Ho`>!mquc`tnHJOfr<*!"oE"ghJcPfNo`>!mp]LHtnHJgn
o`P-ooE!D@VuZJkr;u`rr<2m!q??d"o`P-ooDtumrrCIIq#UEqr<)s#q$$9moEG0rr<*!"p]1?pJcPKE
o`=ghm0!+bnH$r9T)eNbp]C6no`OsjnH#Nf`rPc5p]Bgbp]BsdrW%NMmf<.ar;u`rm0*1dq#^?mec;';
o`=gh!!DWkp]BsdXoQ6;o`=ghm0!+bo`>!lL&gE;o`=ghm0!+bnH%GGOT>1Xr;us#qZH3gp]L<nq#Rl'
\H):'p]Bgbp]C?op&U-Qi;iNOp]Bgbp]Bsdj8b&;q#UEpp]Bgbp]Bsd]E#5;q#UEqp]Kmdq?-a"q#^?m
PQ9D;o`=ghm0!+bnH%qUK)blPp&Xpim0!+bnH$N-WrVenp]Bgbp]BsdRfLn;q#UEqp]Kmdp]L<nq#U$d
JcPNFcN1`[TE+!Qm/`LQrrC1AcN3>3JcP?Aq#TOXoDui0RfMXQkQ..Q_Z8!`nc47AlN#63aoIY+q#U3k
mK3"]U&_h+cN3hAJcOj3cN2DnN<&YQg&\/Q[/g"'j9"rS!!%TNh#Pb%fDpX+r;k@JYQ1g+eH,OJL]H!+
q#TOXoE!hLJcPKEkQ.O\T)e'Ur;_EL`rP<(eGt1$mf;PPXT4^glN-tcK`M,Q_>rd#g&Q^)l2^#KZ2g'g
n,`=cM?(6gkQ0WBJcOg2kQ/3oMu`SQnc=jQZiK:jkQ$27g]6O=^]9&grW2<cQiO5gkQ1,PJcO=$kQ/^(
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcOX-J,~>

%%EndBinary
grestore
np
49.5 -129.501 mo
-1.503 -129.501 li
-1.503 -183.501 li
49.5 -183.501 li
49.5 -129.501 li
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
593.181 169.083 mo
574.101 169.083 li
574.101 141.426 li
574.101 141.291 574.056 141.165 573.957 141.075 cv
573.867 140.976 573.741 140.922 573.606 140.922 cv
568.536 140.922 li
574.776 137.799 li
569.682 134.586 li
577.089 128.205 li
563.976 133.947 li
568.755 137.088 li
561.444 140.922 li
542.187 140.922 li
542.187 115.083 li
593.181 115.083 li
593.181 169.083 li
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[51.4811 0 0 54.48 541.944 99.6766 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 214 
/H 227 
/M[214 0 0 -227 0 227 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 214 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 214 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 214 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 214 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcPfNO9"kQi;oYQ\,atYq#H!HhuM4,d/]"'q>p0gr;u<dW;s1'dfBFKJcOI(dfJ)$
JcO7#YQ1['liI%dncAUgL]Gj'dfJ>+JcPWIdfHoXUB'3QoDt!Qb5gl0r;u<djoBu5o)R5?^&XZ'k5jrN
Q2ni'dfJh9JcP-;liI%dliG'*PlU4QjoM"Q]`?L^oDjICjT*a1bQ.YCO9"kQq>pNrliEg\^]<j)klU>T
r;_ELkQ()QklU>TeGt^3ncAakklU>TXT5m3q#U6lkl^\^quQctK`L'3n,_bTn,_;EM?*GQp]9U\n,]lr
Z2j@pklU\^pAp3Qg&UpLp]B[^p]C6lirF]3!!2TjklU>T])\l3n,_bTn,\^QdfAk<klU>Tl2ZD9qZ-Em
p]B[^p]C6l_>pA3n,`"[q?$-eRK1P3n,_bTn,`%ZJcPECn,_bTn,^W2SH/Hdp]C0lo)nahq#R/hdK&n?
q#^Ksj955Zo`=sjJcPWIoE"ahn,rUlo`Osjo`<PBrrAkqoE"aho)nsor<2cqp]C*hWW:9Dp]:<pq#gQu
j9>;\r;ucqJcPHDoE"ahr<)*`p]C*hf`7TDoE"ahq?-Hor<2cqp]C*hYlMcDoE"ahn,rUlo`OsjquQWp
M#crDp]:<pq#gQuj9>;\r;ucqhuK)DoE"ahr<)*`p]C*h\,a8DoE"ahn,rUlo`P$lrrVioO9"GDoE"ah
n,rUlo`Osjo`=4UO9#%Vr;ls$q?-[!j9>;\r;ucq^AtbDoE"ahr<)*`p]C*hQN5qDoE"ahn,rUlo`Osj
o`=I\M#dAQqZ6Kon,rUlo`Osjo`<&4YlOP"r;ucsr<2Eiq??Wrr;ucqScI^LoE"mlr<)iur<;s#r<N-&
r<;s!r<*!"q#U-gM?*GQquQ`tq#gQuoEG0to`b9sp]LHrq#S_?Z2jLtr;ucsr<2`rr<E9*pBCKup]LHr
q#R;lg&UpLquZg!r<2p"r<E$%r<W3(r<E$#r<3'$q#UBnK)blPo`>!mr<)iur<;s#r<N-&r<;s!r<*!"
q#StFrrB/$oE"mlq#gQuoE>4!rW`$!r<2ltr;ucqWW:QLoE"mlq#gQuoEG0to`b9sp]LHrq#Q'Ir;cWo
quZg!r<2p"r<E$%r<W3(r<E$#r<3'$q#T.KV?$5hr;up"q#pX"rW`6(r<N-&r<;s!r<*!"q#R`#c2dJ;
r;ucsr<2`rr<Dour<2ltr;ls"q>lEQp&O^cr;ucsr<2`rr<Dour<2ltr;ucqhuKALq#UBpr<*!$q$$^$
p]pa'q$6j&p]^U!r<)ir\,aPLoE"mlr<)iur<;s#r<N-&r<;s!rr`9'r;ucqO9"_LoE"mlq#gQuoEG0t
o`b9sp]LHrq#TXYQiQaZr;um!rWE*%oEG0to`b9sp]LHrq#S51^]=02quZg!r<2p"r<E$%r<W3(r<E3(
r!!$%r<)irQN6@Pq#UEqqucm#r<<-(r<N*'q$Hj&r<N9*p]UNsq#Tm`PlUU\r;uftrr`'#r<E$%q$?d$
r<E3(quls#r;ucq`W3[Pq#UEqp]L<qr<E$%q$?d$!!`E,r<<*%r<*!"q#R&ejT,5[r;up"quls%r<E3*
r<W0*q$[!*r<W?,p]^Tur;uouo`1!Pq#UEqqucm#r<<-(r<N*'q$Hj&r<N9*p]UNsq#S_?[K-+(r;u`r
q$$^$p]pU#rs/E+r<E3(quls#r;ucqV#]?Pq#UEqp]L<qr<E$%q$?d$r<E3(quls#r;ucqquDKPr;cm"
rW<$#quls%r<E3*r<W0*q$[!*r<W?,p]^Tur;uoue,]LKYlOS#r;um!r<3'&r<E3*p^$d(rX&B+r<N9*
p]UNsq#RJqf`:gKr;u`rq$$^$p]pU#q$6j&r<<*%r<*!"q#Q'Iq#UEqp]L<qr<E$%q$?d$r<E3(quls#
r;ucqf`8#Pr;liur<)s#r<<-(r<N9,q?m60q$[!*r<W?,p]^Tur;uouYlN2Pq#UEqqucm#r<<-(r<N*'
q$Hj&r<N9*p]UNs!!2osM#dAPq#UEqp]L<qr<E$%q$?d$r<E3(quls#r;ucqhuKMPq#UEqp]L<qr<E$%
q$?d$r<E3(quls#r;ucq\,a\Pr;liur<)s#r<<-(r<N9,p^6g)q$R'+r<N0&rrr?'r;uouO9#"Tq#UEq
r<3$%r<N9,r<`E0r<r6+r<rQ2r<`E-r!**&r<*!"q#Td]TE+cgr;up"r!!$'r<E<.rWrH/r<i0)r<iK0
r<W?,r!!$%r<*!"q#SA5a8l#:r;up"r!!$'r<N9,r<`E0oF(U)r<`E.r<N6(r<3'$r;ucqRfMpXr;liu
r<*!%r!***r<iK2r=/*'r=&W4r<`B,r<<-&r<)irnc5'Xq#UEqr<3$%rs/Q/r<W?.r<iK2oF1[+r<iK0
r<N6)r<3'$r;ucqaoK6Xq#UEqr<)s$r<E3*r<W?.r<i0)r<iK0!!rQ0r<N6(r<3'$r;ucqU&aEXq#UEq
r<)s$r<E3*r<W?.r<i0)r<iK0r<W?,r!!$%r<*!"q#U9kOoYF]r;up"r<<*'r<W?/r<rQ5ljit&r<rQ1
r!30(r<3'$q#SkC\cDO,r;up#r!!$(r<W?.r<iK2oF1a-rsSc4r<`E-r!**&r<*!"q#RGpiW/cTr;up"
r!!$'r<N9,r<`E0oF(U)r<`E.r<N6(r<3'$r;ucq!!%oWq#LHsrW<$#r!!$'r<N9,r<`E0oF(U)r<`E.
r<N6(r<3'$r;ucqfDtpO[/g.+r;up"r<<*'r<W?/r<rQ5o+(U,r=&W4r<`B,r<<-&r<)irXoR8Xq#UEq
r<3$%r<N9,r<`E0r<r6+r<rQ2r<`E-r!**&r<*!"r;litM?*SUr;liur<)s$r<E3*r<W?.r<i0)r<iK0
r<W?,r!!$%r<*!"q#T:OXoS7ur;up"r!!$'r<N9,r<`E0rX8H.r<iK0r<W?,r!!$%r<*!"q#Rl'ec>XL
r;up"r<<*'r<W?/r<rQ5ljit&r<rQ1r!30(r<**&rWDrsNW9%[q>pNrr<3'&r!30,r<rQ5r=8c:p^mB7
r=8c8r<rQ1r!30(r<3'#q#TOVWrVqrr;up"r<<*(r<W?/r=&W6n.,C+r=&W3r<W<*r<<-%r;ucq]E$C\
q#UEqr<*!%r!30+r<iK2q$m*/q$m91r<iK/r!*0)rrr?'r;ucqPQ:R\r;liur<*!%r<E0+r<rQ6r=Ai=
r=\l=r=]&@r=Ai:r<rN/r<E3(r<)irlN!^\q#UEqr<3'&r!30,r<iT7rXJf9r=AZ7r=Ai:r=/]5r<`B,
r<<-&r;ucq_Z7m\q#UEqr<*!%r!30+r<iK3r=/6+r=/]6r<iK/r!**'r<*!"q#QrboDn[fr;up"r<<*(
r<W?/r<rE1p^[*/r<rQ2r<W<*r<<-%r;ucqnc53\r;liur<*!%r<E0+rsSi7r=8c:r=Su@p_3T=r=Su=
r=8c6r!<6*r<<-%q#SV<`;o]7r;up#r<<*(r<`E1r=/]8r=AZ7r=Ai:r=&`7rX8Z2r!30(r<3'#q#R2i
m/Zq_r;up"r<<*(r<W?/r=&W6n.,C+r=&W3r<W<*r<<-%r;ucqq#H]\q#UEqr<*!%r!30+r<iK2q$m*/
q$m91r<iK/r!**'r<*!"q#SkC^&\*4r;up"r<<-(r!E<0r=8c:r=Su@p_3T=rt58Cr=Ai:r<rN/r<E3(
r<)irW;u&\q#UEqr<3'&r!30,r<rQ5r=8c:p^mB7r=8c8r<rQ1r!30(r<3'#q#LHqNr\tVr;ls$rWE*&
r!30+r<iK3r=/6+r=/]6r<iK/r!**'r<*!"q#T+JrrBS0q#UEqr<*!%r!30+r<iK2q$m*/!"Jc6r<rQ2
r<W<*r<<-%r;ucqXoRD\r;liur<*!%r<E0+r<rQ6r=Ai=r=\l=r=]&@r=Ai:r<rN/r<E3(r<*!!r;hoY
q#UEqr<3'&r!30,r<rQ5r=8c:p^mB7r=8c8r<rQ1r!30(r<3'#q#T:OZ2j\$r;up"r<<*(r<W?/r=&W6
q@<60r=/]6r<iK/r!**'r<*!"q#Rl'g&UpLr;up"r<<*(r<W?/r<rE1p^[*/r<rQ2r<W<*r<<-%!!<-$
q#QKU!!3'"r;up"r<<-(r!E<0r=8c:r=Su@p_3T=r=Su=r=8c6r!<6*r<<-%q#TOVY5nA!r;up#r<<-)
r!NB2r=8c;r=f,Cr"Sr?r=Su=r=/]4r!<6*r<3'#q#S,.f)YUIr;up"r<<-)r!E<0r=/]9r=SZ7r=Su>
r=8c7r<`B,rrrE+r<*!"q#Q][rrDiqr;up"r<<-)r!E<0r=/]9q%<N;q%<Q9r=/]5r<`B,r<<-%r;ucq
lN!j`q#UErr<<-(r<`B1r=8c<!#5DHq%rrGq%ruEr=]&>r=/Z3r<N9)r<*!"r;je9ciEkBr;up#r<<-)
r!NB2r=8c;q%NZ?q%N]=r=Ai9r<iH.r<E3'r;ucqRfN3`q#UEqr<*!%r<N6,r<rQ5r=Ai=oFh*7r=Jo;
r=&W2r!30(r<*!"q#U$dT`Flhr;up"r<<-)r!EB2rsSc7r=A]9r"Af;r=Ai9r<rQ1r!30(r<*!"q#SV<
aT2,;r<*!%r<E3,r!`N6r=SuBq%rrGq%ruEr=T)@rX\r:r!NB-r<<-%r;uouU&a]`q#UEqr<3'&r<N6-
r=&W7r=Jc<r"Sr?r=Su=r=/]4r!<6*r<3'#q#U9kRK3-ar;up"r<<-)r!E<0r=/]9r=SZ7r=Su>r=8c7
r<`B,r<<-%r;ucqd/_#`q#UEqr<*!%r<N6,r<rQ5r=A]9r"Af;rt#,?r=/]5r<`B,r<<-%r;ucqW;u2`
q#UErr<<-(r<`B1r=8c<r=o&Dr##5Gr>#8Dr=Ai9r!NB-r<<-%r;uou!!&2_q#UEqr<**(rWW6*r!NB2
r=8c;q%NZ?q%N]=r=Ai9r<iH.r<E3'r;ucqfDtpO]`@j/r;up"r<<-)r!E<0r=/]9r=SZ7!"o2Br=Jo;
r=&W2r!30(r<*!"q#RVujT,)Wr;up"r<<-)r!E<0r=/]9q%<N;q%<Q9r=/]5r<`B,r<<-%r;uour;i&]
q#UErr<<-(r<`B1r=8c<r=o&Dr##5Gr>#8Dr=Ai9r!NB-r<<-%r;uouh#Ok`q#UErr<3'(r<iH3r=Jo@
r>#8Ir>>MOru(bPr>,>Gr=Su<r<rN/r<E3'r;ucq[/f%`q#UErr<3''r<`B1r=8c<r=f,EoG7B>r=]&?
r=/]4r!30(r<!$$rW;lrOoYC\rW2s"r<3''r<`B0r=8c<r=euAr"f5Gr=o2Cr=Ai9r<iH-r<<-%r;ucq
j8c@`r;liur<3'&r<W?1r"&`>r>5DMr>bbVr#YeWr>Y\Pr>#8Cr=8`4r<N9)r<)ir]E$O`q#UErr<3'(
r<iH3r=Jo@r>#8Ir>>GMr>>JKr=o2Br=8c6r!<<,rs&E)r;ucqPQ:^`q#UErr<3''r<`B1r=8c<r=f,E
oG7B>r=]&?r=/]4r!30(r<*!"q#Td]VuZVor<*!$r<E3,r!WH5r=K#CrY,)Br"f5Gr=o2Cr=Ai9r<iH-
r<<-%r;ucq_Z8$`r;liur<3'&r<W?1r"&`>r>5DMr>bbVr#YeWr>Y\Pr>#8Cr=8`4r<N9)r<)irRfN3`
q#UErr<3'(r<iH3r=Jo@r>#8Ir>>GMr>>JKr=o2Br=8c6r!<6*r<3'#q#U$dT`Flhr<*!$r<E3,r!`T8
rsnu>r=f,EoG7B>r=]&?r=/]4r!30(r<*!"q#SV<aT2,;r<*!$r<E3,r!WH5r=SuAq%`fCr>#8Fr=]&>
!"Jo:r<iH-r<<-%r;ucqU&a]`r;liur<3'&r<W?1r"&`>r>5DMr>bbVr#YeWr>Y\Pr>#8Cr=8`4r<N9)
r<)irq#Hi`q#UErr<3'(r<iH3r=Jo@r>#8Ir>>GMr>>JKr=o2Br=8c6r!<6*r<3'#q#SkC_>sB4r<*!$
r<E3,r!`N6r=SuAr>"r?r=o8Ert>8Ar=/]4r!30(r<*!"q#RGpl2^V\r<*!$r<E3,r!WH5r=SuAq%`fC
r>#8Fr=]&>r=/]4r!30(r<*!"q#LHqP5tO^r;up#r<30,rWrH2r"&`>r>5DMr>bbVr#YeWr>Y\Pr>#8C
r=8`4r<N9)r<)irfDtpO]`A!3r;up#r<E3,r=/Z9r=o2Hr>PVSp`9;Q!#bbRr>5DGr=Jo:r!E<+r<3'#
r;inujT,5[r;up"r<<-*r=&T7r=]&Dr>>JNp_s)Kr>5DIr=]&=r=&T0r<<-%r;uouNWB"Yr;up"r<<-*
r<rN6r=]&Dr>5DMp_s)Kr>5DIr=Su<r<rN/r<<-%r;uouf`8G\r;lj!r<<-)r<rQ7r"T)Hr>bbYr?;"^
s!.Icr?(tXr>5DGr=Af6r<N9)r<*!!YlNV\r;liur<3''r<`E3r"/f@r>5DNr>bSQr>bbRr>5DGr=Jo:
r!E<+r<**%rW<$!NWB"Y!!<-$r<*!%r<W?1r"&`=r>#8Jr>GAKr>GPMr>#8Dr=8c7r!<6)r<*!"r;kgV
Y5nM%r;up"r<<-*r<rN6r=]&Dr>5DMp_s)Kr>5DIr=Su<r<rN/r<<-%r;uou\,b+\r;lj!r<<-)r<rQ7
r"T)Hr>bbYr?:q\r?;+]r>bbPr=f,?r!WN0rs/K+r<*!!O9#:\r;liur<3''r<`E3r"/f@r>5DNr>bSQ
r>bbRr>5DGr=Jo:r!E<+r<3'#r;l']VuZbsr;up"r<<-*r=&T7r=]&D!#Y\Pr>GAKr>GPMr>#8Dr=8c7
r!<6)r<*!"r;jY5ciF"Fr;up"r<<-*r<rN6r=]&Dr>5DMp_s)Kr>5DIr=Su<r<rN/r<<-%r;uouQN6d\
r;lj!r<<-)r<rQ7r"T)Hr>bbYr?:q\r?;+]r>bbPr=f,?r!WH.r<<-%r;l<dT`G#lr;up#r<E3,r=/Z9
rtPJIr>5DNr>bSQr>bbRr>5DGr=Jo:r!E<+r<3'#r;jn<aT28?r;up"r<<-*r=&T7r=]&Dr>>JNp_s)K
r>5DIr=T)?rXSl8r!<6)r<*!"r;iJinGrLgr;up"r<<-*r<rN6r=]&Dr>5DMp_s)Kr>5DIr=Su<r<rN/
r<<-%r;uouo`1E\r;lj!r<<-)r<rQ7r"T)Hr>bbYr?:q\r?;+]r>bbPr=f,?r!WH.r<<-%r;k.C`rPl8
r<*!%r<W?1r=Jl@r>>JQr?(t\r?D._r?(tXru(hSr>#8Br=/Z2r<E3'r;uouV#]rap]:<qr<<-)r<rQ6
r"ArDr>GPRr>khYr#YeVr>PVMr=f,?r=&T0r<<-%r;uouquE)ap]:<qr<<-)!"8c6r=8`<r>#8Kr>Y\U
p`BAQr>GPLr=f,?r<rN/r<<-%r;uoue,]LK_>sK7r;up#r<E3-r=8c>r##AQr?;+cr?qOmr$_Li!$_Cd
r>tnTr=o2@r!WH.r<<-%r;inul2^S[r<*!%r<W?1r=Jl@r>>JQr?(t\r?D._r?(tXr>GPKr=Jo:r!E<+
r<3'#r;i)^p]:<qr<<-)r<rQ6r"ArDr>GPRr>khYr#YeVr>PVMr=f,?r=&T0r<<-%r;uouf`8Vap]:<q
r<<-)r<rQ6r"ArCr>GPQr>k_UruV+Xr>GPLr=f,?r<rN/r<<-%r;uouYlNeaquQ`tr<3''r<iK5r=f)G
r>kh[r?_Cir@.Xmr?_Cdr>tnTr=o2@r!WH.r<30'rWE*"P5t@Y!!E3&r<<-*r=&W9r"T)Hr>bbXr?2%_
r#u"\r>bbRr>#8Br=/Z2r<E3'r;uouhuL+ap]:<qr<<-)r<rQ6r"ArDr>GPRr>khYr#YeVr>PVMr=f,?
r=&T0r<<-%r;uou\,b:ap]:<qr<<-)r<rQ6r"ArCr>GPQr>kYSr>Y\Qr>,>Fr=Ai7r!<<+rrr?'r;uou
P5tR_rrN'"r<3''r<iK5r=f)Gr>kh[r?_Cir@.Xmr?_Cdr>tnTr=o2@r!WH.r<<-%r;l']XT8+sr<*!%
r<W?1r=Jl@r>>JQ!$D1^r?2%_r#u"\r>bbRr>#8Br=/Z2r<E3'r;uou^Audap]:<qr<<-)r<rQ6r"ArD
r>GPRr>khYr#YeVr>PVMr=f,?r=&T0r<<-%r;uouQN6sap]:<qr<<-)r<rQ6r"ArCr>GPQr>kYSr>Y\Q
r>,>Fr=Ai7r!<6)r<*!"r;l<dV?$Mpr;up#r<E3-r=8c>r##GSruM%]r?_Cir@.Xmr?_Cdr>tnTr=o2@
r!WH.r<<-%r;jn<c2dbCr;up#r<N9.r=8c>r##APr?2%_q'Gqar?D1]r>PVM!"o2Br=/Z2r<E3'r;uou
ScJHaquQ`tr<3'(r<`E3r=SrCr>GPSr?(YTr?(tWr>>JIr=Jo9r!<6)r<*!"r;lQkT)ecir;up#r<N9-
r=/];r"]/Jr>khYq'#YYr>tnVr>5DGr=Ai7r!<6)r<*!"r;k.C`rQ#<r<*!%r<`E3r=SuEr#P_Zr?qOm
q(2For@.[jruh=ar>PVLr=Af6r<N9)r<*!!V#]raquQ`tr<3'(r<iK5r=f)Gr>bbYr?D%`r$;4br>tnU
r>,>Dr=/Z2r<E3'r;uouquE)aquQ`tr<3'(r<WH5rXJf<r"f5Kr>khYoHF/Tr>Y\Pr=o2Ar=&T0r<<-%
r;uoue,]LK_>sK7r;up#r<N9-r=/];r"]/Jr>khYq'#YYr>kqXrYtePr=f,?r<rN/r<<-%r;uouWW;;a
quQ`ur<<-+r=/];r>5APr?;+er@.Onr%%^pr?V=ar>PVLr=Af6r<N9)r<*!!P5tL]r;up#r<N9.r=8c>
r##APr?2%_q'Gqar?D1]r>PVMr=Su;r!E<+r<3'#r;kRO])_a0r;up#r<N9-r=/];r"f5Kr>khYp*'GZ
r?(tWr>>JIr=Jo9r!<6)r<*!"r;j/'irJuXr;up#r<N9-r=/];r"]/Jr>khYq'#YYr>tnVr>5DGr=Ai7
r!<6)r<!$$rW<$!P5tL]r<!$'rWW6,r=/];r>5APr?;+er@.Onr%%^pr?V=ar>PVLr=Af6r<N9)r<*!!
huL+aquQ`tr<3'(r<iK5r=f)Gr>bbYr?D1dr?_@er?D1]r>PVMr=Su;r!E<+r<3'#r;jD.g]76Qr;up#
r<N9-r=/];r"f5Kr>khYoHF/Tr>Y\Pr=o2Ar=&T0rrrE+r<*!"r;i)^rW3$"r;up#r<N9-r=/];r"]/J
r>khYq'#YYr>tnVr>5DGr=Ai7r!<6)r<*!"r;l']XT88"r<*!%r<`E3r=SuEr#P_Zr?hRor[IXor%%^p
r?V=ar>PVLr=Af6r<N9)r<*!!^Auper;lftr<3''r<iK4r=SuDr#>SVr?M7fq'Z(er?M7_r>Y\Nr=Su;
r!E<*r<)irQN6sbquZg!r<<-+r=&W9r=o/Hr>bbYn0@lSr>bbQr=o2Ar=&T0r<<-%q#Tm`WW;tuquZg!
r<<-+r<rQ7r=o/HruD%Yr?2%_q'5e]r?2%Yr>>JHr=Ai7r!<6)r<)ir`W4Eer;lfur<<-)r=&W8r>#8M
r#kqbr@7auq(MXur@7amr?2%W!#>JJr=Af6r<E3'r;uouScJTer;lftr<3''r<iK4r=SuDr#>SVr?M7f
q'Z(er?M7_r>Y\Nr=Su;r!E<*r<)iro`1`er;lftr<*!%r<`E2r=JoAr##APr?1SSr?2%Yr>>JIr=Jo9
r!<6)r<)irblGoer;lftr<*!%r<`E1r=Ai@r##APr?2%_q'5e]r?2%YrttbQr=f,?r<rN/r<<-%q#R;l
o)S^iqucm$r<N90r=AiAr>YYWr?hImr@[n!r%@ptr?hIcr>PVLr=Af6r<E3'r;uouquE5er;lftr<3''
r<iK4!"o2Br>,;Mr?(t_r?h=fr$M@er?(tWr>,>Dr=/Z2r<<-%q#StFrrC%=r;lftr<*!%r<`E2r=JoA
r##APr?1SSr?)([rZ(kRr=o2Ar=&T0r<<-%q#RJqmK!1dquZg!r<<-+r<rQ7r=o/Hr>bbYr?D%^r$)(^
r>bbQr=f,?r<rN/r<<-%q#Qf^r;lfur<<-)r=&W8r>#8Mr#kqbr@7auq(MXur@7amr?2%Wr>#8Ar!WH-
r<3'#r;kRO^B"35quZg"r<E3-r=/];r>,;Mr?(t_r?h=fr[.Xlr?M7_r>Y\Nr=Su;r!E<*r<)irYlNqe
r;lftr<*!%r<`E2r=JoAr##APr?1SSr?2%Yr>>JIr=Jo9r!<6)r<!$#q>lo_r;lftr<!$'rWW6,r<rQ7
r=o/Hr>bbYr?D%^r$)(^r>bbQr=f,?r<rN/r<<-%q#TCR\,cI.qucm$r<N90r=AiAr>YYWr?hImr@\%%
r@e($r@7amr?2%Wr>#8Ar!WH-r<3'#r;jD.huN]VquZg"r<E3-r=/];r>,;Mr?(t_r?h=fr$M@er?(tW
r>,>Dr=/Z2rrrE+r<)irQN6sbrW<*$r<*!%r<`E2r=JoAr##APr?1SSr?2%Yr>>JIr=Jo9r!<6)r<)ir
k5_aer;lftr<*!%r<`E1r=Ai@r##APr?)(arZ_._r$)(^r>bbQr=f,?r<rN/r<<-%q#S51f`:sOqucm$
r<N90r=AiAr>YYWr?hImr@[n!r%@ptr?hIcr>PVLr=Af6r<E3'r;uouRfNBfr;lfur<<-*r<rQ8r=o2J
r#Ye\r?hIkq'l4hr?V=ar>Y\Nr=Su;r!<6)r<)irmJsBiq#UBqr<<-)r<iK5r=]&Er#>YXru_1aod0M\
r?;+[r>>JIr=Jo9r!30(r<)ir`W4Qiq#UBqr<<-)r<iK5r=]&Er#>SVr?D1cq'Gq`r?2%Zr>>JH!"]&>
r<rN.r<<-%q#R&erW)ltr;um"r<E3-r=8c>r>>JSr$;4ir@\%'q(hk$r@@gor?2%Wr>#8Ar!NB,r<3'#
r;lQkVZ?Mnqucm$r<W?0r=JoAr>GMSr?D1er@%Ijr$VFgr?2%Xr>,>Dr=/Z1r<<-%q#S_?cN*bAqucm$
r<N9.r=8c=r>,;Mr?(t_od0M\r?;+[rttbQr=o2Ar=&T/r<<-%q#R;lpAk!iqucm$r<N9.r=8c=r>,;M
r?(t^r?V1br$2._r>khRr=f,?r<rN.r<<-%q#UBnTE+okr;um"r<E3-r=8c>!#Y\Pr>tk^r@.[trA"+'
r%J"!r?qOdr>PVLr=Af5r<E3'r;uoue,]LKaoM5<qucm$r<W?0r=JoAr>GMSr?D1er@%Ijr$VFg!$M7`
r>Y\Nr=Su;r!<6)r<)irWW;Siq#UBqr<<-)r<iK5r=]&Er#>SVr?Lt]r$2.`r>khRr=o2Ar=&T/r<<-%
q#Qrbq#UBqr<<-)r<iK5r=]&Er#>SVr?D1cq'Gq`r?2%Zr>>JHr=Ai7r!30(r<)irf`8nir;liuquls&
r<iK5r=f,Hr>tk^r@.[trA"+'r\+:)r@@gor?2%Wr>#8Ar!NB,r<3'#r;j/'lN$_]qucm$r<W?0r=JoA
r>GMSr?D1er@%Ijr$VFgr?2%Xr>,>Dr=/Z1r<<-%!!2osRfN6bqucm$!!iK.r<iK5r=]&Er#>SVr?Lt]
r$2.`r>khRr=o2Ar=&T/r<<-%q#TCR]E%a.qucm$r<N9.r=8c=r>,;Mr?(t^r?V=fr?_@dr?2%Zr>>JH
r=Ai7r!30(r<)ir\,bRir;liuquls&r<iK5r=f,Hr>tk^r@.[trA"+'r%J"!r?qOdr>PVLr=Af5rs&K-
r<3'#r;iMjq#UEqrWN6(r<N9.r=8c=r>5DPr#u"br@%Uor@@grr$_Lir?2%Xr>,>Cr=&T0r<<-%r;kpY
\H)F+r;um"r<E3,r=/]:r>#8Kr#Ye[r?VFjr[.Rkr?hFfr?;+[r>>JIr=Ai7r!30(r<*!!])^diq#UEq
quls&r<`E3r=JoBr>GMSr?;+bod9S^r?;+[r>>JHr=Ai7r!30(r<*!!RfNBfr;up"r!!$)r=&W:r>,>O
r?;(er@In%oeZM"r@Impr?2%Wr=o2?r!NB,r<3'#l2\*iq#UEqquls'r<iK5r=]&Fr>b_Ys!@[kr@%Uo
r@@grr$_Lir?2%Xr>,>Cr=&T0r<<-%r;jb8g&UpLr;um"r<E3,r=/]:r>#8Kr#Ye[r?_Chr?qOjr$;4a
r>khRr=f5BrX\r8r!30(r<*!!RfEEhq>pNrquls&r<`E3r=JoBr>GMSr?;+bod9S^r?;+[r>>JHr=Ai7
r!30(r<*!!nGoTir;liur<)s$r<W?1r=SuDr>bbZr$_LprA!t$r%S(#r?qOdr>PVKr=8`4r<E3'r;t(@
dfB1Er;um"r<N9.r=8c=r>5DPr#u"br@%Uor@@grr$_Lir?2+Zru:nPr=Jo9r!<6)r<*!!T`Friq#UEq
quls&r<`E3r=JoBr>GMSr?;+cr?hIjr?hFfr?;+[r>>JIr=Ai7r!30(r<*!!p].)iq#UEqquls&r<`E3
r=ArDrY>ALr#Ye[r?V%_r$;4ar>khRr=f,?r<rN.r<<-%r;k7FrrC=Er;liur<)s$r<W?1r=SuDr>bbZ
r$_LprA!t$r%S(#!%7anr?2%Wr=o2?r!NB,r<3'#V?$;iq#UEqquls'r<iK5r=]&Fr>b_Yr?_Cjr@7ar
r@7^nr?_Cbr>Y\Nr=Jo9r!<6)r<*!!r;`Giq#UEqquls&r<`E3r=JoBr>GMSr?;+cr?hIjr?hFfr?;+[
r>>JIr=Ai7r!30(r<*!!eH!Viq#UEqquls&r<`E3r=JoBr>GMSr?;+bod9Y`s!7Odr>khRr=f,?r<rN.
r<<-%r;j##mf<:er;up"r!!$)r=&W:r>,>Or?;(er@In%oeZM"r@Impr?2%Wr=o2?r!NB,r<**%rW8Ph
r;liur<3$%r<NB3rXA`:r>#8Lr?(q^r?qOnq()Cnr$_Lhr?(tVr=o2Ar<rN.r<3'#r;k[R^]=<6r;up"
r!!$(r<rQ7r=f,Hr>b_Xr?M7fq'Z+fr$;4ar>bbQr=]&=r<iH-r<3'#r;j8*kQ(P^r;up"r!!$(r<rQ7
r=f,Gr>YYWr?M7fq'Z+fr$;4`r>Y\Or=]&=r<iH-rri?)r;uouRfNBfr<*!%rW`B,r<iK5r=o2Jr?2%b
r$qXurA47+rA4@*r@@gmr?2%Ur=f,>r!E<*r<*!!irHUir;liur<3$%r<W?1r=JoBr>PVVr$2.fr@.dt
qCDLor$_Lhr?(tVr=o2Ar<rN.r<3'#r;jM1i;ifWr;up"r!!$(r<rQ7r=f,Hr>b_Xr?M7fq'Z+fr$;4a
r>bbQr=]&=r<iH-r<3'#r;iAfr;liur<)s$r<N9/r=Ai?r>5DOr#kq_r?h=fr?hFfr?2%Xr>5DFr=8c5
r!30'r;uoul2\*ir;lj!r<<*'r<iK5r=o2Jr?2%br$q_"s"F=,q)&%+r%S("r?_Cbr>>JHr=8`3r<<-%
r;jb8g&V'Pr;up#r!!$)r=&W9r>#8Lr?(q^r?qOnq()Cnr$_Lhr?(tVr=f5CrXf#9r!30'r;uouRfEEh
rW2s!r<)s$r<N9/r=Ai?r>>JQr#kq_r?h=fr?hFfr?;+Zr>>JGr=8c5r!30'r;uounGoTir;liur<)s$
r<N9/r=Ai?r>5DOr#kq_r?h=fr?hFfr?2%Xr>5DFr=8c5r!30'r;uouaT0cir;lj!r<<*'r<iK5r=o2J
r?2%br$qXurA47+rA4@*r@@gmruh=ar>>JHr=8`3r<<-%r;iSlqZ-Qqr;up#r!!$)r=&W9r>#8Lr?(q^
r?qOnq()Cnr$_Lhr?(tVr=o2Ar<rN.r<3'#r;lZnU]C>or;up"r!!$(r<rQ7r=]/JrYYSRr#kq_r?h=f
r?hFfr?;+Zr>>JGr=8c5r!30'r;uouciF(Gc2deDr;up"r!!$(r<rQ7r=f,Gr>YYWr?M7fq'Z+fr$;4`
!#tnVr>5DFr=8c5r!30'r;uouV?$;ir;lj!r<<*'r<iK5r=o2Jr?2%br$qXurA47+rA4@*r@@gmr?2%U
r=f,>r!E<*r<*!!r;`Smq#UEqr<3$'r<iK5r=f,Hr>kh\r$M@lr@In!r@Imsr$VFer>khRr=f,>r<iH-
r<3'#r;kFKb5h>=r;up#r!**+r=/];r>,>Mr?(q^r?hIkr@.[nr?hLgs!.Iar>PVMr=Su;r<`B+r<*!"
r;j##o)SRer;up#r!**+r=/];r>#8Lr>tk\r?h1cr?hFer?(tVr>#8Cr=/]3r!**%r;ls"rW/Vkr;liu
r<*!%r!<61!"o2Br>5DQr?M7ir%@q(rAFO3rAFO0r%J!tr?M7]r>5DEr=&T0r<<-%r;k[R_uTT6r;up#
r!30-r=8c>r>>JRr?D.dr@7asr@Rt!r@7^mr?D1\r>>JHr=8c5r!30'r;uouZiKFmq#UEqr<3$&r<`E3
r=SuDr>PVVr$2.er@%Unr@%Ukr$2.^r>PVMr=Su;r<`B+rr`9'r;uouT)eZfr;up#rW`B,r<`E3r=SuC
r>PVUr$)(dodKbcr$2.^r>PVLr=Su;r<`B+r<*!"r;kpY]`A!3r;up"r<<*)r=/];r>5DQr?M7ir%@q(
rA=R5r\j^4rA4@)r@.[ir>khQr=Su:r!<6)r<*!!])^pmq#UEqr<3$'r<iK5r=f,Hr>kh\r$M@lr@In!
r@Imsr$VFer>khRr=f,>r<iH-r<3'#r;iMjq#UEqr<3$&r<`E3r=SuDr>PVVr$2.er@%Unr@%Ukr$2.^
r>PVMr=Su;r<`B+r<*!"r;l0`[K-+(r;up#r!**+r=/];r>#8Lr>tk\s!IamodKbcr$2.^r>PVLr=Su;
r<`B+r<*!"r;jb8h>mKTr;up"r<<*)r=/];r>5DQr?M7ir%@q(rAFO3rAFO0r%J!tr?M7]r>,GGrXo);
r!<6)r<*!!T)ecirW2s!r<3$'r<iK5r=f,Hr>kh\r$M@lr@In!r@Imsr$VFer>khRr=f,>r<iH-r<3'#
r;lEgY5nA!r;up#r!**+r=/];r>,>Mr?(q^r?hIkr@.[nr?hFer?(tVr>,>Dr=/]3r!**%r;uouaT0om
q#UEqr<3$&r<`E3r=SuCr>PVUr$)(dodKbcr$2.^r>P\NrtYJEr=/]3r!**%r;uouT`G)mr;liur<*!%
r!<61r=SuEr>kh]r@.XsrA4C0rAOU3rA4@)r@.[ir>khQr=Su:r!<6)r<*!!p].5mq#UErr<<*)r=&W9
r>,>N!$M7`r?_@ir@@[qr@@gpr$D:ar>Y\Nr=Su:r<W<)r<)irciF(GdK'(Dr<*!%r!30.r=Ai@r>>JR
r?;(br?qCir?qOir#u"Z!#Y\Pr=o2Ar<rQ/r!!$$q#R>mq>g<lr<*!%r!30.r=Ai?r>>JRr?;(ar?qCh
r?qOhr#u"Zr>>JHr=Ai7r<N6(r<)irr;`Smr;liur<3''r!NB4r=o2Kr?2%dr@Ik$rA==.rA=I-r%.do
r?2%Wr>#8@r<iH,r<3'#r;kFKb5h>=r<*!%r!<60r=JoCr>Y\Xr?_@ir@@[qr@@gpr[%Rjr?2%Xr>,>D
r=&W1r!!$$q#RSto)SRer<*!%r!30.r=Ai@r>>JRr?;(br?qCir?qOir#u"Zr>>JIr=Jo8r<N6(r<)ru
rW/Vkq#UErr<<*(r<iT9rX\r@r>>JRr?;(ar?qChr?qOhr#u"Zr>>JHr=Ai7r<N6(r<)irg]57mr;liu
r<3''r!NB4r=o2Kr?2%dr@Ik$rA==.rA=I-r%.dor?2%Wr>#8@r<iH,r<3'#r;j8*li?h^r<*!%r!<60
r=JoCr>Y\Xr?_@ir@@[qr@@gpr$D:ar>Y\Nr=Su:r<W<)rr`9'q#R)fq#UErr<<0*rs/K1r=Ai@r>>JR
r?;(br?qCir?qOir#u"Zr>>JIr=Jo8r<N6(r<)irirHamq#UErr<<*(r<rQ7r=f,Hr>kh[r$;4gr$_Om
r?qOhr#u"Zr>>JHr=Ai7r<N6(r<)ir])^pmr;liur<3''r!NB4r=o2Kr?2%dr@Ik$rA==.rA=I-r%.do
r?2%Wr>#8@r<iH,r<3'#r;iMjq#UErr<<*)r=&W9r>,>Nr?2%br$_Loq(;Oqr@%Rir?2%Xr>,>Dr=&W1
r!!$$q#Ta\[K-+(r<*!%r!30.r=Ai@r>>JRr?;(bs!Rgoq'l7ir?_@br>khRr=o2Ar<rQ/r!!$$q#S>4
h>m?Pr<*!%r!30.r=Ai?r>>JRr?;(ar?qChr?qOhr#u"Zr>>JHr=8l9rX8Z0r!!$$q#R)fr;cm"rW<$$
r<E0,r=8c?r>PVWr?qOpr%\.,q)81.rA"4$r?qOdr>PVLr=8c5r!**&r;uounGo`mr;liur<3'(r!NB4
r=f,Hr>kh\r?qLmr@In!r@Imsr?qLer>khRr=f,>r<iK.quls"q#SS;f)YaMr;up"r<E0+r=/];r>,>M
r?(t_r$M@jr@.[nr?hIfr#bkUr>,DGrt>8>r<`E,quls"q#R/hrrDuur;up"r<E0+r=/];r>#8Lr?(t_
r$M(br?hIfr#bkUr>#8Cr=/]3r<E0&r;ucqp].5mr;lj!r<<-*r!`N9r>5DQr?D:kr[Ie!r%n:/rAOU3
rA4C*r$hRhr>khQr=Su;r<W<)r<)irciF(GdK'4Hr;up#r<N6-r=8c>r>>JRr?D1fr$qXrr@Rt!r@7an
r$)([!#Y\Pr=f,>r<iK.quls"q#R>mq>gHpr;up"r<E0+r=/];r>,>Mr?(t_r$M@jr@.[nr?hIfr#bkU
r>,>Er=/]3r<E0&r;ucqr;`Smr;liur<*!&r!E<2r=SuCr>PVVr?M4eodKbcr?M4^r>PVLr=Su;r<`E,
quls"q#T"Gb5hJAr<*!%r<W<0r=SuEr>kh]r@.[ur%n:/rAOU3rA4C*r[Ijrr?M7]r>5DEr=/]2r!!$$
q#RSto)S^ir;up#r<N6-r=8c>r>>JRr?D1fr$qXrr@Rt!r@7anr$)([r>>JHr=8c5r<N6'r;ultrW/Vk
r;liur<*!&r!E<2!"o2Br>,>Mr?(t_r$M@jr@.[nr?hIfr#bkUr>,>Er=/]3r<E0&r;ucqg]57mr;liu
r<*!&r!E<2r=SuCr>PVVr?M4eodKbcr?M4^r>PVLr=Su;r<`E,quls"q#Ri&li?tbr<*!%r<W<0r=SuE
r>kh]r@.[ur%n:/rAOU3rA4C*r$hRhr>khQr=Su;r<W<)rr`9'q#R)fr;liur<3'(rX/Z4r=8c>r>>JR
r?D1fr$qXrr@Rt!r@7anr$)([r>>JHr=8c5r<N6'r;ucqirHamr;liur<*!&r!E<2r=SuDr>PVVr?M4e
r@%Un!%@gpr?hIfr#bkUr>,>Er=/]3r<E0&r;ucq])^pmr;liur<*!&r!E<2r=SuCr>PVVr?M4eodKbc
r?M4^r>PVLr=Su;r<`E,quls"q#R)fr;lj!r<<-*r!`N9r>5DQr?M7ir@e()rAFO3rAFO0r@e'tr?M7]
r>5DEr=/]2r!!$$q#Ta\[K-7,r;up#r<N6-r=8c>r>>JRr?D1fr$q^ts"++#r@Imsr?qLer>khRr=f,>
r<iK.quls"q#S>4h>mKTr;up"r<E0+r=/];r>,>Mr?(t_r$M@jr@.[nr?hIfr#bkUr>,>Er=&`5rX&N-
quls"q#R)fr;cm"rW<$#r<E0+r=/];r>#8Lr?(t_r$M(br?hIfr#bkUr>#8Cr=/]3r<E0&r;ucqnGo`m
r;lj!r<<-*r!`N9r>5DQr?M7ir@e()rAFO3rAFO0r@e'tr?M7]r>5DEr=/]2r!!$$q#SS;f)YaMr;up#
r<N6.r=JoBr>PVVr?V=ir%%Ror@@gpr?V:_r>PVMrt,2Ar=/]2r<E0&r;uouSH/Zir;liur<3'(r!NB4
r=f,Hr>bbZr?_@hq'c1hr?V=br#GYPr=o2@r=&W0r<<*$r;uouoDkfir;liur<3'(r!NB4r=f,Gr>Ye[
rZM.br$M4fr?hIgr?2"Xr>5DGr=Ai7r<N9)qucm!r;k+BrrCIIr;lj!r<<-+r!rZ=r>GPVr?hInrA"4+
q)/+,r@n1#r$M@b!#khTr=o2@r<iK.r!!$$r;iVmq>gHpr;up#r<N6.r=JoBr>PVVr?V=ir%%Ror@@gp
r?V:_r>PVMr=Jo:r<W?+quls"r;l]oUB(5nr;up#r<N6-r=8c>r>>JQr?;+cr$V:gr?qOhr?;(Yr>>JI
r=Ai8r<N9)qucm!r;k:Gb5hJAr;up#r<N6-r=8c>r>5DPr?2%ar$M4fr?hIgr?2(ZruCtRr=f,?r<rQ/
r<<*$r;uouW;uMir;lj!r<<-+r!rZ=r>GPVr?hInrA"4+q)/+,r@n1#r$M@br>PVKr=Ai6r<N6(r<*!!
!!&Mhr;liur<3'(r!WH7!#>JJr>PVVr?V=ir%%Ror@@gpr?V:_r>PVMr=Jo:r<W?+quls"r;kON_uT`:
r;up#r<N6-r=8c>r>>JQr?;+cr$V:gr?qOhr?;(Yr>>JIr=Ai8r<N9)qucm!r;j,&li?tbr;up#r<N6-
r=8c>r>5DPr?2%ar$M4fr?hIgr?2"Xr>5DGr=Ai7r<N9)qucs#rrW-"RfNBfr<*!%r<`H5rsnu@r>GPV
r?hInrA"4+q)/+,r@n1#r$M@br>PVKr=Ai6r<N6(r<*!!hZ1=ir;liur<3'(r!WH7r>#8Lr?(t`r@%Ro
q()Lrr[[pqr?V:_r>PVMr=Jo:r<W?+quls"r;jA-jT,5[r;up#r<N6-r=8c>r>>JQr?;+cr$V:gr?qOh
r?;(Yr>>JIr=Ai8r<N9)qucm!r;iAfr;liur<3'(r!NB4r=f,Gr>bbYr?V:fq'c1gr?V=ar#GYOr=f,?
r<rQ/r<<*$r;uoujoDgir;lj!r<<-+r!rZ=r>GPVr?hInrA"4+s#'[2rA4C+r@@dmr?2%Wr=o2@r<iK.
r!!$$r;jV4h>mKTr<*!%r<W<0r=JoCr>bbYr?_CjoIKkhr?_Cdr#GYOr=f,>r<`N0rWiB)quc`qRfNBf
!!E3&r<<-)r!WH6r=o2Jr>kh[r?_(`r?_Cdr?(qUr>#8Cr=/]3r<E3'quc`qm/X<ir;lj!r<<-)r!WH6
r=f,Ir>kh[r?V:fq'Z+er?D1]r#,GJr=Su;r<`E,r<3$#q#SG7f)YaMr<3''r<iH4r=o2Kr?;+er@In%
r%n.*rA+='r@.Xgr>bbPrt58Cr=/]2r<<*%r;uouSH/Zir;lj!r<<-*r!`N8r>,>Or?2%br@%:gr@.[k
r?D.Zr>5DGr=8c5r<N9(quc`qoDkfir;lj!r<<-)r!WH6r=o2Jr>bk]rZV4doI'S`r?D1^r#5MKr=Su;
r<`E,r<3$#q#S\>rrCIIr;lj!r<<-)r!WH6r=f,Ir>kh[r?V:fq'Z+er?D1]r#,GJ!"o2Br=/]3r<E3'
quc`qU&b#ir;lj"r<E3-r!rZ>r>PVXr?qOprA"4+q)&%*r@Rssr$)(Zr>5DEr=/]2r<<*%r;uouq#I/i
r;lj!r<<-*r!`N8r>,>Or?2%br@%:gr@.[kr?D.Zr>5DGr=8c5r<N9(quc`qd/_>ir;lj!r<<-)r!WH6
r=o2Jr>kh[r?_(`r?_Cdr?)"Wru1hNr=Su;r<`E,r<3$#q#RGpo)S^ir<*!%r<N6.r=Ai?r>GPSr?;+b
r$M4er?_Cdr>tkSr>#8Cr=/]3r<E3'quc`q!!&Mhr;lj"r<E3-r!rZ>!#khTr?;+er@In%r%n.*rA+='
r@.Xgr>bbPr=Su;r<W?*quls"r;kON_uT`:r<*!%r<W<0r=JoCr>bbYr?_CjoIKkhr?_Cdr#GYOr=f,>
r<iK.r<3$#q#R]"li?tbr<*!%r<N6.r=Ai@r>GPSr?;+coI'S`r?D1^r#5MKr=Su;r<`E,r<3$#rrMut
RfNBfr<*!%r<N<0rsSc9r=f,Ir>kh[r?V:fq'Z+er?D1]r#,GJr=Su;r<`E,r<3$#q#T@Q]`A!3r<3''
r<iH4r=o2Kr?;+er@In%r%n.*!&FO/r@Rssr$)(Zr>5DEr=/]2r<<*%r;uou[fGLir;lj!r<<-*r!iT:
r>,>Or?;+cr@%Rnr@@grr?qOgr?(qUr>#8Br=&W1r<E3'quZZpRfNBfr<*!%r<N6/r=JoAr>GPTr?;+c
r$M@ir?hIfr?2%Yr##AGr=Ai7r<N9)r<)s!q#TUX[K-7,r<*!%r<N6.r=Ai@r>GPTr?;+bqBl(dr?M7`
r>YYNr=f,?r<rQ/r<<-%quZZp^&[!ir;up#r<E3-r"&`@r>Y\Yr@%UqrA!q#r@e+!r?_@ar>GPJr=8c5
!!iK.r<<*$q#Qrbr;cm#rWE*&r<W<1r=SuDr>bbZr?_Cjr$qXqr@7anr?M7_r#5MKr=Jo9r<W?+r<3$"
q#Tj_Y5nM%r<*!%r<N6/r=JoAr>GPTr?;+cr$M@ir?hIfr?2%Yr##AGr=Ai7r<N9)r<)s!q#SG7f)YaM
r<*!%r<N6.r=Ai@r>GPTr?;+boHsM]r?2%Xr"o;Fr=Ao9rsSc1r<<-%quZZpSH/Zir;up#r<E3-r"&`@
r>Y\Yr@%UqrA!q#r@e+!r?_@ar>GPJr=8c5r<N9)quc`qoDkfir;lj!r<<-*r!iT:r>,>Or?2.er[%Lk
r$qXqr@7anr?M7_r#5MKr=Jo9r<W?+r<3$"q#S\>rrCIIr;lj!r<<-)r!`N8r=o2Jr>tn\r?_@gr?qOj
r?M7`r>b_Pr=]/ArX\r8r<N9)r<)s!q#R2iq>gHpr<*!%r<N6.r=Ai@r>GPTr?;+boHsM]r?2%Xr"o;F
r=Ai7r<N9)r<)s!q#U9kUB(5or<3''r<iH5r>#8Mr?;+fr@In%oJ?G!r@7alr#kqUr=o2?r<iK.r<<*$
q#SkCb5hJAr<*!%r<W<1r=SuDr>bbZr?_Cjr$qXqr@7anr?M7_rYkeTr>#8Br=&W1r<E3'quZZpW;uMi
r;lj!r<<-)r!`N8r=o2Jr>tn\r?_@gr?qOjr?M7`r>b_Pr=f,?r<rQ/r<<-%quZZp!!&Mhr;lj!r<<-)
r!WH6!#5DHr>GPTr?;+boHsM]r?2%Xr"o;Fr=Ai7r<N9)r<)s!q#T+J_uT`;r<3''r<iH5r>#8Mr?;+f
r@In%oJ?G!r@7alr#kqUr=o2?r<iK.r<<*$q#R]"li?tbr<*!%r<W<1r=SuDr>bbYr?V=hoI0Yar?;+Z
r"o;Fr=8c5r<N9(r;ufrrrJGdr;lj!r<<-)rXAf8r=JoAr>GPSr?;+apa,kar?;+\r>PSKr=Su;r<`E,
r<3'#p]9+L]`A!3r<*!%r<N6.r=Ai@r>GPSr?2%`oHXD[rZV4]r>GMJr=Su;r<`E,r<3'#p]7]$jT,5\
r<3''r<iH5r>#8Mr?;+er@@h"pbD_$r@Imqr?D.Zr>5DEr=/]2r<<-%quZftQN6sbr<*!%r<W<1r=SuD
r>bbYr?V=hoI0Yar?;+Zr"o;Fr=8c5r<N9(r;u`piW-Cer;lj!r<<-)r!`N8r=o2Jr>kh[r?M.bs!@Uh
r?;+\r>PSKr=Su;r<`E,r<3'#p]7r+h>mKTr<*!%r<N6.r=Ai@r>GPSr?2%`oHaAYr>tnTr"]/Br=/]3
r<<6)rWN0$p]6]]r;ls%rWN0(r<iH5r>#8Mr?;+er@@h"pbD_$r@Imqr?D.Zr>5DEr=/]2r<<-%quZft
kl@mer;lj!r<<-*r!iT:r>,>Or?2%ar?q4cr?_Ccr>b_Or=f,>r<iK.r<3'#p]822f)YaMr<*!%r<N6/
r=JoAr>GPSr?;+apa,kar?;+\r>PSKr=Su;rsA]3r<E3'r;u`pR/m6er;lj!r<<-)r!WH6r=o2Jr>khZ
r?Lq[r?;+\r>GMJr=Su;r<`E,r<3'#p]9jaVuZbtr<3''r<iH5r>#8Mr?;+e!%\%!r@dq#r@n1$r@%Ug
r#GYOr=Su;r<W?*r<)s!r;jt>rrCIIr;lj!r<<-*r!iT:r>,>Or?2%ar?q4cr?_Ccr>b_Or=]/@rXSl6
r<N9(r;u`pScJTer;lj!r<<-)r!`N8r=o2Jr>kh[r?M(`r?V=br>tnUr"]/Br=/]3r<E3'r;u`po`1`e
r;lj!r<<-)r!WH6r=o2Jr>khZr?Lq[r?;+\r>GMJr=Su;r<`E,r<3'#p]8V>b5hJBr<3''r<iH5r>#8M
r?;+er@@h"pbD_$r@Imqr?D4\ruCtRr=Su;r<W?*r<)s!r;i_ppAk!ir<*!%r<W<0r=JoCr>PVVr?D1d
pa?"dr?D1^r>PSKr=Jo9r<W?*r<)fqp]-req#UErr<<-)r!WH6!#5DHr>>JQr?(t^p`o_\r?(tXr>>GG
r=Ai7r<N9)r<)fqciD,eq#UErr<<-)r!WH6r=f,Gr>Y\Wr?D"]r?;+]r>Y\Or"K#>r<rQ/r<<-%p]7;n
n,WCfr;up#r<E3-r!rZ>r>PVWr?_Ckr@Rdtr@Imrr?_Cbr#,GIr=8c5r<E3'r;ultrrAGeq#UErr<<-*
rXAf8r=JoCr>PVVr?D1dpa?"dr?D1^r>PSKr=Jo9r<W?*r<)fqf)WVeq#UErr<<-)r!WH6r=o2Ir>bbX
r?D"]r?2._rZD(Yr>>GGr=Ai7r<N9)r<)fqY5meeq#UErr<<-)r!WH6r=f,Gr>Y\Wr?D"]r?;+]r>Y\O
r"K#>r<rQ/r<<-%r;lfsQN6sbr;up#r<E3-r!rZ>r>PVWr?_Ckr@Rdtr@Imrr?_Cbr#,GIr=8c5r<E3'
r;ulth>k+eq#UErr<<-*r!`N8r>,>Mr?(t^r?_:fs!Rakr?D1^r>PSKr=Jo9r<W?*r<)fq[K,:eq#UEr
r<<-)r!WH6r=o2Ir>bbXr?D"]r?;+]r>bbQr"K#>r<rQ/r<30'rWDorQN6g^!!E3&r<<-)r!WH6r=f,G
r>Y\Wr?D"]r?;+]r>Y\Or"K#>r<rQ/r<<-%p]9IVZN0q)r;up#r<E3-r!rZ>r>PVWr?_Ckr@Rdtr@Imr
r?_Cbr#,GIr=8c5r<E3'r;ult]`?deq#UErr<<-*r!`N8r>,>Mr?(t^r?_4dr?_Cdr?(tVr"]/Ar=&]3
rs8Q,r<)fqQN7$dqZ6Wtr<<-)r!WH6r=o2Ir>bbXr?D"]r?;+]r>bbQr"K#>r<rQ/r<<-%p]9^]X8r%s
r<*!%r<N6.r=Ai?r>5DO!$D1^r?D"]r?;+]r>Y\Or"K#>r<rQ/r<<-%p]8;5rrCUMr;liur<3''r<iH4
r=o2Kr?2%br@.[spb2Rsr@.[kr?2"Ur=f5ArXSl6r<E3'r;ultRK3<eq#UErr<<-*r!`N8r=o2Jr>khZ
r?M4cr?M7br?(tWr>,;Dr=8c5r<N9(r;uouli<p`q#UErr<<-)r!WH5r=]&Er>PVTr?2"]r?2%\r>bbQ
r=o/@r=/]3r<E3&r;uou_uS*`q#UErr<<-)r!WH5r=]&Er>PVToH=)Rr>Y\Pr=o5Brt,,<r<`E,r<*!"
r;iDgpAk-mr;up#r<E3-r!rZ=r>>JSr?M7gr@7^qr@7apr?_Cbr>YYMr=Su:r<W?*r<*!!o)PE`q#UEr
r<<-*r!`N8!#5DHr>GPSr?2%`r$;4cr?D1^r>Y\Nr"Ar<r<iK.r<3'#r;k(Aa8l#:r<*!%r<N6.r=8c=
r>,>Mr>khZr#u"]r?(tXr>>JIr"/f9r<`E,r<*!"r;iYnn,W7br<*!%r<N6.r=8c=r>,>Mr>kMQr>tnV
r>>JIr"/f9r<`E,r<*!"r;l`pR/m0dr;up#r<E3-rXSr<r=f,Hr>tn^r?qOnr%%^qr@.[kr?2%Xr"f5C
r=&W1r<<-%r;k=H_#X93r<*!%r<W<0r=JoAr>GPSr?2%`r$;4cr?;4`rZD(Xr>,;Dr=8c5r<N9(r;uou
WW;8`q#UErr<<-)r!WH5r=]&Er>PVTr?2"]r?2%\r>bbQr=o/@r=/]3r<E3&r;uouOoY:Yr<*!%r<N6.
r=8c=r>,>Mr>kMQr>tnVr>>JIr"/f9r<`E,r<*!"r;kRO\cD[0r;up#r<E3-r!rZ=r>>JSr?M7gr@7^q
s!n$ur@.[kr?2%Xr"f5Cr=&W1r<<-%r;j/'iW/cTr<*!%r<W<0r=JoAr>GPSr?2%`r$;4cr?D1^r>Y\N
r"Ar<r<iK.r<**%rW<$!OoY:Y!!E3&r<<-)r!WH5r=]&Er>PVTr?2"]r?2%\r>bbQr=o/@r=/]3r<E3&
r;uouhuL(`q#UErr<<-)r!WH5r=]&Er>PVTr?1kXr>tnVr>>JIr"/f9r<`E,r<*!"r;jD.gAq0Qr;up#
r<E3-r!rZ=r>>JSr?M7gr@7^qr@7apr?_Cbr>YYMr=Su:rs8W1r<<-%r;i&]rrMutr<*!%r<W<0r=JoA
r>GPSr?2%`r$;4cr?D1^r>Y\Nr"Ar<r<iK.r<3'#r;l']X8r%sr<*!%r<N6.r=8c=r>,>M!$2%Zr?2"]
r?2%\r>bbQr=o/@r=/]3r<E3&r;uou^B"96ec>LHr<*!%r<N6.r=8c=r>,>Mr>kMQr>tnVr>>JIr"/f9
!"&W2r<E3&r;uouPlUd`r;liur<3''r<iH4r=f,Hr>tn^r?qOnr%%^qr@.[kr?2%Xr"f5Cr=&W1r<<-%
r;l6bVZ?Mnr<*!%r<W</r=Ai?r>5DOr>khYr#kq[r>tnVr>5DGr"&`6r<W?*r<)ir_uS*`q#UErr<<-)
r!NB4r=]&Dr>>JOr>b_Ur>bbTr>>JJr=])>rsnu7r<N9)r<)irS,i9`q#UErr<<-)r!NB3r=SuCr>>JO
r>b_Ur>bbTr>>JJr=Sr:r<iK.r<<-%q#U'eTE+okr;up#r<E3-r!rZ<!#PVNr>bbYr?M7fr$VFir?V=a
r>bbPr"Ar<r<iK-r<3'#r;k(Aa8l#:r<*!%r<W</r=Ai?r>5DOr>khYr#kq[r>tnVr>5DGr"&`6r<W?*
r<)irUB'c`q#UErr<<-)r!NB4r=]&Dr>>JOr>b_Ur>bbTr>>JJr=]#<r<iK.r<<-%q#U<lR/m$`r<*!%
r<N</rsJ]6r=SuCr>>JOr>b_Ur>bbTr>>JJr=Sr:r<iK.r<<-%q#SnD_#XE7r;up#r<E3-r!rZ<r>5DP
r?2%`r?hFir?hIg!$M7`r>bbPr"Ar<r<iK-r<3'#r;inuklCM[r<*!%r<W</r=Ai?r>5DOr>khYr#kq[
r>tnVr>5DGr"&`6r<W?*r<)irOoY:Yr<*!%r<N6-r=8c=r>#8Jr>PVSr#P_Ur>Y\Pr>#8Dr!rZ4r<N9)
r<)irf`8S`q#UErr<<-)r!NB3r=SuCr>>JOr>b_UruD%Yr>Y\Pr>#8Cr!iT3r<N9)r<)irYlNb`r;liu
r<3''r<iH4r=]&Fr>bbYr?M7fr$VFir?V=ar>bbPr"Ar<r<iK-r<**%rW<$!OoY:Y!!E3&r<<-*r!WH6
r=f,Gr>Y\Ur?(q[r?(tZr>Y\Or=f)>r<rQ0r<<-%q#TCRZN0e%r<*!%r<N6-r=8c=r>#8Jr>PVSr#P_U
r>Y\Pr>#8Dr!rZ4r<N9)r<)ir\,b7`q#UErr<<-)r!NB3r=SuCr>>JOr>b_Ur>bbTr>>JJr=Sr:r<iK.
rrrE+r<)irOoYL_rrN'"r<3''r<iH4r=]&Fr>bbYr?M7fr$VFir?V=ar>bbPr"Ar<r<iK-r<3'#r;l']
X8r%sr<*!%r<N6-r=8c<r>#8J!#khTp`05Or>GPLr=f,@r!iT2r<E3'r;uou])_j2ec>LHr<*!%r<N6,
r=/]:r=f,Fr>>;Ir>>JLr=o2Cr=8`6r<NB,rWW6&r;uouOT>@\q#UErr<<-)r!E<2r=Ai?r>#8Ip_j#I
r>5DHr=Su<r!WH/r<<-%r;uoukQ%L\r;liur<3''r<`B2r=SuCr>GPSr?1kYr?2%\r>Y\Or=f)>r<rQ/
r<<-%r;j\6cN*bAr<*!%r<N6-r=8c<r>#8Jr>PGNr>Y\Qr>,>Fr=Jr;rseo5r<E3'r;uouQiQj\q#UEr
r<<-)r!E<2r=Jo@r>,>Kp_j#Ir>5DHr=]&=r!`N0r<<-%r;uoumf9!\q#UErr<<-)r!E<2!"]&>r=f,E
r>55Hr>>JLr=o2Br=8`5r<W?*r<*!"r;jq=a8l/>r;up#r<E3,r!iT:r>#8Kr>khZp`]SYr?(tWr>5DG
r"&`6r<N9)r<*!!T)e?\q#UErr<<-)r!NB4r=SuCr>>JOp`05Or>GPLr=f,@r!iT2r<E3'r;uoup&LK\
q#UErr<<-)rX&T2r=/]:r=f,Fr>>;Ir>>JLr=o2Cr=8`6r<W?*r<*!"r;k1D_#X93r<*!%r<N6,r=/]9
r=f,Er>55Hr>>JL!#5DHr=Su<r!WH/r<<-%r;uouV?#i\r;liur<3''r<`B2r=SuCr>GPSr?1kYr?2%\
r>Y\Or=f)>r<rQ/r<<-%r;lisOoY:Yr<*!%r<N6-r=8c<r>#8Jr>PGNr>Y\Qr>,>Fr=Jl9r<`E,r<3'#
r;kFK\cDO,r<*!%r<N6,r=/]:r=f,Fr>>;IrttbQr>5DHr=]&=r!`N0r<<-%r;uouXT7>\q#UErr<<-)
r!E<2r=Ai?r>#8Ip_j#Ir>5DHr=Su<r!WH/r<<-%r;ls"rW/#Zr;liu!!N9(r<E3,r!iT:r>#8Kr>khZ
p`]SYr?(tWr>5DGr"&`6r<N9)r<*!!g]4Y\q#UErr<3'(r!NB3r=Jo?r=o2Gr>5AJr>,>Gr=f,@r=/Z3
r<N9)r<)irZiJh\q#UErr<3''r!E<1r=8c;r=]&Cp_E`Ar=]&@r=8c7r!E<+r<<3'rr`&tNWB([qZ6Wt
r<3''r!E<0r=8c;r=]&Bp_E`Ar=]&@r=8c6r!E<+r<<-%q#TLUX8r2"r;up#r<<-*r!`N7r=f,Fr>5MQ
rYkPOr>Y\Pr>5DGr=Af7r<W?+r<3'#r;jM1rrCUMq#UErr<3'(r!NB3r=Jo?r=o2Gp_WlEr=o2Dr=Jo:
r!NB-!!W?*r<)irOT>@\q#UErr<3''r!E<1r=8c;r=]&Cp_E`Ar=]&@r=8c7r!E<+r<<-%q#T[ZVZ?Mn
r<*!$r<E0+r<rQ6r=Jo?r=er@r=o2Cr=Su<r<rN0r<E3(r<)ir^];[\r;liur<3'&r<W<0r=Ai?r>,>K
r>PGNr>Y\Pr>5DGr=Al9rs\i3r<E3'r;uouQiQj\q#UErr<3'(r!NB3r=Jo?r=o2Gp_WlEr=o2Dr=Jo:
r!NB-r<<-%q#TpaTE+cgr<*!$r<E0+r<rZ9rXSl<r=]&Cp_E`Ar=]&@r=8c7r!E<+r<<-%q#SM9a8l#:
r<*!$r<E0+r<rQ6r=Jo?r=er@r=o2Cr=Su<r<rN0r<E3(r<)irT)e?\r;liur<3'&r<W<0r=Ai?r>,>K
r>PGNr>Y\Pr>5DGr=Af7r<W?+r<3'#r;lTlR/m$`r<*!$r<N</rsJ]6r=Jo?r=o2Gp_WlEr=o2Dr=Jo:
r!NB-r<<-%q#Sb@_#X93r<*!$r<E0+r=&W7r=Jo?r=o#Ar=o2C!"o2Br=8c7r!E<+r<<-%q#R>mklCM[
r<*!$r<E0+r<rQ6r=Jo?r=er@r=o2Cr=Su<r<rN0r<E3(r<)irr;_u\r;liur<3'&r<W<0r=Ai?r>,>K
r>PGNr>Y\Pr>5DGr=Af7r<W?+r<3'#r;kFK\cDO,r;up#r<E0*r<iK4r=Ai<r=\l=rt58Cr=Jo;r=&W3
r!30(r<3'#q#RStiW/cTr;up"r<<*(r<`E2r=8c:r=J`9r=Jo<r=/]5r<`B,r<<-%r;ultrW/#Zq#LHs
rW<$#r<<*(r<`E1r=/]9r=J`9q%*E5r<rQ1r!30(r<*!"q#T7NZN0q)r;up"r<<-)r!NB3r=Ai>r=o2G
r>5AJr>#8Fr=Su<r=&T1r<E3(r<*!"r;j8*gAq$Mr;up#r<E0*r<iK4r=Ai<r=\l=r=Su>r=8c7r<iH-
r<<-&rrW3%q#QKUrrMutr;up"r<<*(r<`E2r=8c:r=J`9r=Jo<r=/]5r<`B,r<<-%r;ucqirH.\q#UEq
r<*!%r!30,r<rQ5r=8l>rXei:q%*E5r<rQ1r!30(r<*!"q#S)-rrCUMr;liur<*!%r<N6-r=/]9r=]&C
r>,/Er>#8Fr=Su<r=&T1r<<6*rWW6&r;uouOT>@\q#UEqr<3''r!<6.r=/]9r=Jo?p_3T<r=Jo;r=&W3
r!30(r<3'#q#T[ZVZ?Mnr;up"r<<*(r<`E2r=8c:r=J`9r=Jo<r=/]5r<`B,r<<-%r;ucq^];[\q#UEq
r<*!%r!30,r<rQ5r=Ai<p_!<4r=/]5r<`H.rs/K+r<*!"q#Qi_pAk-mr;up"r<<-)r!NB3r=Ai>r=o2G
p_WlDr=o2Br=8c7r!E<+r<<-%r;uoumf9!\q#UEqr<3''r!<6.!"Jo:r=Ai<r=\l=r=Su>r=8c7r<iH-
r<<-&r;ucq`rO0\q#UEqr<*!%r!30,r=&W7r=Ai<p_!H9r=Ai9r<rQ1r!30(r<*!"q#R)fn,W7br;up"
r<<*(r<`E1r=/]9r=J`9q%*E5r<rQ1r!30(r<*!"q#U0hR/m0dr;up"r<<-)rX/Z4r=/]9r=]&Cr>,/E
r>#8Fr=Su<r=&T1r<E3(r<*!"r;k1D_#X93r;up#r<<*(r<W?/r=&W6oFC[+!"8c6r<`E-r!**&r<)ir
U&aEXq#UEqr<*!%r!**)r<`E1r=&<-q$d3/r<W?,quuluq#U9kOoY:Yr;up"r<<*'r<N9-q$Zg(r=&W4
r<iK/r<N6(q#gEnd/^`Xq#UErr<<-(r!<6.r=/]8r=AN4rt,2Ar=Ai:r<rQ1r!30(r<3'#r;iktiW/cT
r;up#r<<*(r<W?/r=&W6oFC[+r<rQ1r<N6)r<3'$q#LHqMZEPR!!<-$r<*!%r!**)r<`E1r=&<-q$d3/
r<W?,quuluq#T+JZN0e%r;up"r<<*'r<N9-q$[!-r!iT5r<rQ2r<W?,quuluq#R]"gAq$Mr<*!%r<E0*
r<iK4r=8c:oF_$5r=Ai:r<rQ1r!30(r<3-%rrW-"M?*YWqZ6Wsr<3'&r!30+r<iK3r=/B/q$m91r<`E-
r!**&r<)irhZ0_Xq#UEqr<*!%r!**)r<`E1r<rZ8oaU^*r<iK/r<N6(q#gEn[fHF.ec>LHr;up"r<<*'
r<N9-q$Zg(r=&W4r<iK/r<N6(qucp#q#QHTrW)`pr<*!%r<E0*r<iK4r=8c:oF_$5r=Ai:r<rQ1r!30(
r<3'#r;ksZVZ?Mnr;up#r<<*(r<W?/r=&W6oFC[+r<rQ1r<N6)r<3'$q#S,.cN*bAr;up"r<<*'r<N9-
r<rQ4oF:U)r<iK/r<N<*rrr3#q#Q][pAk!ir;up"r<<*'r<N9-q$Zg(r=&W4r<iK/r<N6(q#gEnlN!RX
q#UErr<<-(r!<6.!"Jo:r=8c:oF_$5r=Ai:r<rQ1r!30(r<3'#r;je9a8kl6r;up#r!!$(r<W?.ljE[t
r<W?,r<<*%r<)]nRfMpXo`>!mr<)s$r<E3*r<V`rr<W?,r<E3(p]L0inc5'Xo`>!mr<*$&rrr?*r<N9,
lj<Urr<N9*r<;ruo`<28_#X93r;up"r<<*'r<W?/r<rQ4oF:a-r<iT4rX/T0r<E0'r<3'#q#R2iklCAW
r;up#r!!$(r<W?.ljE[tr<W?,r<<*%r<)]nq#HQXo`>!mr<)s$r<E3*r<V`rr<W?,r<E3(p]L0id/^`X
o`>!mr<)s$r<E3*r<VftrsAW0r<N9*r<;ruo`;#liW/cTr;up"r<<*'r<W?/r<rQ4oF:a-r<rQ2r<W?+
r!!$%r;ucq!!%oWp]:?pr;up#r!!$(r<W?.ljE[tr<W?,r<<*%r<)]nfDr5Xo`>!mr<)s$r<E3*r<W'&
p^-m)r<N9*r<;ruo`;8sgApmIr;up"r!!$'r<N9,lj<Urr<N9*r<;ruqZ6QpM?*YWqZ6Wsr<*!%r!***
r<iK2r=&<-r=&W4r<iK/r<E0'r<3'#q#T@QX8qnor;up#r!!$(r<W?.r!Ms$r<`E.r<N9)quls#o`;N%
rrCUMo`>!mr<)s$r<E3*r<V`rr<W?,r<E3(p]CKsp&U-QrW)Tlr;up"r!!$'r<N9,lj<Urr<N9*r<;ru
o`=+RVZ?Mnr;up"r<<*'r<W?/r<rQ4oF:a-r<rQ2r<W?+r!!$%r;ucq]E$7Xo`>!mr<3$%r<N9,r<_ft
r<`E.r<N9)rWN6(r<)]nPQ:FXo`>!mr<)s$r<E3*r<V`rr<W?,r<E3(p]L0ilN!RXo`>!mr<)s$r<<6,
rWiB-lj<Urr<N9*r<;ruo`;r1a8l#:r;up"r<<*'r<W?/r<rQ4oF:a-r<rQ2r<W?+r!!$%r;ucqRfMdT
q#UEqr<)s#r<<-(kQh%jr<<-&r<)s!o`=I\PlUU\r;uftrr`'#r<D`rr<E'$q#gNro`<&4]`@j/r;u`r
q$$^$n-Amrr!!''q#gNro`:WajT,5[r;up"r<3$%r<E3*r<Vm!r<W?,r<E3(r<3$#r;ucqo`1!Pq#UEq
r<)s#r<<-(kQh%jr<<-&r<)s!o`<;;[K-+(r;u`rq$$^$n-Astrs&9&q#gNro`:lhh>m?Pr;u`rq$$^$
n-Amrq$$QrquZNlquDKPr;cm"rW<$#r<3$%r<E3*r<Vm!r<W?,r<E3(r<3$#r;ucqe,ZZPq#UEqr<)s#
r<<-(nH\gor<E3(r<3'$quZNlX8piPq#UEqp]L<qr<D`rr<E'$q#gNrpAt9pKE2#Pq#UEqp]L<qr<D`r
r<E'$q#gNro`<eIVuZbsr;up"r<3$%r<E3*r<W<-oa1R&r<N9*r<<-&qucm!q#Rf%rrCIIq#UEqr<)s#
r<<-(kQh%jr<<-&r<)s!quQWpM#dAPq#UEqp]L<qr<D`rr<E'$q#gNro`<tNUB()jr;u`rq$$^$n-Amr
q$$QrquZNl\,a\Pr;liur<*!$r!!$'r<N9,n-T%!r<N9*r<<-&rWE0&r;ucqO9"kPo`>!mquc`tnHJOf
r<*!"oE!hLS,i3_r;u`r!!N9(nHJgno`P-ooDuE$_uTH2r;u`rr<2WoqulZpr;uTlNr\MHq#UEqr<)s#
q$$9moEG0rr<*!"p]9LWPlUIXr;us#rr`'"nHJOfr<*!"oDuZ+]`@^+r;u`rr<2WoqulcsrWE*#oDt6X
jT+rSr;u`rr<2WoqulZpr;uTlm/W.Hq#UEqr<)s#q$$9moEG0rr<*!"p]8>6[K,t$r;um!q#p3kq?6Zu
r<*!"oDtK_h>m3Lr;u`rr<2WoqulZpr;uTloDjXHquQWpr;u`rr<2WoqulZpr;uTlbQ+gHq#UEqr<)s#
q$$9moEG0rr<*!"p]7/jf)YIEr;um!q#p3koE>*pr;uTlqZ)3JrrD]mr;u`rr<2WoqulZpr;uTldf?<H
o`>!mp]LHtp]^KtqulZpr;uTlWrW/"dK'(Dr;up"qulg!nHSUhr<3'$r;u`p!!%TNp&Oadp]Bgbp]Bsd
cN'R;o`=ghq#g9lp]BsdVZ=a;o`=ghm0!+bnH&UhJcP6>q#UEqp]Kmdp]L<nq#T%HQiQd[p]:EtmK<4c
nH#cm^]=$.p]Bgbp]C*hr;hWQkQ(8Vp]Bgbp]Bsdh#NQ;q#UEqrWE$"m0*1dq#^?m[/d`;o`=ghm0!+b
quQKlN<%o;o`=ghm0!+bnH%\NM?*GQr;lZpm0!+bnH$9&Z2j\$r;u`rm0*7frr`&uq#Q][g&UdHp]Bgb
p]BsdlMuP;!!2cop]Bgbp]Bsd_Z6_;o`=ghm0!+bnH#*ZdfB1Er;u`rm0*1dq#^?mnc47ApAiM?^&Xf+
irSNJQ2ppbaoK`glMuM:nc8Idj9"rS_Z6/+kQ0lJRfL>+cN3S:JcP*:cN2/gPQ:L[pB'aaoDtZd]E$7Y
q#H!Hj8dL,d/].+p&WkJW;s=+q#TOXoDnplJcOU,cN2YuL&h/QdfHZQXoQuQqZ2KQec>LHj9"rShZ/6.
p&O:WV?!4gkQ1V^JcNgkkQ036JcP6>kQ.dcQiQFQrW.]QrrBn9kQ0B;JcP'9kQ.shP5t(Qq#Q?Q])_$q
i;eH0irJ9D\H%QgpAsgcOT;`gkQ0lIJcOR+kQ/I!K`M)QlN*@QXT7Pcmf7q>eH"e6`rL\kJcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcPfNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&rr@WNJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&h>i'~>

%%EndBinary
grestore
np
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
442.566 70.7928 mo
600.625 70.7928 li
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
442.566 88.5882 mo
600.625 88.5882 li
@
442.566 106.384 mo
600.625 106.384 li
@
443.257 52.9972 mo
601.316 52.9972 li
@
78.7367 173.964 mo
116.75 173.964 li
116.75 141.339 li
78.7367 141.339 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
78.7367 141.339 mo
116.75 141.339 li
116.75 173.964 li
78.7367 173.964 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
true set_gvm
%ADOBeginSubsetFont: ITAQMX+Helvetica Initial
ct_T42Dict begin
0.004 -0.211 0.684 0.734
 256 array 0 1 255 {1 index exch /.notdef put} for  /ITAQMX+Helvetica
Type42DictBegin
[<00010000000b000b000b000b637674208de93e9e000000bc0000036c6670
676d11e0c3ca0000042800000a0c676c7966c8dd62e20000134400001654
68656164f1f285de00000e3400000036686865610a22073200000e6c0000
0024686d74786e7409eb00000e90000000686c6f63614594400600000ef8
000000366d617870087e0af900000f30000000206e616d654c7374800000
0f500000002270726570bc836e3100000f74000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0801bb040598a8a20b003265358
2321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b003
2653582321b801408a8a1b8a235920b80003265358b0032545b801805058
2321b8018023211bb003254523212321591b2159442db8005c2c4b535845
441b2121592d00010000000000005f76cc635f0f3cf50011080000000000
c6a61e5900000000c6a61e59000bfe49057805e500000009000100000000
0000000100000629fe2900000c01f865fced0b9100010000000000000000
000000000000001a0512004202390000023900af04730040047300c40473
0031047300420556009705c7005a05c700a50473009c055600af05c700b4
05c700aa047300520400003b047300380473004801c700840473003b0473
007602aa008904000042023900170400000b040000150000003400340054
00c200e80194022802ac033c039e03c6041c04a604ee05b8063a06a60770
079e0816088808ce09ae09fe0a940b2a000000010000001a006f0003006b
0007000200100010005d000007e80a0c0004000100000001001200010000
00000006001000004457474c56422b48656c7665746963610000b800532b
b800492bb8003f2bb800352bb8002b2b4118008001a6009001a600a001a6
00030069018b0079018b0089018b0099018b00040089018b0099018b00a9
018b00b9018bb2040840ba0179001a014a400b041f5414191f180a0b1fd2
b80106b49e1fd918e3bb0119000d00e10119b20d0009410a01a0019f0064
001f01a50025017a00480028019ab3296c1f60410a01a9007001a9008001
a90003008001a9000101a9b21e321fbe012c00250401001f0126001e0401
b61fe7312d1fe531b80201b21fc227b80401b21fc11eb80201400f1fc01d
9e1fbf1d671fbe1d671fab27b80401b21faa29b80401b61fa91d6c1f931e
b8019ab21f921db80101b21f911db80101b21f751db80201b61f6d29961f
6431b8019ab21f4c96b802abb21f391db80156400b1f3638211f351de41f
2f27b80801400b1f2d1d4c1f2a31cd1f241db802abb21f201eb801254011
1f1c1d931f3a1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a1f
ba019b0025017ab349293896b8017bb348283125b8017a40364828962948
2725294c1f252946272729482756c80784075b07410732072b0728072607
21071b071408120810080e080c080a08080807b801acb23f1f06bb01ab00
3f001f01abb308060805b801aeb23f1f04bb01ad003f001f01adb7080408
0208000814b8ffe0b40000010014b801abb41000000100b801abb6061000
00010006b801adb300000100b801ad401f04000001000410000001001002
000001000200000001000002010802004a00b0018db806008516763f183f
123e113946443e113946443e113946443e113946443e113946443e113946
60443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff
1d592b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a
66456523456023456560234560b08b766818b080622020b16a7045652345
20b003266062636820b003266165b070236544b06a234420b17666456523
4520b003266062636820b003266165b066236544b0762344b10066455458
b166406544b27640764523614459b36242725d4565234560234565602345
60b089766818b080622020b172424565234520b003266062636820b00326
6165b042236544b072234420b1625d4565234520b003266062636820b003
266165b05d236544b0622344b1005d455458b15d406544b2624062452361
44592b2b2b2b456953427374b8019a2045694b20b02853b049515a58b020
615944b801a620456944750000>
[5717 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 1656 9 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>ITAQMX+Helvetica AddT42Char 
1 1932 11 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>ITAQMX+Helvetica AddT42Char 
1 2380 13 <000200aaffd9052f05bd00150016003c4023170527053810030a0002053a
1009160316161409250c1a18012514191718a0219570182b2b4ef44ded4e
10f64ded12392f003f3fed3f3c5d31300111141716333237363511331110
07022120032619012101743c59d3fd5b31ca4986fe8cfe8c8549024305bd
fc74a06aa0ad5e9f038cfcc7fef192fef6010a92010f0339>ITAQMX+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd00030007003fb800532bb800082fb800092fb800
0810b80000d0b800002fb8000910b80003dcb80004dcb8000010b80007dc
00ba0007000000562bba0002000500562b3031331121112711211142048e
b8fce205bdfa43b8044dfbb30000>ITAQMX+Helvetica AddT42Char 
ITAQMX+Helvetica /CharStrings get begin
/D 9 def
/P 11 def
/U 13 def
end
ITAQMX+Helvetica /Encoding get
dup 68 /D put
dup 80 /P put
dup 85 /U put
pop
end
%ADOEndSubsetFont
reset_gvm
/DBLQDR+Helvetica /ITAQMX+Helvetica findfont ct_VMDictPut/DBLQDR+Helvetica*1 [68{/.notdef}rp /D 11{/.notdef}rp /P 4{/.notdef}rp /U 170{/.notdef}rp]DBLQDR+Helvetica nfDBLQDR+Helvetica*1 [14 0 0 -14 0 0 ]msf83.0969 163.541 mo(PDU)[9.3381 10.108 0 ]xshgsave
58.176 122.355 mo
86.337 122.355 li
86.337 33.975 li
58.176 33.975 li
58.176 122.355 li
clp
57.6748 122.857 mo
86.8394 122.857 li
86.8394 33.4728 li
57.6748 33.4728 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422406084.0 
<<
/ID /422406084.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK
~>
<~!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'
~>
<~!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#
~>
<~!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422406084.0 /Pattern get_res
[1 0 0 -1 55 124 ]make_pattern set_pattern
f
2 vmreclaim
grestore
58.1748 33.9728 mo
86.3394 33.9728 li
86.3394 122.357 li
58.1748 122.357 li
cp
@
140.941 173.964 mo
178.954 173.964 li
178.954 141.339 li
140.941 141.339 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
140.941 141.339 mo
178.954 141.339 li
178.954 173.964 li
140.941 173.964 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
DBLQDR+Helvetica*1 [14 0 0 -14 0 0 ]msf145.301 163.541 mo(PDU)[9.3381 10.108 0 ]xshgsave
120.375 122.355 mo
148.545 122.355 li
148.545 33.975 li
120.375 33.975 li
120.375 122.355 li
clp
119.879 122.857 mo
149.044 122.857 li
149.044 33.4728 li
119.879 33.4728 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422406284.0 
<<
/ID /422406284.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!'b6!!'b6^An66^An66!!'b6!!'b6^An66^An66!!'b6!!'b6^An66^An66!!'b6!!'b6^An66^An66
~>
<~!!',$!!',$XT/>$XT/>$!!',$!!',$XT/>$XT/>$!!',$!!',$XT/>$XT/>$!!',$!!',$XT/>$XT/>$
~>
<~!!'&"!!'&"WrN,"WrN,"!!'&"!!'&"WrN,"WrN,"!!'&"!!'&"WrN,"WrN,"!!'&"!!'&"WrN,"WrN,"
~>
<~!!)-]!!)-]jo>A]jo>A]!!)-]!!)-]jo>A]jo>A]!!)-]!!)-]jo>A]jo>A]!!)-]!!)-]jo>A]jo>A]
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422406284.0 /Pattern get_res
[1 0 0 -1 117 124 ]make_pattern set_pattern
f
2 vmreclaim
grestore
120.379 33.9728 mo
148.544 33.9728 li
148.544 122.357 li
120.379 122.357 li
cp
@
203.148 173.961 mo
241.155 173.961 li
241.155 141.336 li
203.148 141.336 li
203.148 173.961 li
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
203.148 141.336 mo
203.148 141.84 li
240.66 141.84 li
240.66 173.466 li
203.643 173.466 li
203.643 141.336 li
203.148 141.336 li
203.148 141.84 li
203.148 141.336 li
202.644 141.336 li
202.644 173.961 li
202.644 174.096 202.698 174.222 202.788 174.321 cv
202.887 174.411 203.013 174.465 203.148 174.465 cv
241.155 174.465 li
241.29 174.465 241.416 174.411 241.515 174.321 cv
241.605 174.222 241.659 174.096 241.659 173.961 cv
241.659 141.336 li
241.659 141.21 241.605 141.075 241.515 140.985 cv
241.416 140.895 241.29 140.841 241.155 140.841 cv
203.148 140.841 li
203.013 140.841 202.887 140.895 202.788 140.985 cv
202.698 141.075 202.644 141.21 202.644 141.336 cv
203.148 141.336 li
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
f
DBLQDR+Helvetica*1 [14 0 0 -14 0 0 ]msf207.505 163.541 mo(PDU)[9.3381 10.108 0 ]xshgsave
182.583 122.355 mo
210.744 122.355 li
210.744 33.975 li
182.583 33.975 li
182.583 122.355 li
clp
182.083 122.857 mo
211.248 122.857 li
211.248 33.4728 li
182.083 33.4728 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422406484.0 
<<
/ID /422406484.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422406484.0 /Pattern get_res
[1 0 0 -1 180 124 ]make_pattern set_pattern
f
2 vmreclaim
grestore
182.583 33.9728 mo
210.748 33.9728 li
210.748 122.357 li
182.583 122.357 li
cp
@
267.422 173.964 mo
305.436 173.964 li
305.436 141.339 li
267.422 141.339 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
267.422 141.339 mo
305.436 141.339 li
305.436 173.964 li
267.422 173.964 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
DBLQDR+Helvetica*1 [14 0 0 -14 0 0 ]msf271.783 163.541 mo(PDU)[9.3381 10.108 0 ]xshgsave
244.791 122.355 mo
272.952 122.355 li
272.952 33.975 li
244.791 33.975 li
244.791 122.355 li
clp
244.287 122.857 mo
273.452 122.857 li
273.452 33.4728 li
244.287 33.4728 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422406684.0 
<<
/ID /422406684.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H8K!5H8K^V9aK^V9aK^An8K^An8K!!'dK!!'dK!5H8K!5H8K^V9aK^V9aK^An8K^An8K!!'dK!!'dK
~>
<~!3N@'!3N@'XfVR'XfVR'XT/@'XT/@'!!'.'!!'.'!3N@'!3N@'XfVR'XfVR'XT/@'XT/@'!!'.'!!'.'
~>
<~!3<.#!3<.#X/c4#X/c4#WrN.#WrN.#!!'(#!!'(#!3<.#!3<.#X/c4#X/c4#WrN.#WrN.#!!'(#!!'(#
~>
<~!9WDD!9WDDk2lXDk2lXDjo>DDjo>DD!!)0D!!)0D!9WDD!9WDDk2lXDk2lXDjo>DDjo>DD!!)0D!!)0D
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422406684.0 /Pattern get_res
[1 0 0 -1 242 124 ]make_pattern set_pattern
f
2 vmreclaim
grestore
244.787 33.9728 mo
272.952 33.9728 li
272.952 122.357 li
244.787 122.357 li
cp
@
78.7367 121.763 mo
78.7367 133.034 li
92.7326 133.034 li
92.7326 141.339 li
@
140.941 122.357 mo
140.941 133.627 li
154.937 133.627 li
154.937 141.932 li
@
203.145 121.763 mo
203.145 133.034 li
217.141 133.034 li
217.141 141.339 li
@
266.126 122.357 mo
266.126 133.627 li
280.122 133.627 li
280.122 141.932 li
@
126.599 122.357 mo
126.599 133.034 li
105.174 133.034 li
105.174 141.339 li
@
190.143 122.357 mo
190.143 133.034 li
168.717 133.034 li
168.717 141.339 li
@
251.892 122.355 mo
251.892 132.534 li
232.299 132.534 li
232.173 132.534 232.047 132.588 231.948 132.678 cv
231.858 132.777 231.804 132.903 231.804 133.038 cv
231.804 141.336 li
231.804 141.615 232.029 141.84 232.299 141.84 cv
232.578 141.84 232.803 141.615 232.803 141.336 cv
232.803 133.533 li
252.387 133.533 li
252.522 133.533 252.648 133.479 252.747 133.389 cv
252.837 133.299 252.891 133.164 252.891 133.038 cv
252.891 122.355 li
252.891 122.085 252.666 121.86 252.387 121.86 cv
252.117 121.86 251.892 122.085 251.892 122.355 cv
f
66.2959 121.764 mo
66.2959 132.441 li
46.2095 132.441 li
46.2095 140.745 li
@
222.152 210.526 mo
213.953 210.526 207.292 216.23 207.292 223.279 cv
207.292 230.328 213.953 236.033 222.152 236.033 cv
230.365 236.033 237.012 230.328 237.012 223.279 cv
237.012 216.23 230.365 210.526 222.152 210.526 cv
230.249 216.33 mo
234.312 219.817 234.632 225.247 231.323 229.108 cv
215.375 215.408 li
219.859 212.568 226.186 212.867 230.249 216.33 cv
214.054 230.229 mo
210.005 226.741 209.672 221.311 212.98 217.45 cv
228.929 231.15 li
224.445 233.99 218.117 233.716 214.054 230.229 cv
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
222.152 210.526 mo
213.953 210.526 207.292 216.23 207.292 223.279 cv
207.292 230.328 213.953 236.033 222.152 236.033 cv
230.365 236.033 237.012 230.328 237.012 223.279 cv
237.012 216.23 230.365 210.526 222.152 210.526 cv
230.249 216.33 mo
234.312 219.817 234.632 225.247 231.323 229.108 cv
215.375 215.408 li
219.859 212.568 226.186 212.867 230.249 216.33 cv
214.054 230.229 mo
210.005 226.741 209.672 221.311 212.98 217.45 cv
228.929 231.15 li
224.445 233.99 218.117 233.716 214.054 230.229 cv
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
gsave
307.296 122.355 mo
335.457 122.355 li
335.457 33.975 li
307.296 33.975 li
307.296 122.355 li
clp
306.793 122.857 mo
335.958 122.857 li
335.958 33.4728 li
306.793 33.4728 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422406884.0 
<<
/ID /422406884.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou
~>
<~Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-
~>
<~X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%
~>
<~k2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tggk2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tgg
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422406884.0 /Pattern get_res
[1 0 0 -1 304 124 ]make_pattern set_pattern
f
2 vmreclaim
grestore
307.293 33.9728 mo
335.458 33.9728 li
335.458 122.357 li
307.293 122.357 li
cp
@
327.855 121.763 mo
327.855 133.034 li
341.851 133.034 li
341.851 141.339 li
@
315.414 121.764 mo
315.414 132.441 li
295.328 132.441 li
295.328 140.745 li
@
gsave
242.334 137.709 mo
237.231 134.496 li
244.638 128.115 li
231.525 133.866 li
236.304 136.998 li
226.719 142.038 li
232.497 146.025 li
225.765 151.146 li
238.05 146.403 li
232.56 142.596 li
242.334 137.709 li
clp
236.07 140.841 mo
232.803 140.841 li
232.803 138.839 li
236.304 136.998 li
232.803 134.704 li
232.803 133.533 li
238.349 133.533 li
237.231 134.496 li
242.334 137.709 li
236.07 140.841 li
231.804 140.841 mo
228.995 140.841 li
231.804 139.364 li
231.804 140.841 li
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[13.92 0 0 7.92 228.72 127.88 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 58 
/H 33 
/M[58 0 0 -33 0 33 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLN*
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&f`6O~>

%%EndBinary
grestore
np
225.765 151.146 mo
232.497 146.025 li
226.719 142.038 li
227.096 141.84 li
232.299 141.84 li
232.299 141.84 li
232.299 141.84 li
234.072 141.84 li
232.56 142.596 li
238.05 146.403 li
225.765 151.146 li
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[-8.23798 -10.0499 9.33046 -7.64825 229.723 131.059 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 57 
/H 50 
/M[57 0 0 -50 0 50 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&r;_?~>

%%EndBinary
grestore
np
234.072 141.84 mo
232.299 141.84 li
232.578 141.84 232.803 141.615 232.803 141.336 cv
232.803 140.841 li
236.07 140.841 li
234.072 141.84 li
232.299 141.84 mo
227.096 141.84 li
228.995 140.841 li
231.804 140.841 li
231.804 141.336 li
231.804 141.615 232.029 141.84 232.299 141.84 cv
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[-4.4803 -5.46573 5.22506 -4.28302 231.21 132.493 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 31 
/H 28 
/M[31 0 0 -28 0 28 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO@%J,~>

%%EndBinary
grestore
np
231.804 134.049 mo
231.525 133.866 li
231.804 133.744 li
231.804 134.049 li
239.508 132.534 mo
234.562 132.534 li
244.638 128.115 li
239.508 132.534 li
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[13.92 0 0 6.72 231.12 134.6 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 58 
/H 28 
/M[58 0 0 -28 0 28 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 58 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLN*
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP'9J,~>

%%EndBinary
grestore
np
232.299 141.84 mo
232.299 141.84 li
232.029 141.84 231.804 141.615 231.804 141.336 cv
231.804 140.841 li
231.804 139.364 li
232.803 138.839 li
232.803 140.841 li
232.803 141.336 li
232.803 141.615 232.578 141.84 232.299 141.84 cv
232.299 141.84 li
232.803 134.704 mo
231.804 134.049 li
231.804 133.744 li
234.562 132.534 li
239.508 132.534 li
238.349 133.533 li
232.803 133.533 li
232.803 134.704 li
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[-7.94892 -9.69726 4.85184 -3.97709 235.583 140.111 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 55 
/H 26 
/M[55 0 0 -26 0 26 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 55 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 55 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 55 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 55 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
qZ)3JJcLB&JcLB&JcLB&JcLB&JcLB&JcLE'J,~>

%%EndBinary
grestore
np
grestore
242.332 137.709 mo
237.233 134.499 li
244.64 128.116 li
231.527 133.864 li
236.307 137.002 li
226.717 142.037 li
232.5 146.023 li
225.763 151.145 li
238.052 146.403 li
232.561 142.596 li
242.331 137.709 li
cp
@
90.6592 213.905 mo
107.938 213.905 li
107.938 187.607 li
90.6592 187.607 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
90.6592 187.607 mo
107.938 187.607 li
107.938 213.905 li
90.6592 213.905 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
gsave
90.657 240.201 mo
107.937 240.201 li
107.937 213.903 li
90.657 213.903 li
90.657 240.201 li
clp
90.1592 240.702 mo
108.438 240.702 li
108.438 213.405 li
90.1592 213.405 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422407084.0 
<<
/ID /422407084.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!'b6!!'b6^An66^An66!!'b6!!'b6^An66^An66!!'b6!!'b6^An66^An66!!'b6!!'b6^An66^An66
~>
<~!!',$!!',$XT/>$XT/>$!!',$!!',$XT/>$XT/>$!!',$!!',$XT/>$XT/>$!!',$!!',$XT/>$XT/>$
~>
<~!!'&"!!'&"WrN,"WrN,"!!'&"!!'&"WrN,"WrN,"!!'&"!!'&"WrN,"WrN,"!!'&"!!'&"WrN,"WrN,"
~>
<~!!)-]!!)-]jo>A]jo>A]!!)-]!!)-]jo>A]jo>A]!!)-]!!)-]jo>A]jo>A]!!)-]!!)-]jo>A]jo>A]
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422407084.0 /Pattern get_res
[1 0 0 -1 88 242 ]make_pattern set_pattern
f
2 vmreclaim
grestore
90.6592 213.905 mo
107.938 213.905 li
107.938 240.202 li
90.6592 240.202 li
cp
@
gsave
90.657 266.499 mo
107.937 266.499 li
107.937 240.201 li
90.657 240.201 li
90.657 266.499 li
clp
90.1592 267 mo
108.438 267 li
108.438 239.702 li
90.1592 239.702 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422407284.0 
<<
/ID /422407284.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK
~>
<~!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'
~>
<~!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#
~>
<~!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422407284.0 /Pattern get_res
[1 0 0 -1 88 269 ]make_pattern set_pattern
f
2 vmreclaim
grestore
90.6592 240.203 mo
107.938 240.203 li
107.938 266.5 li
90.6592 266.5 li
cp
@
gsave
151.308 236.772 mo
168.588 236.772 li
168.588 187.605 li
151.308 187.605 li
151.308 236.772 li
clp
150.808 237.272 mo
169.087 237.272 li
169.087 187.107 li
150.808 187.107 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422407484.0 
<<
/ID /422407484.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422407484.0 /Pattern get_res
[1 0 0 -1 148 239 ]make_pattern set_pattern
f
2 vmreclaim
grestore
151.308 187.607 mo
168.587 187.607 li
168.587 236.772 li
151.308 236.772 li
cp
@
gsave
151.308 266.499 mo
168.588 266.499 li
168.588 234.486 li
151.308 234.486 li
151.308 266.499 li
clp
150.808 267 mo
169.087 267 li
169.087 233.986 li
150.808 233.986 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422407684.0 
<<
/ID /422407684.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!'b6!!'b6^An66^An66!!'b6!!'b6^An66^An66!!'b6!!'b6^An66^An66!!'b6!!'b6^An66^An66
~>
<~!!',$!!',$XT/>$XT/>$!!',$!!',$XT/>$XT/>$!!',$!!',$XT/>$XT/>$!!',$!!',$XT/>$XT/>$
~>
<~!!'&"!!'&"WrN,"WrN,"!!'&"!!'&"WrN,"WrN,"!!'&"!!'&"WrN,"WrN,"!!'&"!!'&"WrN,"WrN,"
~>
<~!!)-]!!)-]jo>A]jo>A]!!)-]!!)-]jo>A]jo>A]!!)-]!!)-]jo>A]jo>A]!!)-]!!)-]jo>A]jo>A]
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422407684.0 /Pattern get_res
[1 0 0 -1 148 269 ]make_pattern set_pattern
f
2 vmreclaim
grestore
151.308 234.486 mo
168.587 234.486 li
168.587 266.5 li
151.308 266.5 li
cp
@
gsave
277.794 213.903 mo
295.065 213.903 li
295.065 187.605 li
277.794 187.605 li
277.794 213.903 li
clp
277.29 214.405 mo
295.569 214.405 li
295.569 187.107 li
277.29 187.107 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422407884.0 
<<
/ID /422407884.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou
~>
<~Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-
~>
<~X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%
~>
<~k2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tggk2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tgg
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422407884.0 /Pattern get_res
[1 0 0 -1 275 216 ]make_pattern set_pattern
f
2 vmreclaim
grestore
277.79 187.607 mo
295.069 187.607 li
295.069 213.905 li
277.79 213.905 li
cp
@
gsave
277.794 266.499 mo
295.065 266.499 li
295.065 213.903 li
277.794 213.903 li
277.794 266.499 li
clp
277.29 267 mo
295.569 267 li
295.569 213.405 li
277.29 213.405 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422394592.0 
<<
/ID /422394592.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H8K!5H8K^V9aK^V9aK^An8K^An8K!!'dK!!'dK!5H8K!5H8K^V9aK^V9aK^An8K^An8K!!'dK!!'dK
~>
<~!3N@'!3N@'XfVR'XfVR'XT/@'XT/@'!!'.'!!'.'!3N@'!3N@'XfVR'XfVR'XT/@'XT/@'!!'.'!!'.'
~>
<~!3<.#!3<.#X/c4#X/c4#WrN.#WrN.#!!'(#!!'(#!3<.#!3<.#X/c4#X/c4#WrN.#WrN.#!!'(#!!'(#
~>
<~!9WDD!9WDDk2lXDk2lXDjo>DDjo>DD!!)0D!!)0D!9WDD!9WDDk2lXDk2lXDjo>DDjo>DD!!)0D!!)0D
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422394592.0 /Pattern get_res
[1 0 0 -1 275 269 ]make_pattern set_pattern
f
2 vmreclaim
grestore
277.79 213.905 mo
295.069 213.905 li
295.069 266.5 li
277.79 266.5 li
cp
@
79.6007 188.921 mo
79.6007 211.631 li
@
0 lc
0 lj
83.6007 211.631 mo
75.6007 211.631 li
@
75.6007 188.921 mo
83.6007 188.921 li
@
1 lc
1 lj
79.5677 216.631 mo
78.9425 264 li
@
0 lc
0 lj
82.9421 264.053 mo
74.9428 263.948 li
@
75.568 216.578 mo
83.5673 216.684 li
@
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
true set_gvm
%ADOBeginSubsetFont: ITAQMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ITAQMX+Helvetica gcheck setglobal} if

1 0 1 <> ITAQMX+Helvetica AddT42Char 
1 104 2 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>ITAQMX+Helvetica AddT42Char 
1 168 3 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>ITAQMX+Helvetica AddT42Char 
1 388 4 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>ITAQMX+Helvetica AddT42Char 
1 808 6 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>ITAQMX+Helvetica AddT42Char 
1 1104 7 <000300970000050405bd000a00150028008240385a0d5a116a026a0d6a11
7a02772107490d4811021d081f0f041f131e000027081e17020b1e270804
311b690f31231a2a091525281619292ab8015fb3217666182b2b4ef43c4d
fd3c4e10f64dedf4ed003ffd3fed12392ffd390111123931304379401218
1a0508192506260718042b01051a082b01002b012b2b2b8181015d5d0132
373635342726232111013237363534272623211103212017161514070607
16171615140706290102c47e466e754282fe9d01adb74e318f4c7dfe75c3
027701026d404f294d7138635985fedefd93035023378f90321cfe39fd5a
6a435fa03a1ffdfb05139a5b778b592f272b3660a98e73ac>ITAQMX+Helvetica AddT42Char 
1 1368 8 <0002005affda057105e5001d001e00b1403b1b0597019605031f011f0482
018705891305530803861d111115063a1d030c3a15091e021e1e19033102
3b1031111a20093119191f20a1216a66182b2b4ef44ded4e10f64dedf4ed
12392f003f3fed3fed12392f10ed31304379403a001c172513260e251b26
0b160932000d1410320112110f10071c0932000500033201010204030a18
0c32000f120c3200081a06320104010632012b2b2b2b01103c103c2b2b10
3c103c2b2b2b2b2b2b815d015d080117232e012322001110123332373637
3306070621202726111037362123041e013411c221c5b2d9fef5f1efdc73
3d1ec21a92affed7ff00aee5acba01472805e5fedabb8ea6fecffec5fefe
febfa95991e89dbd9bcd01ac0145d0e20000>ITAQMX+Helvetica AddT42Char 
1 1852 10 <0001009c0000044b05bd000500314013000203021e040508031a07010225
0500190607b80153b321765e182b2b4ef43c4dfd3c4e10e6003f3c4dfd3c
3f31301333112115219cc702e8fc5105bdfaf2af>ITAQMX+Helvetica AddT42Char 
1 2104 12 <000200b40000057805bd0009002700944012070d49014805590158056905
641478050816bb01300119001b011c40422321202660127112751403121e
1f141c1503211e161404261224251e0009091b071e0b02261c1b08202515
1f251603310f691b1a29082625270a192829d6219566182b2b4ef43c4dfd
3c4e10f64df4edd4edd4ed003f3c3c3ffd12392f3cfd3c39111739011112
39391239395d1112392b3130015d01323635342726232111032132171615
1406071e011f011617161715232e012f012627262321112303478ca3723d
66fe1ac702a8a86dcf6d6256570507030b122ef40a0c040c0764397afe3b
c7031c70929d391efe0a02a1315efd84a833237280c55429461421133c56
f590311bfd8a>ITAQMX+Helvetica AddT42Char 
1 2524 14 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>ITAQMX+Helvetica AddT42Char 
1 2928 15 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>ITAQMX+Helvetica AddT42Char 
1 3188 16 <00020038ffda03ed05c2000b001d00774032370e470e570ea704a91b0525
0814020f1d1000081d1d07130a021d170b052e132e102911121a1f0b271a
191e1f87217242182b2b4ef44ded4e10f63c4dfde4e4003fed3f3fed3f11
39113931304379401a181c090a000101180b2600091c0b26000019022600
0a1b0826012b2b012b2b818181005d121633323635342623220615001716
1711331123350e0123220035341233f692a17da1a67a88a9018a53303dad
a23fac6fb3fefaefde015fe8d7c9cbc3d0ca0237341e4b021dfa3e956358
012dfaea0157>ITAQMX+Helvetica AddT42Char 
1 3404 17 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>ITAQMX+Helvetica AddT42Char 
1 3808 18 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>ITAQMX+Helvetica AddT42Char 
1 3900 19 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>ITAQMX+Helvetica AddT42Char 
1 4140 20 <00020076fe5504250449000e00220074402ca908a717022808201c110e06
1d15070f060e1d1c0b220e0227181a240a2e102e2129220f1923248721bd
5d182b2b4ef43c4dfde4e44e10f64ded003f3fed3f3fed11391239313043
79401c161b00051a260426001b022601051602260101190e260003170626
012b2b012b2b2b2b8181005d243635342726232207061514171633013315
363736333212111007062322272627112302c6a72546babb45252546bafe
2eaf36405b7bb6feb7749a7952303bb479d3d2805cb1bb649a7c57a603b1
8e49283cfee9fefdfea2965f351e49fddd00>ITAQMX+Helvetica AddT42Char 
1 4368 21 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>ITAQMX+Helvetica AddT42Char 
1 4508 22 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>ITAQMX+Helvetica AddT42Char 
1 4956 23 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>ITAQMX+Helvetica AddT42Char 
1 5116 24 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>ITAQMX+Helvetica AddT42Char 
1 5416 25 <00020015fe4903e804490018001900ca406e8a158818a718030706170638
12481258126707770377078c1498009705981597169717a800a816104800
4b154717c915044405c605028705a600a601a705a8170524280518151716
010006150c0b0f1d080e19071919161b17171a050001af171518af0c8f16
191a1bd421677e182b2b194ef44de418fd3939fd3939194e456544e61812
392f003f3f4dfd3932192f183f3c3c3c123939014b527940121515001616
6d121717180501016d12000018872e2b107dc418872e2b10087dc418015d
71313071015d005d013306030207020623222627351e01333236373e0137
013301030321c7268362429c809c26291e2f2a10322f10053e0efe74cc01
1f01042f67fe91feecaefe66b40608a40d062118089424044efc98038200
>ITAQMX+Helvetica AddT42Char 
ITAQMX+Helvetica /CharStrings get begin
/space 1 def
/period 2 def
/zero 3 def
/one 4 def
/five 6 def
/B 7 def
/C 8 def
/L 10 def
/R 12 def
/a 14 def
/c 15 def
/d 16 def
/e 17 def
/i 18 def
/o 19 def
/p 20 def
/r 21 def
/s 22 def
/t 23 def
/v 24 def
/y 25 def
end
ITAQMX+Helvetica /Encoding get
dup 32 /space put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 53 /five put
dup 66 /B put
dup 67 /C put
dup 76 /L put
dup 82 /R put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/DBLQDR+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one 3{/.notdef}rp /five 12{/.notdef}rp /B /C /D 7{/.notdef}rp /L 3{/.notdef}rp /P /.notdef /R 2{/.notdef}rp /U 11{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 5{/.notdef}rp /o /p /.notdef /r /s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]DBLQDR+Helvetica nfDBLQDR+Helvetica*1 [12 0 0 -12 0 0 ]msf6.86734 235.121 mo(Base Load)[8.00409 6.672 6 6.672 3.336 6.672 6.672 6.672 0 ]xsh27.2169 249.121 mo(1.0)[6.672 3.336 0 ]xsh13.3888 189.86 mo(Reserve)[8.664 6.672 6 6.672 3.99591 6 0 ]xsh12.3869 203.86 mo(Capacity)[8.664 6.672 6.672 6.672 6 2.664 3.336 0 ]xsh27.3898 217.86 mo(0.5)[6.672 3.336 0 ]xsh411.183 174.05 mo
449.197 174.05 li
449.197 141.425 li
411.183 141.425 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
1 lc
1 lj
411.183 141.425 mo
449.197 141.425 li
449.197 174.05 li
411.183 174.05 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
DBLQDR+Helvetica*1 [14 0 0 -14 0 0 ]msf415.543 163.627 mo(PDU)[9.3381 10.108 0 ]xsh473.387 174.05 mo
511.401 174.05 li
511.401 141.425 li
473.387 141.425 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
473.387 141.425 mo
511.401 141.425 li
511.401 174.05 li
473.387 174.05 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
DBLQDR+Helvetica*1 [14 0 0 -14 0 0 ]msf477.747 163.627 mo(PDU)[9.3381 10.108 0 ]xshgsave
414.405 122.355 mo
442.566 122.355 li
442.566 33.975 li
414.405 33.975 li
414.405 122.355 li
clp
413.901 122.857 mo
443.066 122.857 li
443.066 33.4728 li
413.901 33.4728 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422394792.0 
<<
/ID /422394792.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK
~>
<~!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'
~>
<~!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#
~>
<~!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422394792.0 /Pattern get_res
[1 0 0 -1 411 124 ]make_pattern set_pattern
f
2 vmreclaim
grestore
414.401 33.9728 mo
442.566 33.9728 li
442.566 122.357 li
414.401 122.357 li
cp
@
535.59 174.051 mo
573.606 174.051 li
573.606 141.426 li
535.59 141.426 li
535.59 174.051 li
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
535.59 141.426 mo
535.59 141.921 li
573.102 141.921 li
573.102 173.547 li
536.094 173.547 li
536.094 141.426 li
535.59 141.426 li
535.59 141.921 li
535.59 141.426 li
535.095 141.426 li
535.095 174.051 li
535.095 174.177 535.149 174.312 535.239 174.402 cv
535.329 174.492 535.464 174.546 535.59 174.546 cv
573.606 174.546 li
573.741 174.546 573.867 174.492 573.957 174.402 cv
574.056 174.312 574.101 174.177 574.101 174.051 cv
574.101 141.426 li
574.101 141.291 574.056 141.165 573.957 141.075 cv
573.867 140.976 573.741 140.922 573.606 140.922 cv
535.59 140.922 li
535.464 140.922 535.329 140.976 535.239 141.075 cv
535.149 141.165 535.095 141.291 535.095 141.426 cv
535.59 141.426 li
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
f
DBLQDR+Helvetica*1 [14 0 0 -14 0 0 ]msf539.951 163.627 mo(PDU)[9.33813 10.108 0 ]xshgsave
476.604 122.355 mo
504.774 122.355 li
504.774 33.975 li
476.604 33.975 li
476.604 122.355 li
clp
476.105 122.857 mo
505.27 122.857 li
505.27 33.4728 li
476.105 33.4728 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422394992.0 
<<
/ID /422394992.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!
~>
<~!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!
~>
<~!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!
~>
<~!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422394992.0 /Pattern get_res
[1 0 0 -1 474 124 ]make_pattern set_pattern
f
2 vmreclaim
grestore
476.605 33.9728 mo
504.77 33.9728 li
504.77 122.357 li
476.605 122.357 li
cp
@
598.487 174.05 mo
636.5 174.05 li
636.5 141.425 li
598.487 141.425 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
598.487 141.425 mo
636.5 141.425 li
636.5 174.05 li
598.487 174.05 li
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
DBLQDR+Helvetica*1 [14 0 0 -14 0 0 ]msf602.847 163.627 mo(PDU)[9.33813 10.108 0 ]xshgsave
538.812 122.355 mo
566.973 122.355 li
566.973 33.975 li
538.812 33.975 li
538.812 122.355 li
clp
538.309 122.857 mo
567.474 122.857 li
567.474 33.4728 li
538.309 33.4728 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422395192.0 
<<
/ID /422395192.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422395192.0 /Pattern get_res
[1 0 0 -1 536 124 ]make_pattern set_pattern
f
2 vmreclaim
grestore
538.809 33.9728 mo
566.974 33.9728 li
566.974 122.357 li
538.809 122.357 li
cp
@
552.892 210.526 mo
544.693 210.526 538.032 216.23 538.032 223.279 cv
538.032 230.328 544.693 236.033 552.892 236.033 cv
561.105 236.033 567.752 230.328 567.752 223.279 cv
567.752 216.23 561.105 210.526 552.892 210.526 cv
560.989 216.33 mo
565.052 219.817 565.372 225.247 562.063 229.108 cv
546.115 215.408 li
550.599 212.568 556.926 212.867 560.989 216.33 cv
544.794 230.229 mo
540.745 226.741 540.412 221.311 543.721 217.45 cv
559.669 231.15 li
555.185 233.99 548.857 233.716 544.794 230.229 cv
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
f
552.892 210.526 mo
544.693 210.526 538.032 216.23 538.032 223.279 cv
538.032 230.328 544.693 236.033 552.892 236.033 cv
561.105 236.033 567.752 230.328 567.752 223.279 cv
567.752 216.23 561.105 210.526 552.892 210.526 cv
560.989 216.33 mo
565.052 219.817 565.372 225.247 562.063 229.108 cv
546.115 215.408 li
550.599 212.568 556.926 212.867 560.989 216.33 cv
544.794 230.229 mo
540.745 226.741 540.412 221.311 543.721 217.45 cv
559.669 231.15 li
555.185 233.99 548.857 233.716 544.794 230.229 cv
cp
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
gsave
601.317 122.355 mo
629.478 122.355 li
629.478 33.975 li
601.317 33.975 li
601.317 122.355 li
clp
600.816 122.857 mo
629.981 122.857 li
629.981 33.4728 li
600.816 33.4728 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422395392.0 
<<
/ID /422395392.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou
~>
<~Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-
~>
<~X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%
~>
<~k2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tggk2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tgg
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422395392.0 /Pattern get_res
[1 0 0 -1 598 124 ]make_pattern set_pattern
f
2 vmreclaim
grestore
601.316 33.9728 mo
629.481 33.9728 li
629.481 122.357 li
601.316 122.357 li
cp
@
gsave
574.776 137.799 mo
569.682 134.586 li
577.089 128.205 li
563.976 133.947 li
568.755 137.088 li
559.161 142.119 li
564.948 146.106 li
558.207 151.227 li
570.501 146.493 li
565.011 142.686 li
574.776 137.799 li
clp
568.536 140.922 mo
561.444 140.922 li
568.755 137.088 li
563.976 133.947 li
577.089 128.205 li
569.682 134.586 li
574.776 137.799 li
568.536 140.922 li
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[16.32 0 0 13.44 561.12 127.64 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 68 
/H 56 
/M[68 0 0 -56 0 56 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 68 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 68 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 68 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 68 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcP<@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&nGn.@JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&\c@6~>

%%EndBinary
grestore
np
558.207 151.227 mo
564.948 146.106 li
559.161 142.119 li
559.539 141.921 li
566.54 141.921 li
565.011 142.686 li
570.501 146.493 li
558.207 151.227 li
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[-8.23798 -10.0499 9.33046 -7.64825 562.17 130.973 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 57 
/H 50 
/M[57 0 0 -50 0 50 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 57 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLu7
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&r;_?~>

%%EndBinary
grestore
np
566.54 141.921 mo
559.539 141.921 li
561.444 140.922 li
568.536 140.922 li
566.54 141.921 li
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[-4.4803 -5.46573 5.22506 -4.28302 563.657 132.407 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 31 
/H 28 
/M[31 0 0 -28 0 28 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 31 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcO@%J,~>

%%EndBinary
grestore
np
grestore
574.778 137.795 mo
569.679 134.585 li
577.086 128.202 li
563.974 133.95 li
568.753 137.088 li
559.164 142.123 li
564.946 146.109 li
558.209 151.231 li
570.498 146.489 li
565.008 142.682 li
574.778 137.795 li
cp
@
true set_gvm
%ADOBeginSubsetFont: YGTBAA+Helvetica-Bold Initial
ct_T42Dict begin
0.008 -0.215 0.824 0.738
 256 array 0 1 255 {1 index exch /.notdef put} for  /YGTBAA+Helvetica-Bold
Type42DictBegin
[<00010000000b000b000b000b6376742067412940000000bc000003866670
676dd065e7a40000044400000a13676c7966329e194a0000134800000e74
68656164f32285e100000e5800000036686865610986071a00000e900000
0024686d747854e7064000000eb4000000506c6f636123b41fdc00000f04
0000002a6d61787008780afc00000f30000000206e616d65cde21fdb0000
0f500000002770726570fd52896600000f78000003cf6764697200000000
000000000000000005c0001105c2002d0597001d0442001d0000ffda0000
ffdb0000ffdafe53ffef05d0000afffdffed03340000012200000122dffb
011400af000700b7007e000400d200aa0109002300ed013200d9011d012a
00d800fe00db00e2001a008b00a0001a004500e801f6000900e901280132
00360082009e009fff700070003f003f00e801050015003800e9ff7bffc8
fff90042008a00c401070113011dffb9002f00870087009a009c010c0262
ffb10018004c00770080008200c900daffb2ffea001a003600e50111012f
043bffdd00020005001a0039008900aa00b701210123012a015bffe50002
00180023005c00aaff4dff76ffb2ffef001a002f004e007b008a00e1011f
0126012b019a01de03edff80ff8e0007001c004e005500630063006d0081
0098009c00ad011f01260162041c051500390044004b0063008e00cc00e8
00f2010001290142017802d503ea03f0043b049affc400050055005c0060
009f0103011d012401550164017001ad01b401c301f602370261033903d5
047004a100020055008800a100bd00c700d300dd00eb00ed00fa00fd0104
012b013e014f017b019d01ad01e20233025d027d028c02da02ef033103de
0407048b058505bbff04ffd5fffa0007001e002a003b0047005100580065
00650066006e0075007f00840107009700b100c300cc00df00df010a0110
012f013101470154015b016b0179009101a401ba01dc01e401e601e901f6
0213021f0223022f0276027d0282028902ad02b202b902ed03110374037d
03c003de03f60415045d04c004c004df052d0574061c064b0751fe94fedf
ff2dff90ff9affea0016001600240029002d003e0104006d006d00840087
0089008e009c00a400ab00ae00b200b2fffb013900c400d100df00e100ef
00f70121011c011c012101320138015001510154016c016d017f019801a4
01aa01b601ba01bb01bb00d701d701fb01fb01fe00190209022d025b0261
02790279029a009802d302da02ef030c03210328032d034b0353fff103ad
03b103f20425045a0471047b048a0498049f051c053d0557055a05700595
05b605cb05d605ef05f4061d068706a406b406d307080734079807fe0122
01320120012500b400be0082009603700132012400430184011d015600cc
010500ed00c500fb00f900c000a7011d00fe035500880026ffa100b8ff88
00dd00bd00b5037c003c00910293024aff3f03a803090132fff700820030
002a002a002a002a002a0000402a292827262524232221201f1e1d1c1b1a
191817161514131211100f0e0d0c0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b09051582320b00d44235921212d2c20204518684420b001
602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b2d
2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c20
45b00325456164b050515845441b2121592d2cb00143632362b0002342b0
0f2b2d2c2045b0004360442d2c20b0032552582359212d2c69b04061b000
8b0c6423648bb8400062600c642364615c58b0036159b002602d2c45b011
2bb0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb017458c
b0172344b0177ae5182d2cb002254661658a46b040608b482d2cb0022546
608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b00325
45b019234445b01a23444565234520b00325606a20b009234223688a6a60
6120b0005058b21a401a4523604459b0005258b219401945236044592d2c
b9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b
2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d2c01
20b003252349b04060b0206320b000525823b002253823b002256538008a
63381b212121212159012d2c456920b00943b0022660b00325b005254961
b0805358b21940194523616844b21a401a4523606a44b209191a45652345
604259b00943608a103a2d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c764520b0032545
23616818236860442d2c7645b00325452361682318456860442d2c7645b0
032545616823452361442db8002a2c4bb800095058b101018e59b801ff85
b800441db9000900035f5e2db8002b2c2020456944b001602db8002c2cb8
002b2a212db8002d2c2046b003254652582359208a208a49648a20462068
6164b004254620686164525823658a592f20b00053586920b000545821b0
40591b6920b000545821b0406559593a2db8002e2c2046b0042546525823
8a592046206a6164b0042546206a61645258238a592ffd2db8002f2c4b20
b0032650585158b080441bb04044591b21212045b0c05058b0c0441b2159
592db800302c2020456944b001602020457d691844b001602db800312cb8
00302a2db800322c4b20b003265358b0801bb040598a8a20b00326535823
21b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b00326
53582321b801408a8a1b8a235920b80003265358b0032545b80180505823
21b8018023211bb003254523212321591b2159442db800332c4b53584544
1b2121592db800342c4bb800095058b101018e59b801ff85b800441db900
0900035f5e2db800352c2020456944b001602db800362cb800352a212db8
00372c2046b003254652582359208a208a49648a204620686164b0042546
20686164525823658a592f20b00053586920b000545821b040591b6920b0
00545821b0406559593a2db800382c2046b00425465258238a592046206a
6164b0042546206a61645258238a592ffd2db800392c4b20b00326505851
58b080441bb04044591b21212045b0c05058b0c0441b2159592db8003a2c
2020456944b001602020457d691844b001602db8003b2cb8003a2a2db800
3c2c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b
8a235920b0032653582321b801008a8a1b8a235920b0032653582321b801
408a8a1b8a235920b80003265358b0032545b8018050582321b801802321
1bb003254523212321591b2159442db8003d2c4b535845441b2121592db8
003e2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2d
b8003f2c2020456944b001602db800402cb8003f2a212db800412c2046b0
03254652582359208a208a49648a204620686164b0042546206861645258
23658a592f20b00053586920b000545821b040591b6920b000545821b040
6559593a2db800422c2046b00425465258238a592046206a6164b0042546
206a61645258238a592ffd2db800432c4b20b0032650585158b080441bb0
4044591b21212045b0c05058b0c0441b2159592db800442c2020456944b0
01602020457d691844b001602db800452cb800442a2db800462c4b20b003
265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db800472c4b535845441b2121592db800482c4bb800
095058b101018e59b801ff85b800441db9000900035f5e2db800492c2020
456944b001602db8004a2cb800492a212db8004b2c2046b0032546525823
59208a208a49648a204620686164b004254620686164525823658a592f20
b00053586920b000545821b040591b6920b000545821b0406559593a2db8
004c2c2046b00425465258238a592046206a6164b0042546206a61645258
238a592ffd2db8004d2c4b20b0032650585158b080441bb04044591b2121
2045b0c05058b0c0441b2159592db8004e2c2020456944b001602020457d
691844b001602db8004f2cb8004e2a2db800502c4b20b003265358b0801b
b040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b8
01008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8000326
5358b0032545b8018050582321b8018023211bb003254523212321591b21
59442db800512c4b535845441b2121592db800522c4bb800095058b10101
8e59b801ff85b800441db9000900035f5e2db800532c2020456944b00160
2db800542cb800532a212db800552c2046b003254652582359208a208a49
648a204620686164b004254620686164525823658a592f20b00053586920
b000545821b040591b6920b000545821b0406559593a2db800562c2046b0
0425465258238a592046206a6164b0042546206a61645258238a592ffd2d
b800572c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db800582c2020456944b001602020457d691844b00160
2db800592cb800582a2db8005a2c4b20b003265358b0801bb040598a8a20
b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a
235920b0032653582321b801408a8a1b8a235920b80003265358b0032545
b8018050582321b8018023211bb003254523212321591b2159442db8005b
2c4b535845441b2121592d0000010000000100004e6c43f55f0f3cf50011
080000000000c6a61e5900000000c6a61e590015fe42069c05ef00010009
0001000000000000000100000629fe2900000c01f7dcfcdb0b7e00010000
000000000000000000000000001405c7009a0239000005c7005c02390084
04e300210473003b04e3003f0473002f04e30042023900890239008b071d
008004e3008704e3004204e3007d031d008202aa00150473001a0473001a
0473001500000034003400a600ce00fe01a201fc0290030a033e035e0406
045604ac050a0554059e060206a2073a0000000100000014006a0003006c
0008000200100010005c000007e80a130004000100000001001200010000
00000006001500005a54594e5a592b48656c7665746963612d426f6c6400
b800522bb800482bb8003e2bb800342bb8002a2bb10840ba019000145df4
4009011f04000b1fd819eebe012e000d00e6012e000d00b0012e400c0d00
0963833c1f63838348294109014b00370401001f014500240401001f0144
b224ab1fb8013eb224231fb8013db224231fb80102b2371d1fb801004009
37241ffd37621ffc37b80801401b1ff824931ff724931ff6243f1ff52431
1fd1371d1fd037471fcd41b80801b21fcb2ab80201b21fca24b80401400f
1fc824811fb537291fb4373b1fb227b80401b21fb141b80401b61fa43781
1fa384b80401b21fa22ab80401b21fa124b8019ab21fa024b8019ab61f9f
243f1f9683b80401b21f9527b80401b21f8227b80401b21f7084b80801b2
1f6fb3b80801b21f6eb3b802abb61f6d24261f6224b80101400b1f5d246c
1f5c24391f5441b80125b21f4d27b80401b61f4c27cd1f4b41b80401b21f
4024b8019ab21f3683b80401b21f3524b80201b21f3224b8019ab61f2c24
bb1f2884b80801b21f2241b8040140131f20244c1f1d24261f2ca0961f2c
245e1f412ab801a8b748282a2448279636b801f4b21f4d27b801f4b21f95
27b801f4b21f6e27b801f4b21f6327bd01a700470029015a00250199b348
296fb3b80190b21f83b3b8019ab348283725b803e840121fb32748278427
4827362748272527482755b80154402c0797076407550733072b07290726
0721071e071b071408120810080e080c080a080808060804080208000814
b8ffe0402b00000100140610000001000604000001000410000001001002
000001000200000001000002010802004a00b806008516763f183f123e11
3946443e113946443e113946443e113946443e11394660443e1139466044
2b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b18011db0964b53
58b0aa1d59b0324b5358b0ff1d592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b
4b5279b35279eb56456523456023456560234560b08b766818b080622020
b1eb794565234520b003266062636820b003266165b079236544b0eb2344
20b152564565234520b003266062636820b003266165b056236544b05223
44b10056455458b156406544b25240524523614459b35045484e45652345
6023456560234560b089766818b080622020b148454565234520b0032660
62636820b003266165b045236544b048234420b1504e4565234520b00326
6062636820b003266165b04e236544b0502344b1004e455458b14e406544
b250405045236144592b2b456953420000>
[3701 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> YGTBAA+Helvetica-Bold AddT42Char 
1 104 2 <0002005cffd7057b05ef001e001f00744029570a94079408035b02591b58
1d660477018905a914b204b70ac604c70bda02db14dd18df1bf8181017b8
010b40231a08081a0c411f030312411a091f16371708371f1e071a210f37
1e1920219921ad56182b2b4ef44ded4e10f64d1139edd4ed2f003fed3f3c
ed12392f10ed3130015d005d123736212017161721262726232202151416
33323736372106002120272611015ccfb401160174ac5f07fecc1e2f54a5
a8c2cd9ea2552f1f013128feb7fefffec2b6b602900457d1b6f4898a6a36
60fef1f8f8f76a3972f1fed2cccd0165031a>YGTBAA+Helvetica-Bold AddT42Char 
1 332 3 <00020084000001b605df00030004003040110402020108040617171a0400
2501190506ba014b00210135b179182b2b4ef44dfd394e456544e62f003f
3f3c3130290111212701b6fece01329905c21d00>YGTBAA+Helvetica-Bold AddT42Char 
1 412 4 <00010021000004cb05c200070038400c01062a070204080917171a00b801
58b2022505b80158400906190809c0217572182b2b4ef44df4fdfd4e4565
44e64d003f3ffd3c3130011121112111211104cbfe47fecafe4505c2fefb
fb4304bd0105>YGTBAA+Helvetica-Bold AddT42Char 
1 508 5 <0003003bffde0438045f000e0039003a008f404f3b0235367901890104d8
1e0126f3e62ae7230e0d05020005131a2b24232204262e262e2a0d050200
041b0b221b162c3a1f072a0a0b2c320b3a134d004d2e3a352a3e261a3c1a
4d1b2d084d35193b3cbc01190021004801ae00182b2b4ef44dedf4ed4e10
f64de41139cde5e52f003fed3f3f3cfdcd39111217391239390111121739
111217392b3130015d005d010e010f010607061514163332363727363736
35342623220706072136373621321716151114171e011715212e01270607
0623222635343736371302de1b3730405a2742513a5c9b03ad4f223d5d5a
652a1e0afeed0947710113b38b8b02031c1cfeca0d0a033b4d5c7494c19b
55a57002121115090c1017275249416c8fef0a0f1a37433332253f8f5c90
4747c5fe0c344a38280d2a213a25402d35a99bc95a311501d4000000>YGTBAA+Helvetica-Bold AddT42Char 
1 836 6 <0002003fffde046505c00010001d004f402ce80c010706151d0210030017
241007060a1d240a0b15031a131f061f0327041a1f1a360d191e1f982148
45182b2b4ef44ded4e10f64dfdf4e4111239003fed3f3fed3f1139113912
393130005d00161711211121350e01232200351000331236353427262322
0615141633027a9a300121feeb3d9c74bffefb0101d7b77e653e527d7577
79045c574d0208fa409761580135f201170140fc72b48fc85634bd8c97b5
>YGTBAA+Helvetica-Bold AddT42Char 
1 1016 7 <0003002fffdc043a045f00060021002200ab4049460887149701990a0406
0109050610051a4b05461049208601850f871f0a03160317131613174808
4c164c17491a5c165c175a1adc01db04e91de720f720104a014610880583
100402b8019540334f0e5f0e6f0e030e0e1b062422210717122c1b0b1603
02220336177b221e600c800c020c1a24021f0e951e1923249821484e182b
2b4ef44dfde44e10f65d4d1139e4ed2f111239003fedcd3f3ced12392f5d
fd313000715d01715d000607212e01233616171617160721161716333237
3637210607062322001110003b0101d06d0e01bb077b5b88da4740130b02
fd1606613b5358371e1701230b5a8cfcd0fec2011fe51403747c6a7175eb
666e61804b8da44229321b3061649f010c012e011b012e000000>YGTBAA+Helvetica-Bold AddT42Char 
1 1312 8 <00030042fe42045e045f000d002f0030005a40108a1e0111120524302f07
1206250d2429b8013f40201c202c180f30021f121f2527302c131a321c84
1b2d09362c19313298214845182b2b4ef44dedf4ed4e10f64d1139fdf4e4
2f003ffdcd3fed393f3f3ced11393130015d243635342623220706151417
1633121716173521111407062122242721161716333237363d0106070623
2202353412333702bd8a836e96391e203a960b3d68400115477afea6d1fe
f80e01360c1b2e6d9a3422292f5588d2fbf2de5bea97a59ba28d4b6e5f4a
8a0372192b739dfbf6d36bb8a4a332162767429c464623410127fcf3014b
03000000>YGTBAA+Helvetica-Bold AddT42Char 
1 1556 9 <00020089000001aa05cb00030007003b40224c004c015c005c010401b102
000406070a0917171a0006270107190809b2215045182b2b4ef43c4dfd3c
4e456544e6003f3f3f4ded3130005d012111210121112101aafedf0121fe
df0121fedf04c40107fe77fbbe00>YGTBAA+Helvetica-Bold AddT42Char 
1 1660 10 <0001008b000001a805c20003002540130200010a0517171a002701190405
b2215045182b2b4ef44dfd4e456544e6003f3f31302901112101a8fee301
1d05c200>YGTBAA+Helvetica-Bold AddT42Char 
1 1724 11 <000100800000069c045a002d00c2414d0037000200010006000200160002
002500020069000f006a001a0079000f007a001a0089000f008a001a0099
000f0099001a00a9001a00b9001a00e7000b000e0002002100290003001f
000d0024002d00180024002d00250007001f0006001d00120008000a002f
00170017001a000600360009010f00290011004d0014010f001e0020001d
0027001e0019002e002f012300210050004500182b2b4ef44dfdc410f4ed
39f4fd4e456544e6003f3c3c3f3f3c4ded10ed1117393130015d005d0016
171617161503211134272623220706151121113427262322070615112111
2115363736333217161736373633058f8c392e100a02fedc142666762d17
fee11424697a2a17fedf0115352f53847d4d3e203853586c045a38463953
376afd5102b63e284c623449fd770289612c4f4f2d59fd7004409f552440
373350602d2d>YGTBAA+Helvetica-Bold AddT42Char 
1 2060 12 <0002008700000461045f00160017004b402d0501150125013701580b680b
060112100609241716070e040a170536170f021a19110e270f191819be21
5045182b2b4ef44dfdc44e10f64d1139ed2f003f3c3f3ced3f3939313001
5d001615112111342726232207061511211121153637363327038ad7fedc
172a7691361cfee401133731588769045cb1cdfd220297562e547b4165fd
b204409f542542030000>YGTBAA+Helvetica-Bold AddT42Char 
1 2220 13 <00030042ffda049c0465000b00170018004d4028170301080c880c881003
170d180f660d0305241814070b240e0b1818080236171a1a08361119191a
b80176b321484e182b2b4ef44ded4e10f64ded11392f003fed3f3ced3130
017200727124363534262322061514163324002120003534002120001501
02eb86867d7d87877d022efeecfee7fee7feec0114011901190114fdd3c9
b2a4a4b1b1a4a4b266feab0155f0ec015afea6ec0240>YGTBAA+Helvetica-Bold AddT42Char 
1 2392 14 <0002007dfe53049a045a000d0020004a40291713080a1c1a022420071a06
0a24130b190e080d180d36101a22061f1b1f1827191921229821504e182b
2b4ef44dfdf4e44e10f64ded111239003f3fed3f3fed1139113912393130
002623220706151417163332363512001110002322272627112111211536
373633037473819b3a1e653c52777d1d0109fefdcc82562f2dfee601112e
345f83029fc2934e78be4d2db8990239fee6feeffee0fed2412445fdc805
efa1472949000000>YGTBAA+Helvetica-Bold AddT42Char 
1 2580 15 <00010082000002fb045c0013004ab900030147b3020f0d06b80147401913
070d060c0a200230024002031517171a020e0b270c191415b80164b32150
66182b2b4ef44dfdc4d44e456544e64d5d003f3f3fed1139d4ed31300016
17112e01232207061511211121153637363302dd0b131b2a0dac3b21fee1
011042315080045c0101fedc0302703f83fdf70442be6d2843000000>YGTBAA+Helvetica-Bold AddT42Char 
1 2728 16 <00010015ffea027805680016004ab6102c0f1f0c2c11ba01710004015c40
1607005c0601061817171a0f06f4040927009203151718b8010eb3216066
182b2bd43ce4fd3cf43c4e456544ee4d003f3cfd3ced3ffdf4e431301335
3311211133152311141633323637150706272635111598011ab1b122570d
1d0e87ca4a30036dcb0130fed0cbfdc043210101d505074d3166029f>YGTBAA+Helvetica-Bold AddT42Char 
1 2876 17 <0001001a0000045704420006009e404f270654066406a506b50605040601
1002470457047a0274037704064701880087059705a705b705c803e701f7
01090320040427120505060220010127120006000602050401000603020a
0802020001b8010cb2030506b8010cb6041907656066182b19764e10f418
4dfd3939fd39391910c618003f3c3f3c3c3c123905872e2b7d104b51587a
59c4872e182b7d104b51587a59c43130015d7100715d0121012101211303
250132fe77fed3fe790140e30442fbbe0442fcdc>YGTBAA+Helvetica-Bold AddT42Char 
1 3076 18 <0001001a000004500440000b010340970800180002070413041a0a032702
240426062a0a3604390a4504490a5504590a9504990aa004af0ab404b707
bb0ac404ca0ad204db0ae504f70417040318040503271202020104051804
030527120607060a09180a0b0927120708080a0b180a090b271200010001
04070a040006050302060b0908000a090705060b03010a0a040206080200
0d17171a08a900190c650c0da9216066182b2b764e10f4184dfd194e4565
44e64d2f18c410c41139391239393911393939003f3c3c3c3f3c3c3c1217
390110872b087d4b51587a5910c5181005872b7d084b51587a5910c51810
05872b087d4b51587a5910c5058710182b087d4b51587a5910c53130005d
71015d330901211b01210901210b011a0174fe9c015db6b20153fe9a0174
fe9dbcbd02280218fec4013cfdedfdd30147feb9>YGTBAA+Helvetica-Bold AddT42Char 
1 3396 19 <00020015fe470450045f0013001400d94070270a560a660a950aa40ad30a
06050a0106061c07110d2d07200d3d07310d4b075d07580b680b7707790d
0d170f360d8709880b980bb80b0614140c080d02200c0c27120b0b0a0607
021f0808271209090a0607020d0a150c0b0908060709001f022c131f100f
14071617171a0e0d0b0cb8010cb30607090ab8010c400c13920819651516
a9216066182b2b764ef44de418fc393939fc393939194e456544e618003f
3f4de4fde43f3f3c3c3c12393911123901872e2b057d104b52787ac53387
2e182b7d104b52787ac5011112392f3130015d7100715d1f011636373e01
2701211b01210102062322262701b1242a4c1a192b04fe70013deee1012f
fe8a6c7ebd262e2e0182d102020a12116c0c0472fcdc0324fbd0feca9501
03061400>YGTBAA+Helvetica-Bold AddT42Char 
1 0 0 <0002009a0000053d05c200030007003e402105061d02010004071d03000a
05041d0303021a0906071d0100190809aa216c3c182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111271121119a04a3b8
fccd05c2fa3eb80452fbae000000>YGTBAA+Helvetica-Bold AddT42Char 
YGTBAA+Helvetica-Bold /CharStrings get begin
/space 1 def
/C 2 def
/I 3 def
/T 4 def
/a 5 def
/d 6 def
/e 7 def
/g 8 def
/i 9 def
/l 10 def
/m 11 def
/n 12 def
/o 13 def
/p 14 def
/r 15 def
/t 16 def
/v 17 def
/x 18 def
/y 19 def
end
YGTBAA+Helvetica-Bold /Encoding get
dup 32 /space put
dup 67 /C put
dup 73 /I put
dup 84 /T put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 118 /v put
dup 120 /x put
dup 121 /y put
pop
end
%ADOEndSubsetFont
reset_gvm
/DBLQDS+Helvetica-Bold /YGTBAA+Helvetica-Bold findfont ct_VMDictPut/DBLQDS+Helvetica-Bold*1 [32{/.notdef}rp /space 34{/.notdef}rp /C 5{/.notdef}rp /I 10{/.notdef}rp /T 12{/.notdef}rp /a 2{/.notdef}rp /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /.notdef /v /.notdef /x /y 134{/.notdef}rp]DBLQDS+Helvetica-Bold nfDBLQDS+Helvetica-Bold*1 [18 0 0 -18 0 0 ]msf105.082 18.525 mo(Conventional T)[12.996 10.9979 10.9979 10.008 10.008 10.9979 5.99387 5.004 10.9979 10.9979 10.008 5.004 5.004 0 ]xsh233.754 18.525 mo(opology)[10.9979 10.9979 10.9979 5.004 10.9979 10.9979 0 ]xsh443.799 18.525 mo(Intermixed T)[5.004 10.9979 5.99387 10.008 7.00214 16.0021 5.004 10.008 10.008 10.9979 5.00403 0 ]xsh549.496 18.525 mo(opology)[10.9979 10.9979 10.9979 5.00403 10.9979 10.9979 0 ]xshgsave
421.551 235.08 mo
438.831 235.08 li
438.831 224.604 li
421.551 224.604 li
421.551 235.08 li
clp
421.05 235.579 mo
439.329 235.579 li
439.329 224.105 li
421.05 224.105 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422395592.0 
<<
/ID /422395592.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou
~>
<~Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-
~>
<~X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%
~>
<~k2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tggk2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tgg
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422395592.0 /Pattern get_res
[1 0 0 -1 419 237 ]make_pattern set_pattern
f
2 vmreclaim
grestore
421.55 224.605 mo
438.829 224.605 li
438.829 235.079 li
421.55 235.079 li
cp
@
gsave
421.551 245.556 mo
438.831 245.556 li
438.831 235.08 li
421.551 235.08 li
421.551 245.556 li
clp
421.05 246.052 mo
439.329 246.052 li
439.329 234.579 li
421.05 234.579 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422395792.0 
<<
/ID /422395792.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422395792.0 /Pattern get_res
[1 0 0 -1 419 248 ]make_pattern set_pattern
f
2 vmreclaim
grestore
421.55 235.079 mo
438.829 235.079 li
438.829 245.552 li
421.55 245.552 li
cp
@
gsave
421.551 256.023 mo
438.831 256.023 li
438.831 245.556 li
421.551 245.556 li
421.551 256.023 li
clp
421.05 256.526 mo
439.329 256.526 li
439.329 245.052 li
421.05 245.052 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422395992.0 
<<
/ID /422395992.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!
~>
<~!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!
~>
<~!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!
~>
<~!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422395992.0 /Pattern get_res
[1 0 0 -1 419 258 ]make_pattern set_pattern
f
2 vmreclaim
grestore
421.55 245.552 mo
438.829 245.552 li
438.829 256.026 li
421.55 256.026 li
cp
@
gsave
421.551 266.499 mo
438.831 266.499 li
438.831 256.023 li
421.551 256.023 li
421.551 266.499 li
clp
421.05 267 mo
439.329 267 li
439.329 255.526 li
421.05 255.526 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422396192.0 
<<
/ID /422396192.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK
~>
<~!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'
~>
<~!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#
~>
<~!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422396192.0 /Pattern get_res
[1 0 0 -1 419 269 ]make_pattern set_pattern
f
2 vmreclaim
grestore
421.55 256.026 mo
438.829 256.026 li
438.829 266.5 li
421.55 266.5 li
cp
@
430.512 140.925 mo
430.708 130.661 li
404.963 131.254 li
404.963 52.3612 li
411.183 52.3612 li
@
492.394 140.925 mo
492.394 131.848 li
460.428 131.848 li
460.428 70.7926 li
@
554.598 140.925 mo
554.598 131.848 li
524.014 131.848 li
524.014 88.5883 li
@
617.493 140.925 mo
617.493 131.848 li
583.709 131.848 li
583.709 106.977 li
@
gsave
421.551 224.604 mo
438.831 224.604 li
438.831 214.128 li
421.551 214.128 li
421.551 224.604 li
clp
421.05 225.105 mo
439.329 225.105 li
439.329 213.631 li
421.05 213.631 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
/422396392.0 
<<
/ID /422396392.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/422396392.0 /Pattern get_res
[1 0 0 -1 419 227 ]make_pattern set_pattern
f
2 vmreclaim
grestore
421.55 214.131 mo
438.829 214.131 li
438.829 224.605 li
421.55 224.605 li
cp
@
gsave
421.551 205.02 mo
438.831 205.02 li
438.831 202.266 li
421.551 202.266 li
421.551 205.02 li
clp
421.05 205.516 mo
439.329 205.516 li
439.329 201.762 li
421.05 201.762 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422125748.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou
~>
<~Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-
~>
<~X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%
~>
<~k2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tggk2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tgg
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 419 210 ]make_pattern set_pattern
f
2 vmreclaim
grestore
421.55 202.262 mo
438.829 202.262 li
438.829 205.016 li
421.55 205.016 li
cp
@
gsave
421.551 207.774 mo
438.831 207.774 li
438.831 205.02 li
421.551 205.02 li
421.551 207.774 li
clp
421.05 208.271 mo
439.329 208.271 li
439.329 204.516 li
421.05 204.516 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422125948.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 419 212 ]make_pattern set_pattern
f
2 vmreclaim
grestore
421.55 205.016 mo
438.829 205.016 li
438.829 207.771 li
421.55 207.771 li
cp
@
gsave
421.551 210.528 mo
438.831 210.528 li
438.831 207.774 li
421.551 207.774 li
421.551 210.528 li
clp
421.05 211.026 mo
439.329 211.026 li
439.329 207.271 li
421.05 207.271 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422126148.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!
~>
<~!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!
~>
<~!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!
~>
<~!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 419 215 ]make_pattern set_pattern
f
2 vmreclaim
grestore
421.55 207.771 mo
438.829 207.771 li
438.829 210.526 li
421.55 210.526 li
cp
@
gsave
421.551 213.282 mo
438.831 213.282 li
438.831 210.528 li
421.551 210.528 li
421.551 213.282 li
clp
421.05 213.781 mo
439.329 213.781 li
439.329 210.026 li
421.05 210.026 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422126348.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK
~>
<~!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'
~>
<~!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#
~>
<~!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 419 218 ]make_pattern set_pattern
f
2 vmreclaim
grestore
421.55 210.526 mo
438.829 210.526 li
438.829 213.281 li
421.55 213.281 li
cp
@
gsave
421.551 202.257 mo
438.831 202.257 li
438.831 199.503 li
421.551 199.503 li
421.551 202.257 li
clp
421.05 202.761 mo
439.329 202.761 li
439.329 199.007 li
421.05 199.007 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422126548.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 419 207 ]make_pattern set_pattern
f
2 vmreclaim
grestore
421.55 199.507 mo
438.829 199.507 li
438.829 202.261 li
421.55 202.261 li
cp
@
415.059 216.631 mo
414.434 264 li
@
0 lc
0 lj
418.434 264.053 mo
410.434 263.948 li
@
411.059 216.578 mo
419.059 216.684 li
@
true set_gvm
%ADOBeginSubsetFont: ITAQMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ITAQMX+Helvetica gcheck setglobal} if
1 464 5 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>ITAQMX+Helvetica AddT42Char 
ITAQMX+Helvetica /CharStrings get begin
/three 5 def
end
ITAQMX+Helvetica /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/DBLQDR+Helvetica*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /.notdef /zero /one /.notdef /three /.notdef /five 12{/.notdef}rp /B /C /D 7{/.notdef}rp /L 3{/.notdef}rp /P /.notdef /R 2{/.notdef}rp /U 11{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 5{/.notdef}rp /o /p /.notdef /r /s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]DBLQDR+Helvetica nfDBLQDR+Helvetica*1 [12 0 0 -12 0 0 ]msf341.214 235.121 mo(Base Load)[8.00409 6.672 6 6.672 3.336 6.672 6.672 6.672 0 ]xsh361.564 249.121 mo(1.0)[6.672 3.336 0 ]xsh347.736 189.86 mo(Reserve )[8.664 6.672 6 6.672 3.99591 6 6.672 0 ]xsh346.734 203.86 mo(Capacity)[8.664 6.672 6.672 6.672 6 2.664 3.336 0 ]xsh358.4 217.86 mo(0.33)[6.672 3.336 6.672 0 ]xsh1 lc
1 lj
415.692 199.401 mo
415.183 213.386 li
@
0 lc
0 lj
419.181 213.532 mo
411.186 213.241 li
@
411.695 199.256 mo
419.69 199.547 li
@
gsave
483.75 235.08 mo
501.03 235.08 li
501.03 224.604 li
483.75 224.604 li
483.75 235.08 li
clp
483.254 235.579 mo
501.533 235.579 li
501.533 224.105 li
483.254 224.105 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422126748.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou
~>
<~Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-
~>
<~X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%
~>
<~k2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tggk2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tgg
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 481 237 ]make_pattern set_pattern
f
2 vmreclaim
grestore
1 lc
1 lj
483.754 224.605 mo
501.033 224.605 li
501.033 235.079 li
483.754 235.079 li
cp
@
gsave
483.75 245.556 mo
501.03 245.556 li
501.03 235.08 li
483.75 235.08 li
483.75 245.556 li
clp
483.254 246.052 mo
501.533 246.052 li
501.533 234.579 li
483.254 234.579 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422126948.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 481 248 ]make_pattern set_pattern
f
2 vmreclaim
grestore
483.754 235.079 mo
501.033 235.079 li
501.033 245.552 li
483.754 245.552 li
cp
@
gsave
483.75 256.023 mo
501.03 256.023 li
501.03 245.556 li
483.75 245.556 li
483.75 256.023 li
clp
483.254 256.526 mo
501.533 256.526 li
501.533 245.053 li
483.254 245.053 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422127148.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!
~>
<~!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!
~>
<~!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!
~>
<~!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 481 258 ]make_pattern set_pattern
f
2 vmreclaim
grestore
483.754 245.552 mo
501.033 245.552 li
501.033 256.026 li
483.754 256.026 li
cp
@
gsave
483.75 266.499 mo
501.03 266.499 li
501.03 256.023 li
483.75 256.023 li
483.75 266.499 li
clp
483.254 267 mo
501.533 267 li
501.533 255.526 li
483.254 255.526 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422127348.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK
~>
<~!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'
~>
<~!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#
~>
<~!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 481 269 ]make_pattern set_pattern
f
2 vmreclaim
grestore
483.754 256.026 mo
501.033 256.026 li
501.033 266.5 li
483.754 266.5 li
cp
@
gsave
483.75 224.604 mo
501.03 224.604 li
501.03 214.128 li
483.75 214.128 li
483.75 224.604 li
clp
483.254 225.105 mo
501.533 225.105 li
501.533 213.631 li
483.254 213.631 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422127548.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 481 227 ]make_pattern set_pattern
f
2 vmreclaim
grestore
483.754 214.131 mo
501.033 214.131 li
501.033 224.605 li
483.754 224.605 li
cp
@
gsave
483.75 205.02 mo
501.03 205.02 li
501.03 202.266 li
483.75 202.266 li
483.75 205.02 li
clp
483.254 205.516 mo
501.533 205.516 li
501.533 201.762 li
483.254 201.762 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422273044.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou
~>
<~Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-
~>
<~X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%
~>
<~k2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tggk2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tgg
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 481 210 ]make_pattern set_pattern
f
2 vmreclaim
grestore
483.754 202.262 mo
501.033 202.262 li
501.033 205.016 li
483.754 205.016 li
cp
@
gsave
483.75 207.774 mo
501.03 207.774 li
501.03 205.02 li
483.75 205.02 li
483.75 207.774 li
clp
483.254 208.271 mo
501.533 208.271 li
501.533 204.516 li
483.254 204.516 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422273244.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 481 212 ]make_pattern set_pattern
f
2 vmreclaim
grestore
483.754 205.016 mo
501.033 205.016 li
501.033 207.771 li
483.754 207.771 li
cp
@
gsave
483.75 210.528 mo
501.03 210.528 li
501.03 207.774 li
483.75 207.774 li
483.75 210.528 li
clp
483.254 211.026 mo
501.533 211.026 li
501.533 207.271 li
483.254 207.271 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422273444.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!
~>
<~!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!
~>
<~!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!
~>
<~!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 481 215 ]make_pattern set_pattern
f
2 vmreclaim
grestore
483.754 207.771 mo
501.033 207.771 li
501.033 210.526 li
483.754 210.526 li
cp
@
gsave
483.75 213.282 mo
501.03 213.282 li
501.03 210.528 li
483.75 210.528 li
483.75 213.282 li
clp
483.254 213.78 mo
501.533 213.78 li
501.533 210.026 li
483.254 210.026 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422273644.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK
~>
<~!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'
~>
<~!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#
~>
<~!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 481 218 ]make_pattern set_pattern
f
2 vmreclaim
grestore
483.754 210.526 mo
501.033 210.526 li
501.033 213.28 li
483.754 213.28 li
cp
@
gsave
483.75 202.257 mo
501.03 202.257 li
501.03 199.503 li
483.75 199.503 li
483.75 202.257 li
clp
483.254 202.761 mo
501.533 202.761 li
501.533 199.007 li
483.254 199.007 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422273844.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 481 207 ]make_pattern set_pattern
f
2 vmreclaim
grestore
483.754 199.507 mo
501.033 199.507 li
501.033 202.261 li
483.754 202.261 li
cp
@
gsave
608.85 235.08 mo
626.13 235.08 li
626.13 224.604 li
608.85 224.604 li
608.85 235.08 li
clp
608.354 235.579 mo
626.633 235.579 li
626.633 224.105 li
608.354 224.105 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422274044.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou
~>
<~Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-
~>
<~X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%
~>
<~k2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tggk2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tgg
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 606 237 ]make_pattern set_pattern
f
2 vmreclaim
grestore
608.854 224.605 mo
626.133 224.605 li
626.133 235.079 li
608.854 235.079 li
cp
@
gsave
608.85 245.556 mo
626.13 245.556 li
626.13 235.08 li
608.85 235.08 li
608.85 245.556 li
clp
608.354 246.052 mo
626.633 246.052 li
626.633 234.579 li
608.354 234.579 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422274244.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 606 248 ]make_pattern set_pattern
f
2 vmreclaim
grestore
608.854 235.079 mo
626.133 235.079 li
626.133 245.552 li
608.854 245.552 li
cp
@
gsave
608.85 256.023 mo
626.13 256.023 li
626.13 245.556 li
608.85 245.556 li
608.85 256.023 li
clp
608.354 256.526 mo
626.633 256.526 li
626.633 245.053 li
608.354 245.053 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422274444.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!
~>
<~!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!
~>
<~!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!
~>
<~!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 606 258 ]make_pattern set_pattern
f
2 vmreclaim
grestore
608.854 245.552 mo
626.133 245.552 li
626.133 256.026 li
608.854 256.026 li
cp
@
gsave
608.85 266.499 mo
626.13 266.499 li
626.13 256.023 li
608.85 256.023 li
608.85 266.499 li
clp
608.354 267 mo
626.633 267 li
626.633 255.526 li
608.354 255.526 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422274644.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK
~>
<~!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'
~>
<~!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#
~>
<~!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 606 269 ]make_pattern set_pattern
f
2 vmreclaim
grestore
608.854 256.026 mo
626.133 256.026 li
626.133 266.5 li
608.854 266.5 li
cp
@
gsave
608.85 224.604 mo
626.13 224.604 li
626.13 214.128 li
608.85 214.128 li
608.85 224.604 li
clp
608.354 225.105 mo
626.633 225.105 li
626.633 213.631 li
608.354 213.631 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /422274844.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 606 227 ]make_pattern set_pattern
f
2 vmreclaim
grestore
608.854 214.131 mo
626.133 214.131 li
626.133 224.605 li
608.854 224.605 li
cp
@
gsave
608.85 205.02 mo
626.13 205.02 li
626.13 202.266 li
608.85 202.266 li
608.85 205.02 li
clp
608.354 205.516 mo
626.633 205.516 li
626.633 201.762 li
608.354 201.762 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /423119956.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V@Ou^V@Ou^V9c`^V@Ou^V@Ou^V9c`^V@Ou
~>
<~Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-Xf\_-Xf\_-Xf\_-XfVT*Xf\_-Xf\_-XfVT*Xf\_-
~>
<~X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%X/i;%X/i;%X/i;%X/c6$X/i;%X/i;%X/c6$X/i;%
~>
<~k2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tggk2tggk2tggk2tggk2l[+k2tggk2tggk2l[+k2tgg
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 606 210 ]make_pattern set_pattern
f
2 vmreclaim
grestore
608.854 202.262 mo
626.133 202.262 li
626.133 205.016 li
608.854 205.016 li
cp
@
gsave
608.85 207.774 mo
626.13 207.774 li
626.13 205.02 li
608.85 205.02 li
608.85 207.774 li
clp
608.354 208.271 mo
626.633 208.271 li
626.633 204.516 li
608.354 204.516 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /423120156.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 606 212 ]make_pattern set_pattern
f
2 vmreclaim
grestore
608.854 205.016 mo
626.133 205.016 li
626.133 207.771 li
608.854 207.771 li
cp
@
gsave
608.85 210.528 mo
626.13 210.528 li
626.13 207.774 li
608.85 207.774 li
608.85 210.528 li
clp
608.354 211.026 mo
626.633 211.026 li
626.633 207.271 li
608.354 207.271 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /423120356.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!!!'dK!!'dK!!!!!!!!!!^V9aK^V9aK!!!!!!!!!!
~>
<~!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!!!'.'!!'.'!!!!!!!!!!XfVR'XfVR'!!!!!!!!!!
~>
<~!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!!!'(#!!'(#!!!!!!!!!!X/c4#X/c4#!!!!!!!!!!
~>
<~!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!!!)0D!!)0D!!!!!!!!!!k2lXDk2lXD!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 606 215 ]make_pattern set_pattern
f
2 vmreclaim
grestore
608.854 207.771 mo
626.133 207.771 li
626.133 210.526 li
608.854 210.526 li
cp
@
gsave
608.85 213.282 mo
626.13 213.282 li
626.13 210.528 li
608.85 210.528 li
608.85 213.282 li
clp
608.354 213.78 mo
626.633 213.78 li
626.633 210.026 li
608.354 210.026 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /423120556.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK!5H8K!5H8K!!'dK!!'dK^An8K^An8K^V9aK^V9aK
~>
<~!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'!3N@'!3N@'!!'.'!!'.'XT/@'XT/@'XfVR'XfVR'
~>
<~!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#!3<.#!3<.#!!'(#!!'(#WrN.#WrN.#X/c4#X/c4#
~>
<~!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD!9WDD!9WDD!!)0D!!)0Djo>DDjo>DDk2lXDk2lXD
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 606 218 ]make_pattern set_pattern
f
2 vmreclaim
grestore
608.854 210.526 mo
626.133 210.526 li
626.133 213.28 li
608.854 213.28 li
cp
@
gsave
608.85 202.257 mo
626.13 202.257 li
626.13 199.503 li
608.85 199.503 li
608.85 202.257 li
clp
608.354 202.761 mo
626.633 202.761 li
626.633 199.007 li
608.354 199.007 li
cp
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
<<
/ID /423120756.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 8 8 ] 
/XStep 8 
/YStep 8 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
8 0 li
8 8 li
0 8 li
cp
clp
0 0 mo
8 0 li
8 8 li
0 8 li
cp
false sop
gsave
<< /CSA /3 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/3 /CSA get_res setcolorspace
clp
[1 0 0 -1 0 269 ]ct
[8 0 0 -8 0 269 ]ct
snap_to_device
<<
/T 1
/W 8 
/H 8 
/M[8 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!^V@Ou^V@Ou^V@Ou^V@Ou!!!!!!!!!!!!!!!!!!!!
~>
<~Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!Xf\_-Xf\_-Xf\_-Xf\_-!!!!!!!!!!!!!!!!!!!!
~>
<~X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!X/i;%X/i;%X/i;%X/i;%!!!!!!!!!!!!!!!!!!!!
~>
<~k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!k2tggk2tggk2tggk2tgg!!!!!!!!!!!!!!!!!!!!
~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
[1 0 0 -1 606 207 ]make_pattern set_pattern
f
2 vmreclaim
grestore
608.854 199.507 mo
626.133 199.507 li
626.133 202.261 li
608.854 202.261 li
cp
@
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 /2 /3 ]]
[/Pattern [/422406084.0 /422406284.0 /422406484.0 /422406684.0 /422406884.0 
/422407084.0 /422407284.0 /422407484.0 /422407684.0 /422407884.0 
/422394592.0 /422394792.0 /422394992.0 /422395192.0 /422395392.0 
/422395592.0 /422395792.0 /422395992.0 /422396192.0 /422396392.0 ]]
] del_res
true set_gvm
/DBLQDR+Helvetica*1 uf/DBLQDR+Helvetica uf/ITAQMX+Helvetica uf/DBLQDS+Helvetica-Bold*1 uf/DBLQDS+Helvetica-Bold uf/YGTBAA+Helvetica-Bold ufreset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
