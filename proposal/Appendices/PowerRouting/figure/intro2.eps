%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: intro2.pdf
%%Creator: Adobe Acrobat 8.0
%%For: twenisch
%%CreationDate: 12/21/09, 1:54:01 AM
%%BoundingBox: 0 0 210 134
%%HiResBoundingBox: 0 0 209.8020 133.9170
%%CropBox: 0 0 209.8020 133.9170
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline pop
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2005 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{aload pop setcolor}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2003 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
										]cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2016 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 4778 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.0-c321 44.398116, Tue Aug 04 2009 14:24:30">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xap="http://ns.adobe.com/xap/1.0/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
   xap:CreateDate="2009-08-10T17:37:57Z"
   xap:CreatorTool="Microsoft Excel"
   xap:ModifyDate="2009-12-21T01:52:55-05:00"
   xap:MetadataDate="2009-12-21T01:52:55-05:00"
   dc:format="application/pdf"
   pdf:Keywords=""
   pdf:Producer="Mac OS X 10.5.7 Quartz PDFContext"
   xapMM:DocumentID="uuid:57d06e41-adc9-1945-9136-e1b5f8a9fb3c"
   xapMM:InstanceID="uuid:a75bacef-e1e8-384b-bfdf-c1a7e09e733c">
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Thomas Wenisch</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">intro.xlsx</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
<< /0 
[/CIEBasedABC 20 dict
dup /CreationDate (20020513120000) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (Generic RGB Profile) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright 2007 Apple Inc., all rights reserved.) put
dup /ProfileID <4B564FD2E33619AD8EB24BD818BD5501> put
dup /DecodeABC [
{{0 0.00012 0.00024 0.00037 0.00056 0.00084 0.00116 0.00153 0.00195 0.00241
0.00291 0.00346 0.00404 0.00467 0.00534 0.00604 0.00679 0.00757 0.00839 0.00925
0.01014 0.01107 0.01204 0.01305 0.01408 0.01516 0.01627 0.01741 0.01859 0.0198
0.02105 0.02233 0.02364 0.02499 0.02637 0.02779 0.02923 0.03071 0.03222 0.03376
0.03534 0.03695 0.03858 0.04025 0.04195 0.04369 0.04545 0.04725 0.04907 0.05093
0.05282 0.05473 0.05668 0.05866 0.06067 0.0627 0.06477 0.06687 0.069 0.07115
0.07334 0.07556 0.0778 0.08008 0.08238 0.08471 0.08707 0.08946 0.09188 0.09433
0.09681 0.09931 0.10184 0.10441 0.107 0.10961 0.11226 0.11493 0.11763 0.12036
0.12312 0.12591 0.12872 0.13156 0.13443 0.13732 0.14025 0.1432 0.14618 0.14918
0.15221 0.15527 0.15836 0.16147 0.16461 0.16778 0.17097 0.17419 0.17744 0.18071
0.18401 0.18734 0.19069 0.19407 0.19748 0.20091 0.20437 0.20786 0.21137 0.2149
0.21847 0.22206 0.22567 0.22931 0.23298 0.23668 0.24039 0.24414 0.24791 0.25171
0.25553 0.25937 0.26325 0.26715 0.27107 0.27502 0.27899 0.28299 0.28702 0.29107
0.29515 0.29925 0.30337 0.30752 0.3117 0.3159 0.32013 0.32438 0.32866 0.33296
0.33728 0.34163 0.34601 0.35041 0.35483 0.35928 0.36376 0.36826 0.37278 0.37733
0.3819 0.3865 0.39112 0.39577 0.40044 0.40513 0.40985 0.41459 0.41936 0.42415
0.42897 0.43381 0.43867 0.44356 0.44847 0.45341 0.45837 0.46335 0.46836 0.47339
0.47845 0.48353 0.48864 0.49376 0.49891 0.50409 0.50929 0.51451 0.51976 0.52503
0.53032 0.53564 0.54098 0.54634 0.55173 0.55714 0.56258 0.56804 0.57352 0.57902
0.58455 0.5901 0.59568 0.60128 0.6069 0.61255 0.61821 0.62391 0.62962 0.63536
0.64112 0.6469 0.65271 0.65854 0.66439 0.67027 0.67617 0.68209 0.68804 0.69401
0.7 0.70601 0.71205 0.71811 0.72419 0.73029 0.73642 0.74257 0.74875 0.75494
0.76116 0.7674 0.77367 0.77996 0.78627 0.7926 0.79895 0.80533 0.81173 0.81815
0.8246 0.83106 0.83755 0.84407 0.8506 0.85716 0.86374 0.87034 0.87696 0.88361
0.89028 0.89697 0.90368 0.91042 0.91718 0.92396 0.93076 0.93758 0.94443 0.9513
0.95819 0.9651 0.97204 0.979 0.98598 0.99298 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2271381704 0.1212687428 0.0074094887
0.176661326 0.3370753975 0.04522001
0.0783093004 0.0416634892 0.3598294927
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]

/CSA add_res
/CSA /0 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -133.917 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 133.917 li
209.802 133.917 li
209.802 0 li
cp
clp
[1 0 0 1 -210.249 0 ]ct
gsave
51.363 -376.596 mo
482.643 -376.596 li
482.643 -389.556 li
51.363 -389.556 li
51.363 -376.596 li
clp
false sop
<< /1 
/CIEBasedDEFG /ColorSpaceFamily resourcestatus
{pop pop false} {true} ifelse
{[/DeviceCMYK]}
{[/CIEBasedDEFG 20 dict
dup /CreationDate (20000726054153) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (U.S. Web Coated (SWOP) v2) put
dup /ColorSpace (CMYK) put
dup /Copyright (Copyright 2000 Adobe Systems, Inc.) put
dup /ProfileID <79D7E984EA3AC74EED7CC92BF6B22A0D> put
dup /DecodeDEFG [
{{0 0.00833 0.01601 0.02278 0.02885 0.03445 0.03976 0.04486 0.04976 0.05451
0.05916 0.06374 0.06831 0.07287 0.07742 0.08193 0.08642 0.09088 0.09529 0.09965
0.10399 0.10832 0.11265 0.11733 0.12201 0.12661 0.13116 0.13566 0.14012 0.14456
0.14896 0.15337 0.15775 0.16214 0.16652 0.17091 0.17529 0.17967 0.18404 0.18843
0.19281 0.19715 0.20147 0.20579 0.21012 0.21445 0.21878 0.2231 0.22742 0.23173
0.23605 0.24038 0.2447 0.24899 0.25327 0.25752 0.26179 0.26608 0.27035 0.27463
0.27892 0.2832 0.28749 0.29178 0.29607 0.30036 0.30462 0.30885 0.31307 0.31731
0.32154 0.32576 0.33 0.33423 0.33847 0.34271 0.34694 0.35117 0.35541 0.35963
0.36381 0.36798 0.37213 0.37629 0.38044 0.38459 0.38874 0.39289 0.39704 0.40118
0.40533 0.40947 0.41359 0.41772 0.42181 0.42586 0.4299 0.43393 0.43796 0.44199
0.446 0.45002 0.45402 0.45802 0.46202 0.466 0.46999 0.47397 0.47794 0.48191
0.48584 0.48973 0.49361 0.49748 0.50135 0.50521 0.50907 0.51292 0.51677 0.52061
0.52444 0.52827 0.53209 0.5359 0.53972 0.54353 0.54733 0.55112 0.55487 0.5586
0.56232 0.56604 0.56974 0.57345 0.57716 0.58086 0.58456 0.58825 0.59194 0.59564
0.59933 0.60302 0.6067 0.61037 0.61406 0.61775 0.62142 0.62508 0.62871 0.63233
0.63594 0.63955 0.64316 0.64677 0.65038 0.654 0.65762 0.66123 0.66484 0.66846
0.67207 0.67569 0.67931 0.68292 0.68654 0.69016 0.69378 0.69741 0.70103 0.70464
0.70826 0.71186 0.71547 0.71908 0.72269 0.7263 0.72991 0.73352 0.73713 0.74074
0.74436 0.74797 0.75158 0.7552 0.75881 0.76243 0.76605 0.76965 0.77327 0.77689
0.7805 0.78411 0.78772 0.79132 0.79488 0.79844 0.80199 0.80554 0.80909 0.81265
0.81619 0.81973 0.82327 0.82681 0.83034 0.83386 0.83739 0.8409 0.84442 0.84792
0.85143 0.85491 0.8584 0.86188 0.86536 0.86884 0.87232 0.87579 0.87925 0.88272
0.88617 0.8896 0.89296 0.89631 0.89965 0.90297 0.90629 0.90958 0.91288 0.91615
0.91941 0.92265 0.92585 0.92906 0.93228 0.93569 0.93908 0.94245 0.94579 0.94912
0.95242 0.95571 0.95898 0.96223 0.96547 0.96871 0.97191 0.97505 0.97815 0.98119
0.98414 0.98699 0.98974 0.9924 0.99497 0.99749 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00742 0.01421 0.02013 0.02537 0.03016 0.03467 0.03901 0.04317 0.04716
0.05109 0.05495 0.05879 0.06266 0.0665 0.07033 0.07415 0.07794 0.08171 0.08546
0.08916 0.09284 0.09654 0.10056 0.10457 0.10852 0.11241 0.11628 0.12011 0.12393
0.12774 0.13154 0.13533 0.13913 0.14293 0.14674 0.15056 0.15438 0.15821 0.16204
0.1659 0.16976 0.17363 0.17749 0.18131 0.18513 0.18896 0.19279 0.19664 0.20048
0.20434 0.2082 0.21208 0.21598 0.21988 0.2238 0.22766 0.23153 0.23539 0.23928
0.24317 0.24707 0.25099 0.25492 0.25886 0.26281 0.26676 0.27072 0.2747 0.27864
0.28255 0.28646 0.29039 0.29433 0.29827 0.30222 0.30618 0.31015 0.31413 0.31811
0.3221 0.3261 0.33009 0.33404 0.33796 0.34188 0.34581 0.34974 0.35367 0.35762
0.36156 0.3655 0.36944 0.3734 0.37734 0.38128 0.38524 0.38918 0.39307 0.39693
0.40078 0.40464 0.4085 0.41235 0.4162 0.42005 0.42391 0.42776 0.43161 0.43545
0.43929 0.44313 0.44696 0.45079 0.45458 0.45833 0.46207 0.46581 0.46954 0.47328
0.47701 0.48074 0.48446 0.48819 0.49191 0.49563 0.49934 0.50306 0.50677 0.51048
0.51418 0.51788 0.52154 0.52517 0.52879 0.53242 0.53604 0.53966 0.54328 0.54691
0.55053 0.55415 0.55778 0.5614 0.56503 0.56867 0.5723 0.57594 0.57958 0.58322
0.58687 0.59052 0.59416 0.59776 0.60135 0.60495 0.60855 0.61216 0.61578 0.6194
0.62304 0.62667 0.63033 0.63399 0.63766 0.64134 0.64502 0.64872 0.65243 0.65616
0.65989 0.66362 0.66737 0.67114 0.67491 0.67868 0.68246 0.68625 0.69005 0.69385
0.69767 0.70152 0.70537 0.70922 0.7131 0.71698 0.72089 0.7248 0.72872 0.73265
0.7366 0.74055 0.74453 0.74851 0.75249 0.7565 0.76051 0.76454 0.76856 0.77254
0.77652 0.78051 0.78451 0.78852 0.79254 0.79656 0.80059 0.80462 0.80867 0.81271
0.81675 0.82081 0.82485 0.82892 0.83299 0.83706 0.84114 0.84523 0.84932 0.8534
0.85749 0.86158 0.86569 0.86978 0.87387 0.87788 0.88186 0.88584 0.88981 0.89377
0.89773 0.90168 0.90561 0.90955 0.9135 0.91765 0.9218 0.92593 0.93005 0.93416
0.93826 0.94233 0.9464 0.95046 0.95452 0.95858 0.96262 0.96662 0.97057 0.97447
0.97831 0.98208 0.98576 0.98938 0.99295 0.99647 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00786 0.01496 0.02105 0.02638 0.03125 0.03581 0.04019 0.04438 0.04847
0.05246 0.05638 0.06027 0.06416 0.06804 0.07187 0.07569 0.07946 0.0832 0.08691
0.09061 0.09429 0.09797 0.10199 0.10602 0.10997 0.11385 0.11767 0.12147 0.12525
0.129 0.13274 0.13648 0.14021 0.14393 0.14765 0.15138 0.1551 0.15881 0.16253
0.16626 0.16998 0.17369 0.1774 0.18111 0.18483 0.18854 0.19225 0.19597 0.19968
0.20339 0.20711 0.21084 0.21457 0.2183 0.22202 0.22575 0.22948 0.23323 0.23698
0.24074 0.24451 0.24828 0.25206 0.25584 0.25964 0.26345 0.26725 0.27106 0.27487
0.27868 0.2825 0.28633 0.29017 0.29402 0.29787 0.30174 0.30561 0.30949 0.31337
0.31728 0.32116 0.32505 0.32894 0.33283 0.33673 0.34064 0.34454 0.34846 0.35238
0.3563 0.36022 0.36416 0.36808 0.37201 0.37594 0.37986 0.38377 0.38768 0.3916
0.39551 0.39942 0.40334 0.40724 0.41115 0.41505 0.41895 0.42285 0.42675 0.43064
0.43453 0.43841 0.44227 0.44613 0.44999 0.45384 0.45768 0.46152 0.46535 0.46918
0.473 0.47682 0.48063 0.48444 0.48824 0.49203 0.49583 0.49961 0.50339 0.50716
0.51091 0.51466 0.5184 0.52215 0.52589 0.52963 0.53336 0.53709 0.54082 0.54456
0.54829 0.55202 0.55575 0.55948 0.56322 0.56696 0.5707 0.57444 0.57819 0.58194
0.58569 0.58945 0.59322 0.597 0.6008 0.60459 0.60841 0.61223 0.61607 0.61992
0.62378 0.62766 0.63156 0.63547 0.6394 0.64334 0.6473 0.65129 0.65529 0.65932
0.66336 0.66741 0.6715 0.67561 0.67973 0.68387 0.68803 0.69221 0.69642 0.70065
0.70489 0.70915 0.71343 0.71773 0.72204 0.72638 0.73073 0.7351 0.73948 0.74386
0.74827 0.75268 0.75709 0.76151 0.76595 0.77038 0.77481 0.77926 0.78371 0.78814
0.79258 0.79702 0.80144 0.80586 0.81027 0.81467 0.81905 0.82342 0.82776 0.83209
0.83641 0.8407 0.84496 0.84921 0.85343 0.85763 0.86181 0.86599 0.87013 0.87425
0.87832 0.88237 0.88639 0.89037 0.89432 0.89822 0.90208 0.9059 0.90967 0.9134
0.91707 0.9207 0.92428 0.92781 0.93139 0.93533 0.9392 0.94301 0.94674 0.9504
0.954 0.95752 0.96099 0.96439 0.96775 0.97106 0.97429 0.9774 0.98039 0.98326
0.98601 0.9886 0.99106 0.9934 0.99565 0.99784 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00719 0.01382 0.0196 0.02464 0.02919 0.03344 0.0375 0.04144 0.04526
0.04897 0.05261 0.05623 0.05986 0.06346 0.06704 0.07059 0.07412 0.07763 0.08113
0.08461 0.08808 0.09155 0.09537 0.09921 0.10297 0.10665 0.11029 0.11388 0.11745
0.12103 0.12457 0.12813 0.13167 0.13522 0.13877 0.14232 0.14588 0.14944 0.15299
0.15656 0.16015 0.16372 0.16732 0.17092 0.17452 0.17812 0.18173 0.18533 0.18894
0.19255 0.19616 0.19978 0.20341 0.20703 0.21067 0.21431 0.21795 0.2216 0.22526
0.22892 0.23259 0.23625 0.23991 0.24359 0.24727 0.25096 0.25464 0.25833 0.26202
0.26573 0.26942 0.27313 0.27682 0.28053 0.28424 0.28795 0.29165 0.29537 0.29909
0.3028 0.30652 0.31023 0.31394 0.31765 0.32135 0.32505 0.32874 0.33243 0.33611
0.33979 0.34346 0.34714 0.35081 0.35448 0.35815 0.36182 0.36548 0.36914 0.3728
0.37645 0.3801 0.38373 0.38735 0.39098 0.3946 0.39822 0.40184 0.40546 0.40907
0.41268 0.41628 0.41989 0.42349 0.42708 0.43067 0.43426 0.43784 0.44141 0.44497
0.44853 0.45208 0.45562 0.45916 0.4627 0.46624 0.46978 0.47332 0.47684 0.48037
0.4839 0.48742 0.49094 0.49446 0.49798 0.50149 0.505 0.50851 0.51199 0.51548
0.51896 0.52243 0.5259 0.52938 0.53286 0.53634 0.53982 0.54329 0.54677 0.55025
0.55373 0.55722 0.56071 0.5642 0.56769 0.57119 0.57468 0.57819 0.5817 0.58521
0.58873 0.59225 0.59578 0.59932 0.60286 0.60641 0.60997 0.61355 0.61712 0.62072
0.62432 0.62794 0.63157 0.63521 0.63887 0.64254 0.64622 0.64991 0.65361 0.65734
0.66109 0.66485 0.66862 0.67241 0.67621 0.68003 0.68385 0.68768 0.69153 0.6954
0.69928 0.70317 0.70708 0.71102 0.71496 0.71894 0.72293 0.72694 0.73096 0.735
0.73907 0.74314 0.74724 0.75136 0.75549 0.75963 0.7638 0.768 0.7722 0.77641
0.78066 0.78491 0.78918 0.79348 0.79779 0.80213 0.80646 0.81078 0.81512 0.81948
0.82386 0.82826 0.83268 0.83712 0.84158 0.84606 0.85056 0.85508 0.85963 0.86417
0.86874 0.87331 0.8779 0.8825 0.8872 0.89223 0.89728 0.90236 0.90745 0.91256
0.9177 0.92285 0.92803 0.93325 0.93851 0.94385 0.94918 0.9545 0.9598 0.96506
0.97026 0.97538 0.98041 0.98533 0.99021 0.99508 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
] put
dup /Table [9 9 9 9 [
[<FE8080E57F7FCD7F7EB47F7E9B7F7E837F7E6A7F7E51807F398180FC7E8BE47E89CB7E87
B37E869A7E85827E84697F83507F82388081FA7D96E27D93CA7D90B27D8E997D8C807E8A
687E884F7F85377F83F87CA1E07C9DC87C99B07C96987C937F7D8F677D8C4F7E89367F85
F67BACDF7BA7C77BA2AF7B9E967C997E7C95667D914E7D8C367E86F57AB8DD7AB1C57AAB
AD7BA6957BA07D7C9B657C954D7D8F357E88F47AC3DC7ABBC47AB4AC7AAE947BA77C7BA0
647C994D7D92357E89F279CEDB79C5C379BDAB7AB5937AAD7C7BA6647C9D4C7C94347D8A
F279DADA79CFC279C6AA79BD937AB47B7BAB637BA14C7C97347D8B>
<ED887ED7877DC0867DA9857D92857D7B847D63837E4C837E358380EB8788D58687BF8585
A884849184837983836283824B8282358281EA8693D48590BD848EA6838C8F838A788288
6182864B8285348283E8859DD2849ABC8396A582938E829077828E60818B4A8188338184
E684A8D183A3BA829FA4829B8D819776819360818F49818B338186E583B3CF83ADB982A8
A381A38C819E7580985F809349808E338087E483BDCE82B7B881B0A281AA8B80A475809E
5E8097488090328088E383C8CD82C0B781B9A180B18A80AA7480A35E809B488093328089
E282D3CC81CAB681C1A080B88A80B0737FA75D7F9E477F95327F8A>
<DD917CC88F7CB38E7C9E8C7C888A7C72897D5D877D47867E32857FDB9086C78E85B28C84
9D8B838789827188825C8781468581328481DA8F90C58D8EB18B8C9B8A8A868888708787
5B8685468584318483D88E9AC48C97AF8A949A899185888F6F868C5A858A458487318384
D78DA4C38BA0AE8A9C9988988487956F869159858E45848A308386D68DAEC28BA9AD89A4
98889F83879B6E859659849244838C308287D58CB8C18AB2AC89AC9787A78286A16D859B
58849544838F308288D48CC2C08ABBAB88B49687AD8186A76C85A0588499438391308289
D38CCCBF8AC4AA88BC9687B48185AC6C84A457839C4382932F8289>
<CE9B7BBA987BA6957B92937B7E907B6A8E7C568C7D42897E2F877FCC9984B99783A59482
9292827E8F81698D81558B814289812F8681CA988EB8968CA4938A9191887D8E87698C86
558A854188842E8682C99897B69594A3929190908F7C8E8D688C8B5489884187862E8584
C897A0B5949DA292998E8F967B8D93678B9053898C4087892E8585C796AAB494A5A191A1
8D8F9D7A8C98668A9453889040868B2E8486C696B3B393AEA091A88D8EA3798C9E668A99
52889340868D2E8487C595BCB393B6A090B08C8EAA798CA3658A9D5288963F868F2E8488
C595C6B292BE9F90B78B8EB0788BA86589A15287993F86912D8489>
<BEA47AACA07A9A9D7A889A7A75967B62937C50907C3E8C7E2C897FBDA383AB9F82999C81
8799817495806292804F8F803D8C802C8881BCA28CAA9E8A989B88869887739586619185
4F8E843D8B832C8782BBA194A99E92979A8F85978D73948B6091894E8E873C8A862C8784
BAA09DA89D9A969A9784969472939160908E4E8D8B3C8A882C8785B9A0A6A79CA296999E
83969A7193965F90924D8D8E3C898A2C8686B8A0AFA79CAA9599A58395A071929B5E8F96
4D8C913C898C2C8687B79FB7A69CB19498AC8295A67092A05E8F9A4D8C943C898E2C8687
B79FC0A69BB99498B28295AC7092A55E8F9E4C8C973B89902C8588>
<B0AD7A9FA97A8EA57A7DA17A6C9D7A5B987B4A947C39907E2A8B7FAFAD829EA8818DA480
7DA0806B9C805A9780499380398F802A8A81AEAC8A9DA7888DA3877C9F866B9B855A9784
499283398E832A8982ADAB929DA7908CA28E7B9E8C6A9A8A599688489287388D852A8983
ACAA9A9CA6978BA2947A9D9269998F58958C48918A388D872A8884ACAAA39BA59F8BA19B
7A9D9769999458959048918D388C892A8885ABA9AB9BA5A68AA1A1799C9D689899589494
479090388C8B2A8886AAA9B39AA4AD8AA0A8799CA268989D579498479092388C8D2A8787
AAA9BB9AA4B489A0AE789CA86898A157949B479095388B8E2A8787>
<A2B77992B27983AD7973A87A63A37A539E7B44987C35937D278C7FA1B68192B18082AC80
73A77F63A27F539D7F44977F359280288C81A1B68991B08782AB8672A68562A184539C83
439783359182288B82A0B59091B08E81AA8C71A58A62A089529B87439686359084288A83
A0B49890AF9581AA9271A59061A08D529B8B439589359086288A849FB4A090AE9C80A998
70A495619F92529A8F43958C358F882889859FB3A78FAEA380A99E70A49A619F96519992
43948E358F8A2889869EB3AE8FADA980A8A470A39F609E9A519995429490358E8B288986
9EB2B68FADB07FA8AA70A3A4609E9E519998429392358E8D298987>
<95C17987BB7978B5796AAF795BA97A4DA37B3F9C7C31957D258E7F95C08086BA7F78B47F
69AE7F5BA87E4CA27F3E9B7F319580268D8194BF8886B98677B38569AD845AA7834CA182
3E9B82319482268C8294BF8F86B98C77B38B69AD895AA6874CA0863E9A85329384268C83
94BE9685B89377B29068AC8E5AA68C4CA08A3E9988329286278B8493BD9D85B79976B196
68AB935AA5904C9F8D3E988A329287278B8593BDA485B79F76B19B68AB9859A5944B9E90
3E988D329189278A8593BCAA85B6A576B0A168AA9C59A4984B9E933E988F32918A278A86
92BCB184B6AB76B0A568AAA059A49B4B9D963E979132918B278A86>
<89CB797BC4796EBE7961B77953B07A46A87B3AA17C2E987D248F7F89CA807BC47F6EBD7E
60B67E53AF7E46A77E3A9F7F2E977F248E8089C9877BC3856EBC8460B58353AE8246A682
3A9E822E9681258E8289C88D7BC28B6DBB8960B48853AD8646A5853A9E842F9583258D83
89C7947BC1916DBA8F60B38C53AC8A46A4893A9D872F9585258C8389C79A7BC0976EB994
60B29153AB8E46A48C3A9C892F9487268C8488C6A17BBF9C6EB89960B19553AA9246A38F
3A9B8B2F9488268C8588C6A77BBFA26EB89D60B19953AA9546A3913A9B8D2F9389268B85
88C5AD7BBEA76EB7A260B09D53A99846A2933A9B8F2F938A268B86>
][<F27B79DB7B79C47C7AAC7C7A957C7A7D7D7B667E7C4E7E7D377F7EF07984D97A83C27A82
AB7B82947B817C7C81647D804D7E80367F80EE788FD8788DC1798BAA7A8A927A887B7B86
647C854C7D83357E82EC779BD67797BF7894A8799191798F7A7A8C637B8A4B7C87347E83
EA76A6D476A1BE779DA77899907996797A92627B8E4B7C8A347D85E975B1D376ABBC76A6
A677A18F789C787997617A924A7B8D337D87E875BCD275B5BB76AFA477A98E77A377789D
607A964A7B90337C88E774C7D175BFBA75B8A476B08D77A97678A260799A497A92337C89
E674D1D074C9BA75C0A376B88C77AF7578A75F799E497A94337C8A>
<E28478CD8378B78378A282798B827A75827A5F817B49817C33827EE08282CC8281B68181
A181808A81807481805E8080488180338180DE818DCA808BB580899F8088898086738085
5D8084478083328082DD8097C87F94B37F929E7F8F887F8D727F8B5C7F88477F86328083
DB7FA2C77E9EB27E9A9C7E97877E93717E905C7E8D467F89317F85DA7EACC67EA7B17DA3
9B7D9E867D9A707E955B7E91467E8C317F86D97EB6C57DB1B07DAB9A7DA5857DA06F7D9A
5A7D95457E8E317E87D87DC1C47DBAAF7CB3997CAD847CA66F7D9F5A7D98457E91307E88
D87DCBC37CC3AE7CBB997CB4837CAC6E7CA4597D9B457D93307E89>
<D28C76BF8B77AB8A779788788287796D867A59857B44847C30847ED18B80BE8A80AA887F
96877F81867F6C857F58847F44847F308380CF8A8ABC8889A987879586868085856C8484
5784834383822F8281CE8994BB8792A7868F93858D7F848B6B84895683874282852F8283
CD889EBA879BA685979285947E84916A838E56828B4282882F8184CC87A8B986A4A5859F
91849B7D839769829355828F41818B2F8186CB87B2B885ACA484A79083A27C839D688298
55819341818D2E8187CA86BBB785B5A384AF8F83A97C82A368829D54819641818F2E8088
C986C5B685BEA384B78F83AF7B82A86781A15481994180912E8088>
<C39575B193769F91778C8F77798D78668B7952897A40887C2D867EC2947FB0927E9E907E
8B8E7E788C7E658A7E52897E3F877F2D8580C19388AF91879D8F868A8D85778B84648983
5188823F86822D8481C09291AE908F9C8E8D898C8B768A8A6389885087863E85842D8483
BE919BAD8F989B8D95888B92758A8F62888D50868A3E85872C8384BD91A4AC8EA09A8C9C
878B997489956287914F868E3D84892C8385BD90ADAB8EA8998CA4868A9F74889A618796
4F85913D848C2C8386BC90B6AA8EB1988CAB868AA57388A061879A4F85943D848E2C8287
BB8FBFAA8DB9988BB28589AB7388A560869E4E85973D838F2C8288>
<B49F75A49C759399768196777093785E90794C8E7A3B8B7C2B887EB39E7DA39A7D92987D
81957D6F927D5D8F7E4C8D7E3B8A7F2A877FB29C86A299859197848094836E91835D8F82
4B8C823A89812A8681B19C8FA1998D90968B7F938A6D90885C8E874B8B853A88842A8682
B19B98A098958F95927E92906D908D5B8D8B4A8A893A88862A8583B09AA09F979D8F9499
7D92966C8F935B8C8F4A8A8C3987882A8585AF9AA99F97A58E94A07D919C6B8E985A8C94
49898F39878A2A8486AE99B19E96AC8D93A77C91A26B8E9D5A8C9749899239878C2A8486
AE99BA9E96B48D93AE7C90A76A8EA1598B9B49899439868E2A8487>
<A6A87497A47587A076779D7667997756967946927A378E7C28897EA6A77D96A37C879F7C
779C7C66987D56957D46917E368D7E28897FA5A68596A284869E83769B82669782559481
469081368C81288881A4A58D95A18B859E89759A88659687559386458F84368B83288782
A3A49594A192849D9074998E64968C54928A458F88368B85288783A3A49D93A09A849C97
74999464959154928E458E8B368A87288684A2A3A5939FA1839C9D739899639595549191
448D8D368A89298685A2A3AD929FA8839BA373989F63949A539195448D90368A8B298686
A1A3B5929FAF829BA97397A463949E539098448D9236898C298686>
<99B2748BAD757CA9756DA4765E9F774F9B7841967A33917C268B7E99B17C8AAC7C7CA87B
6DA37C5E9E7C4F9A7C40957D33907E268A7F98B0838AAB827BA7826CA2815E9E814F9981
409480338F80268A8198AF8B89AA897BA6886CA1875D9D854E9884409384338E83278982
97AE9289AA907AA58E6BA08C5D9C8A4E9788409387338E8527888396AE9A88A9977AA494
6BA0915C9B8F4E978C409289338D8727888496ADA188A89E79A49A6B9F975C9B934D968F
40918C328D8827888596ADA988A8A479A3A06A9F9B5C9A974D96933F918E328C8A278785
95ACB087A8AA79A3A56A9EA05B9A9B4D95953F9190328C8B278786>
<8DBC747FB67472B17564AB7656A67749A0783C9A7A2F947C248D7E8CBB7B7FB57B71B07B
64AA7B56A57B489F7C3B997D2F937E248C7F8CBA827FB48171AF8164A98056A480489E80
3B98802F9280258B808CB9897EB38871AE8663A88556A384489D833B97832F9182258A82
8BB8907EB28E70AD8C63A88A55A289489C873B96862F9084258A838BB7977EB29470AC92
63A78F55A18D489C8A3B96883090862589838BB79E7DB19B70AC9762A69455A191489B8E
3B958A308F872689848BB6A57DB1A070AB9C62A69855A094489B903B958D308F89268985
8AB6AB7DB0A670ABA162A59C55A098489A933B948E308E8A268885>
<81C67474BF7468B9755BB3754FAC7742A578379E7A2C967B228E7E81C57A74BF7A68B87A
5BB27A4FAB7B42A47C379D7D2C957E238D7F81C48174BD8068B7805BB17F4EAA7F42A37F
379C7F2C9480238C8081C38874BC8667B6855BB0844EA98342A283379B822C9382248C81
80C28E74BB8C67B58A5BAF894EA88742A186379A852D9383248B8280C19574BB9267B48F
5BAE8D4EA78B42A0893799872D9285248B8380C09B74BA9867B4945BAD914EA78F42A08C
3799892D9186258A8480C0A174B99D67B3995BAD954EA692429F8E37988B2D9188258A84
80BFA774B9A267B39E5BAC994EA595439F9137988D2D9188258A85>
][<E67673D17774BB7875A579768E7A77777B78617C794B7D7B347E7DE4747ECF757EB9767D
A3777D8D787D76797E607B7E4A7C7E347D7EE27389CD7488B87586A276858C7784757883
5F7A82497B81337D80E07294CB7391B6748FA0758D8A768B7477895E7987487A85337C82
DF709FCA729BB573989F749589759273778E5D788B487A88327C84DD70AAC971A5B372A1
9E739C8875987276945C789047798B327B85DC6FB4C870AFB271A99D73A487749F717599
5C779447798E327B87DB6FBFC770B9B171B29C72AB8673A571759E5B7797467890317A88
DB6EC9C66FC2B170BA9B72B38573AB7075A35B769B467892317A89>
<D67F72C37F73AF7F749A7F75857F76707F775B7F7946807A31807DD57D7CC27D7CAE7D7C
997D7C847E7C6F7E7D5A7E7D457F7E31807ED37B87C07C85AC7C84987C84837D836E7D82
597D82447E81307F80D27A91BF7A8FAB7B8D967B8B827C896D7C88587D86447D84307E82
D0799BBD7998A97A95957A92817B906C7B8D587C8A437D87307E83CF78A5BC79A2A8799E
94799A807A966B7B92577B8E437C8A2F7D85CE78B0BB78ABA778A69379A17F799C6A7A97
567B92427C8C2F7D86CD77BABA78B4A678AE9278A87E79A26A7A9C567A95427B8F2F7D87
CD77C4BA77BDA677B69178AF7D78A76979A0557A99427B912F7C88>
<C78771B68672A386739085747C847568847755837841837A2E827CC6867AB4857BA2847B
8F847B7B837C68837C54827D41827D2E827EC58484B38483A183838E82827A8282678281
5381814081802E8180C4838EB2828CA0828B8C81897981886681865381854080832D8082
C28298B181959E81938B809078808E65808B5280893F80862D8083C181A1B0819E9D809B
8A8097777F94647F90517F8D3F7F892D7F84C081ABAF80A79C80A2897F9E767F99647F95
517F903E7F8B2D7F86C080B4AE80AF9C7FAA897FA4767E9F637E99507E933E7F8D2D7F86
BF80BEAD7FB89B7FB1887EAB757EA4627E9D507E963E7E8F2D7F87>
<B99070A88E71978D72868B74738A756188764F87783D867A2B857CB88F79A88D79968C7A
858A7A73897B60877B4E867C3C857D2B847EB78D82A68C82958A818489817288805F8680
4D85803C84802B8380B68C8BA58B8A9489898388877187865F86854D84843B83832B8281
B58B95A48A9293889082878E70868C5E858A4C84883B83852B8283B48B9EA3899B928898
8186956F85915D848E4C838B3B82882B8184B38AA7A288A391879F80869B6E85975D8493
4B838E3B828A2B8185B289B0A288AB9187A67F85A16E849C5C83974B82913A828C2B8186
B289B8A188B39086AD7F85A76D84A15C839B4B82943A818D2B8187>
<AB996F9C97718C94727B92736B90755A8D76498B7838897A29867CAA98789B95788B9379
7B91796A8F7A598C7B488A7C38887D29867EA997819A94808A92807A9080698E7F588B7F
48897F38877F298580A89689999388899187798F86688D85588B84478983388682298481
A7959298929088908E788E8C688C8A578A88478886378684298482A7949A979298888F95
778D92678B8F56898D47878A378587298383A693A397919F878F9C778D98668B94568991
46878D378589298384A593AB9691A7868EA2768C9E668A9956889446869037848A298385
A593B39690AE868EA9768CA3658A9E55889846869237848C298286>
<9DA26F8F9F70809C71719973629674529376438F78348C7A26887C9DA1778F9E78809B78
71987961957952927A438E7B348B7D27887E9CA07F8E9D7F7F9A7F70977F61947F51917F
428D7F348A7F27877F9B9F878D9C867E99856F9684609384519083428D82348981278681
9B9E8F8C9B8D7E988C6F958A5F9288508F87428C853489842786829A9D978C9A957D9792
6E94905F918D508E8B418B88348886278583999D9F8B9A9C7D97996E94955E9192508E8F
418B8B348888278584999CA78B99A37C969F6D939A5E90964F8D92418A8E338789278485
999CAE8A99AA7C96A56D939F5E909A4F8D95418A9033878B278485>
<90AC6F83A87076A47168A0735A9C744B98763E9378308F7A248A7C90AB7683A77775A377
679F78599B794B977A3D927B308E7C25897E90AA7E82A67E75A27D679E7D599A7E4B967E
3D917E308D7F25887F8FA98582A58474A184669D835899824A95823D9181308C81258881
8FA88D81A48B74A08A669C885898874A94863D9084308C832587828EA79481A392739F90
659B8E57978B4A93893D8F87308B852687838EA69B80A399739F96659B935797904A938D
3D8E8A308A872686848DA6A280A29F739E9B659A975796944992903C8E8C308A88268684
8DA6A980A2A5729EA1649A9C5796974992933C8E8E308A89268685>
<84B66E78B16F6BAC715FA77252A274459D763897772D927A228C7C84B57678B0766BAB77
5EA67751A178459C7938967B2D917C238B7E84B47D78AF7C6BAA7C5EA57C51A07D459B7D
38957E2D907E238A7F83B28477AE836BA9825EA481519F81449A813894812D8F80248980
83B18B77AD896AA8885DA386519E854499843894832D8E8224888183B19177AC8F6AA78D
5DA28B509D8A4498883893862D8D8424888283B09876AB956AA7935DA290509D8D44978B
3892882E8D8624888382B09E76AB9B6AA6985DA194509C9144978E38928A2E8C87258784
82AFA576ABA169A69D5DA099509B9444969038918C2E8C88258784>
<79BF6E6DBA6F61B57056AF724AA9733EA275349B7729947A218D7C79BF756DB97562B376
56AE774AA7783FA179349A7A2A937C218C7E79BE7C6DB87B61B27B56AC7B4AA67C3FA07C
34997D2A927E228B7F79BC826DB78161B18156AB804AA5803F9F803498802A9180228A80
78BB886DB68761B08655AA854AA4843F9E833497822B9082238A8178BA8F6DB58D61AF8B
55A9894AA3883F9D863496852B908323898278BA956DB49261AE9055A88E4AA28B3F9C89
3496872B8F8523898378B99B6DB49861AE9555A8924AA28F3F9C8C3495892B8F86238883
78B9A16DB39D61AD9955A7954AA1923F9B8E34958A2B8E87248884>
][<DA716DC6736EB174709D75718777737278755C7977477B79327D7BD86F78C47178B07279
9B747986757A71777A5B787B467A7C327C7DD66E83C36F82AF71819A7281857480707680
5B778046797F317B7FD46C8DC16E8CAD6F8A9871888473876F75865A7684457883317B81
D36B98BF6D95AB6E9397709082728D6D748B597689457886317A83D26AA2BE6C9FAA6D9B
966F988171946D739058758D447789307A84D069ADBD6BA8A96DA4956E9F80709A6C7296
58749144778B307986D069B7BC6AB2A86CAC946EA67F70A06B729B57749443768E307987
CF68C1BC6ABBA86CB4936DAD7F6FA66A719F567498437690307988>
<CB7A6CB97A6EA67B6F937B717F7C736A7C74567D76437E792F7F7BCA7876B87877A57977
927A787E7A796A7B7A567C7B427D7C2F7E7DC87680B67780A4788090787F7C797F697A7F
557B7F417C7F2F7E7FC7758BB57589A276888F77877B7886687984547A83417B822E7D81
C57395B37492A175908E768E7A778C67788A537987407B852E7C82C4729FB2739CA07498
8C759579769266778F53798B407A882E7C84C372A9B173A59F73A08C749C787698657794
52788F407A8A2E7C85C271B2B072AD9E73A88B74A378759E6576985278933F798D2E7B86
C271BCB072B69D72B08A73A97774A364769D5177963F798F2E7B87>
<BD826BAC826D9B816F8981707681726381745181763E81782D817BBC8075AB80769A8076
88807775807863807950807A3E807C2C817DBA7F7EAA7F7E997E7E877E7E747E7E627F7E
4F7F7E3D7F7F2C807FB97D88A97D87977D86857D85737D84617E834F7E823D7E822C7F80
B87C91A77C90967C8E847C8C727C8A607D884E7D863C7E842C7F82B77B9BA67B98957B96
837B93717C905F7C8D4E7D8A3C7D872C7E83B67AA4A57AA1947A9D827B99717B965F7B92
4D7C8E3C7D892C7E84B57AAEA57AA9937AA5827AA0707A9B5E7B964D7C913C7C8B2B7D85
B579B7A47AB1937AAC817AA66F7AA05E7B9A4C7B943B7C8D2B7D86>
<AF8B6AA0896C90886E7F87706E87725C86744B85763A84782A837BAE89739F88748F8775
7E86766D85775C84794A847A3A837B2A837DAD887D9E877D8E867D7D857D6C847D5B837D
4A837E39827E2A827FAC86869D85858D84847C84836B83835A82824982823981812A8180
AB858E9C848D8C838B7B838A6A82885982874981853981842A8182AA84979B83958B8293
7A829069818E59818B4880893880862A8083A983A09A839D8A829A798197698193588090
48808C388088298084A883A99982A58981A179819C688098588094487F8F387F8A297F85
A883B19982AD8981A87880A268809D577F97477F92387F8C297F86>
<A1946A93916C85906E758E6F658C71558A7345897636877827857BA19273939074848E75
748D76658B7755897845887936867B27857DA0917B928F7B838D7C748B7C648A7C54887D
44877D35857E27847E9F8F83918E83828C82738A82638981538781448681358480278380
9E8E8C908C8B818B897289886288875386854485843584832882819D8D948F8C92808A90
71888E62878C52868A4384873583852882829D8D9C8E8B9A80899770889461869152858E
43848A3583872882839C8CA48E8BA17F899D70879961869551859143838D358289288184
9C8CAC8D8AA87F88A46F879F60859A51849542839034828A288185>
<949D6A879A6B7A976D6B956F5D92714E9073408D76328A7825877B949B72879973799674
6B93755C91764E8E783F8C7932897B25867D939A7A86977A78957A6A927B5C907B4D8D7C
3F8B7D32887D25867E9299828596817894816A91805B8F804D8C803F8A80328780268580
9298898595887793876990865B8E854C8B843F898331878226848191979184948F76928E
688F8C5A8D8A4C8B883E8886318684268482919699839496769194688F915A8C8E4C8A8C
3E88893185862683839096A083939D75919A678E96598C934B8A8F3E878B318588268384
9095A88393A47590A0678E9B598B974B89923E878E318589268384>
<88A6697CA26B6F9F6D629C6F5598714795733A91752E8D7823897B88A5717CA1726F9E73
629A745497764793773A90792E8C7B23887D87A3787BA0796E9D7961997A54967A47927B
3A8F7C2E8B7D24877E87A2807A9F806E9B7F61987F54957F46917F3A8E7F2E8A7F248680
86A1877A9E866D9A856097845394844690833A8D822E898124868185A08E799D8D6D9A8B
60968A5393884690863A8C852E898324858285A095799C936C99915F968F52928C468F8A
3A8B872E8885248583859F9C799C9A6C98975F9593529290458E8D3A8B8A2E8887258483
859FA3789BA06C989C5F9598529194458E90398B8C2E8788258484>
<7CAF6971AB6B65A76C59A36E4D9E71419A733595752B9078218B7B7CAE7071AA7165A672
59A2744D9D754198773694782B8F7A22897D7CAD7770A97865A57859A0794D9C7941977A
36927B2B8E7D22897E7BAC7E70A87E64A37E589F7E4C9B7E41967E36917E2B8D7F22887F
7BAB8570A78464A283589E834C9A824095823691812B8C812387807BAA8B6FA68A64A289
589D884C99864094853590842B8B832387817AA9926FA59063A18E589D8C4C988A409488
368F862C8B842386827AA9986FA59663A093579C904C988E40938B358F882C8A85238683
7AA89F6FA49C63A098579B954B979140938D358E8A2C8A87238583>
<71B96866B46A5BB06C50AA6E46A5703B9F73319975279278208C7B71B86F66B3705BAE71
51A97346A3743B9E7631977828917A208B7D71B77666B2765BAD7750A87846A2793B9C7A
31967B28907C218A7E71B67C66B17C5BAC7C50A67C46A17D3B9B7D31957E288F7E21897F
70B48366B0825BAB8150A58145A0813B9A80319480298E8022888070B38966AF885BAA87
50A485459F843B9984329383298D8222888170B38F66AE8D5BA98B50A38A459E883B9886
329385298D8322878270B29566AD935BA89050A38E459D8B3B9889329287298C85228783
70B29A66AD985BA89550A291459D8E3B978B329288298C86228783>
][<CE6D67BB6E69A8706B94726D80746F6C7572587774447977317C7ACC6A71BA6C72A76E74
9370757F72766B747757767943787A307B7CCA687CB86A7CA56C7C926E7C7E717C6A737D
56757D43777D307A7EC86687B66986A46B85906D847D6F83697182557482427781307980
C76591B5678FA2698D8F6C8B7B6E896870885573864176842F7982C6649BB36698A16896
8E6B937A6D9067708D54728A4175872F7883C563A5B365A2A0679E8D6A9A7A6C96666F92
53728E4175892F7885C462AFB264AB9F67A68C69A1796C9C666E9753719240748C2F7886
C362B9B164B49E66AE8B68A8786BA1656E9B52719540748E2F7787>
<C07566AF76689D776B8B786D78796F657A71527B74407C772E7E7ABE7270AE74719C7573
8A7674777775647877517A783F7B7A2D7D7CBD707AAC727A9B737B89747B76767C63777C
51797D3E7A7D2D7C7EBB6F84AB70839971838773827574826276815078813E7A802D7C80
BA6D8EA96F8C98708B8672897473886175864F77853E79832D7B81B96C98A86E95976F93
85719073728E61748B4F76893D78862D7B83B86BA1A76D9E966E9B847097727194607390
4E758C3D78882C7A84B76AABA76CA7956DA2836F9E7171995F73954E75903D778B2C7A85
B76AB4A66CAF956DAA836EA471709F5F72994D74933C778D2C7986>
<B27D65A37D68937D6A827D6C707E6F5E7E714D7F743B7F772B807AB17B6FA27B70927B72
817C736F7C755D7D764C7D783B7E7A2B7F7CB07978A17979907A79807A7A6E7B7B5D7B7B
4B7C7C3B7D7D2B7F7EAF77829F78828F78817E79816D7A815C7A804B7B803A7C802B7E7F
AD768B9E768A8E77897D78886C78865B79854A7A843A7C822A7D81AC75949D75928D7690
7C778E6B788C5A798A4A7A873A7B852A7D82AB749E9C749B8C75987B76956B77925A788E
49798B397B872A7C84AB73A69B74A38B749F7B759B6A769759779349798E397A892A7C85
AA72AF9B73AB8B74A67A75A169769C597796497891397A8B2A7C85>
<A5856597846788846A78836C68836E57837147827437827628827AA4836E96836F878271
77827367827457817647817837817928817CA3817795817886817876807966807A56807B
46807B37807C28817EA28080947F80857F80757F7F657F7F557F7F467F7F367F7F28807F
A17E88937E88847E87747E86657E85557E84457E83367F82287F81A07D91927D90837D8E
747D8C647D8A547D88457E86367E84287F829F7C9A917C97827C95737C92637C8F547D8C
457D8A367E86287E839F7CA2907C9F827C9C727C98637C94537C90447C8C367D88287E84
9E7BAA907BA7817BA2727B9E627B99537C94447C8F357D8A287E85>
<988E658B8C677D8B696F8A6C60896E51877142867333857626847A978C6D8A8B6F7D8970
6E88725F877350867541857733847926837C978A758989767C88776D87785E86794F857A
41847B33837C26837D96897E88887E7B877E6C867E5E857E4F847E41837E33827F26827F
9587868886857A85856C84845D84834F838340828233828126818094868E87858D79848B
6B838A5C83884E82874081853381832681819385968685947884926A838F5C828D4E818B
40818832808526808393859E86849B7883986A82955B81924D818E3F808B328087268083
9284A68584A277839E69829A5B81964D80923F808D328089268084>
<8C966480946773926965906B588E6E4A8C713C8A732F887624867A8B956C7F936E729170
658F71578D73498B753C89772F877924857C8A93747E9175728F76648E77578C78498A79
3C887A2F867C24847D8A927C7D907C718E7C648C7D568B7D49897D3C877E2F857E24847F
8991837D8F83708D83638B825689824888813B86812F8480248380888F8B7C8E8A6F8C89
628A885589864887853B85842F8483258281888F937C8D916F8B8F62898D55888B488689
3B85872F8384258282878E9A7B8C986E8B9561899254878F47868C3B84892F8386258183
878EA17B8C9E6E8A9B61889754879347858F3B848B2F8287258184>
<809F64759D66699A695C976B50946E439170378E732C8B7622887A7F9E6C749B6D68996F
5C9671509372439074378D772C8A7922877C7F9D73739A746897755C94764F9277438F78
378C7A2C897B22867D7E9B7A73987A67967B5B937B4F907C438E7C378B7D2C887E23857F
7E9A817297816795815B92804E8F80428D80378A802C87802384807D9988729688669487
5A91864E8E85428C843789832C86822384817D988F71968E66938C5A908B4E8E89428B87
3788852C86832383827C989671959465929259908F4D8D8D428A8A3788882C8585238382
7C979D71959A659297598F944D8C90428A8D37878A2C8586248383>
<74A9646AA5665FA268549E6B489A6D3D9670339273298E7620897A74A86B6AA46C5FA16E
549D704899723D9574339176298D7920887C74A67269A3735E9F74539B754898763D9478
339079298B7B21877D73A57869A1795E9E79539A7A48967B3D927B338E7C298A7D21877E
73A37F68A07F5E9C7F53997F48957F3D917F338E7F298A7F22867F72A286689F855D9C84
5298844794833D9082338D822A898122858172A28C689E8B5D9B8A5297884793873D9085
338C842A888322858172A192689E915D9A8F52968C47938A3C8F88338B862A8884228482
72A198689D965D9A9352969047928D3C8E8B338B882A8785228483>
<6AB26360AE6556AA684BA56A41A16D379B702E96732690761F8B7A69B16A5FAD6B56A96D
4BA46F419F71389A732E9476268F791F8A7B69B0705FAC7155A7724BA374419E75389877
2F9379268E7B20897D69AE775FAA7755A6784BA178419C7938977A2F927C278D7D20887E
69AD7D5FA97D55A57D4BA07D419B7D38967E2F917E278C7F20877F68AC835FA88255A382
4B9F81419A813895812F9081278B8021868068AB895FA78855A3874B9E86419985389484
2F8F83278A8221868168AB8F5FA68D55A28C4B9D8A4198883894862F8F85278A83218582
68AA945FA69255A1904B9D8D41988B3893892F8E86288A84218582>
][<C26860B16A639F6C668C6E6979706C66736F5375724178752F7B79C0656BAF676D9D6A6F
8B6C70786E726571745374764076782F7A7BBE6276AD65769C68778A6A78776D79646F7A
52727A40757C2E797DBD6080AC63809A667F88687F766B7F636E7F51717F3F757F2E787F
BB5E8AAA6189996488876786756A85626D845070833F74822E7881BA5D94A96092986390
86668E74698C626C89506F873E73852E7782B95C9EA85F9B976298856595736892616B8E
4F6F8B3E72882E7684B85BA8A75EA49661A084649C726797606A934F6E8F3E728A2E7685
B75AB1A75DAC9560A78463A272669D606A974E6E923D728C2D7686>
<B56F60A5716395726683746972756B60776E4E79713C7B752C7D79B36D6AA46E6C94706E
8272707173725F75744D77763C79782C7C7BB26A74A26C75926E768170777072785E7479
4D767A3C787B2C7B7DB0687EA16A7E916C7E806E7E6E707E5D727E4C757E3B777E2C7A7F
AF67879F69878F6B867F6D856D6F845C71834B74823B77812B7A80AE65919E678F8E698E
7D6C8C6D6E8A5B70884B73863B76842B7982AD649A9D66988D68957D6B926C6D905B708D
4A728A3A75872B7983AC63A49D65A08D689D7C6A996B6C955A6F914A728D3A75892B7884
AC62AD9C65A88C67A47B699F6B6C9A5A6E954A71903A758B2B7885>
<A877609A78638A78667A79686A7A6B597B6E497C71387E75297F79A7756999766B89766D
79776F697871587A73487B75387C78297E7BA67272977374887575787676687777587878
487A7A387B7B297D7DA4707C96727C87737C77747D67757D57777D47797E387A7E297D7E
A36F85957084867184767383667483567682467881377A81297C80A26D8E946F8D85708B
75728A657388557587467785377983297B81A16C97936E95846F9274719065728D55748B
467688377886297B83A06B9F926D9D836E9974709664719354738F45768B377888297B84
A06BA8926CA4836EA0736F9C64719754739345758E367889297A85>
<9B7F5F8E7F63807F65717F68627F6B53806E4380713581752781799A7D688D7D6A7F7D6D
717D6F617E71527E73437F75347F7827807B997B718C7B727E7B74707C75607C76517D78
427D79347E7B277F7C98797A8B797A7D7A7B6F7A7B607B7C517C7C427C7D347D7D277F7E
9777828A78827C78826E79825F7A81507A81427B80347D80277E8096768B89768A7B7789
6D78885E7886507985417B84347C82277D819575938875927A76906C778E5E788B4F7989
417A87337B85277D8295749B8875997A75966C76935D77904F788D41798A337B87277D83
9473A38774A079759D6B75995D76954E789140798C337A88277C84>
<8F875F8387627686656885685A856B4C846E3E84713183752583798E856882856A75846C
68846E5A83704C83733E837531827825827B8D83708183717482736782745982754B8177
3D817931817A25817C8C817880817973817966817A58807B4A807B3D807C30807D25817E
8B80807F8080727F80657F80587F804A7F803D7F80307F7F25807F8B7F887F7E87727E87
657E86577E854A7E843D7E83307F82257F818A7E907E7E8F717D8D647D8B577D89497D88
3C7E86307E84257F82897D977D7D96717D93637C91567D8E497D8B3C7D88307E86257E83
897C9F7D7C9C707C99637C96567C92497C8E3C7D8B307D87257E83>
<83905F788E626C8D655F8C68528A6B46896E3988712D8675228579828E67778D696B8B6B
5F8A6D5289704588723986752D857823847B828C6F768B706B8A725E8973528775458676
3985782D847A23837C818A767689776A88785E877951867A44857A39847B2D837D23827E
80897E75887E69877E5D867E51857E44847E38837F2D827F23827F7F8885748785688684
5C85845084834483823882822D82812481807F878C74868B68858A5C8489508387448286
3881842D81832481817E86947385926884905B838E4F828B4381893881872D8084248082
7E859A7385986784955B83924F828F43818C3880892D8086248083>
<78995F6D97626295655792674B906A3F8E6E348B712A89752187797797666D956862936B
57916D4B8F6F3F8C72348A742A887721867B77956D6C936F619170568F724B8D743F8B76
3489782A877A21857C7694756B9275619076558E774A8C783F8A7A34887B2A867C22847E
75927C6B907C608E7C558C7D4A8B7D3F897D34877E2A857E22837F7591826A8F82608D82
548B82498A813E88813486812A84802283807490896A8E895F8C88548B864989853E8784
3485832A8482228281748F906A8E8F5F8C8D548A8B4988893E86873485852A8384228282
738F96698D945F8B9254898F49878D3E868A3484872A8385238182>
<6DA25E639F61599C644F996744966A3A936D308F71278C751F88796CA065639E67599B6A
4E986C44946F3A9171308E74278A771F877B6C9F6C629C6E58996F4E96714493733A9075
308C7727897A20867C6B9D73629A745897754E9576439277398E79308B7A27887C20857D
6B9B7961997A57967A4D937B43907B398D7C308A7D28877E21857F6A9A80619880579580
4D9280438F7F398C7F3089802887802184806A99866197865794854D9184438E83398B83
3089822886812183816A998C60968B56938A4C9088438E87398B85308884288583218381
6A989260969156938F4C908C438D8A398A88308786288584218382>
<62AB5E59A86050A46347A0663D9C6A34986D2C9371248E751D8A7962AA6459A66650A369
469F6B3D9A6E3496712C9174248D771E897A61A86B58A56C4FA16E469D703D9972349474
2C9077258C791F877C61A67158A3724F9F73469C753D97763493782C8F7A258B7B1F877D
61A57758A2784F9E78469A793D967A34927B2C8E7C258A7D1F867E60A47D58A07D4F9D7D
46997E3D957E34917E2C8D7F25897F20857F60A383589F834F9C824698823D9481349081
2D8C8126888120858060A289589F884F9B874697863D9385348F842D8B83268882208481
60A18E579E8D4F9A8B4697893D9388348F862D8B84268783208482>
][<B7625BA6655E966861846A65736D6861706B4F736F3E76732D7A77B55F65A5626794656A
83686C726B6E606E714E71743D75762D797AB35C6FA35F719362728266737069755F6C76
4E70783D737A2D787CB15A79A15D7A91607A80647B6F677B5E6B7C4D6E7C3C727D2D777E
B05783A05B83905E827F62826E65815D69814C6D803C72802D7680AE558D9F598C8F5D8A
7E60896D64875C68864C6C853C71832D7681AD54979E58958E5B927D5F906C638D5C678B
4B6C883B70862D7583AC53A09D579D8D5A9A7D5E966C62935B668F4B6B8C3B70882C7584
AC52A99C56A58D5AA17C5D9C6B61985B66944A6A8F3B6F8A2C7485>
<AA6A5A9B6C5E8C6E617C6F656B72685A746B4A766F3A79732B7C78A967649A69678B6B69
7B6D6C6A6F6E5A72714975733978762A7B7AA7646E99666F8A69717A6B73696E74597076
49737839767A2A7A7CA66177976478886779786979686C7A586F7B48727C39757D2A797E
A45F81966281876581776780676A80576E804771803875802A797FA35D8A956089866388
766687666986566C854770843874822A7881A25C93945F9285629075658E66688B566C89
476F873873852A7782A15B9C935E9A846197756494656791556B8E466F8A3873872A7784
A15AA5935DA284609E74639A656796556A91466E8D3772892A7784>
<9E715A91725E82746173756464766854786B457A6F367C73287E789D6E638F7066817169
72736B63746E537670447873357B76287D7A9B6C6D8E6D6E806F70717172627373537575
447777357979287C7C9A69768D6B777F6D78706F7861717952737A43767B35787C287B7D
99677F8C697F7E6B7F6F6D7F60707F51727F43757F35787F287B7F9865878B68877D6A86
6E6C85606E84517183427483357782287A819764908A668F7C698D6D6B8B5F6D8A507088
427386347684287A829663998965967B68946D6A915E6C8E506F8C427289347686287983
9662A189659E7B679A6C69975E6C934F6F8F42728C347588287984>
<92795A86795E797A616B7B645C7C684E7C6B407D6F327F73268078917663857766787868
6A796B5C7A6D4D7B703F7C73327D76267F7A90746B84756D77766F6977715B78734D7975
3F7B77327C79267E7C8F71748272757574766875775A76784C78793F797B327B7C267D7D
8E6F7C81717D74727D67737D59757E4C777E3E787E317A7E267D7F8D6E85806F84747184
6672835974834B75823E7781317A81267C808C6C8D806E8C736F8B6671895873884B7586
3E7785317983267C818B6B957F6D93726E9165708F58728C4A748A3D7687317985267B82
8B6B9D7F6C9A726E97656F945771914A738D3D768A317887267B83>
<86815A7B815E6F816162816455816848816B3B816F2E8273238278857E627A7E656E7F68
617F6A547F6D477F703A80732E807624817A847C6A797C6C6D7D6E617D70547D72477E74
3A7E762E7F7924807B837A72787A746C7B75607B76537C77467C793A7D7A2E7E7B247F7D
82787A77787B6B797B5F7A7C527A7C467B7D3A7C7D2E7D7E247F7F8276827677826B7882
5E7881527981457A81397B802E7D80247E8081758A7676896A76885E7787517886457985
397A832E7C82247E8180749175759069768E5D768C51778A457988397A862E7B84247D82
8073987574966975945D769151778E44788B3979882E7B85247D83>
<7B895A70885D6588615A87644D866841866B36856F2B85732184787A8762708664658667
59856A4D856D4184703684732B837622837A7985696F846B64846D58836F4D8371418374
3682762B827922827B7882716E82726382735882754C81764081783581792B817B22817D
7881786D807962807A57807A4C807B40807C35807D2B807D22807E777F7F6C7F80627F80
567F804B7F7F407F7F357F7F2B7F7F238080767E876C7E86617E85567E854B7E84407E83
357E822B7F81237F81767D8E6B7D8D617D8B567D894A7D883F7D86357E852B7E83237F81
757C946B7C93607C90557C8E4A7C8C3F7D89357D872B7E84237F82>
<70925A66905D5C8F60518D64468C673C8A6B31896F2887731F86786F9061668E645C8D66
518C69468A6C3B896F31877228867620857A6F8D68658C6A5B8B6C508A6E4688713B8773
31867628857820847B6E8B6F648A715A89725088744587753B867731857928847B21837D
6D8A766489775A88784F877945867A3B857B31847C28837D21827E6C887D63877D59867D
4F857E45847E3B837E31837E28827F21817F6C87836286835985834E84824483823A8381
3182812981812181806C868A6285895884884E83874483863A8284318183298182218081
6B859062858F58848D4E838B4482893A8187318185298083228082>
<659B595D985D5396604A9463409267368F6B2D8C6F258A731E87786599605C9763539566
49926840906B368D6F2D8B722588761E867A6497675B956952936B49906D3F8E70368C72
2D89752587781F857B64956D5B936F529171498F723F8C74368A762D887826867A1F847D
6393745A9175518F76488D773F8B7836897A2D877B26857C20837E63917A5A907B518E7B
488C7C3F8A7C36887D2E867E26847E20837F6290805A8F80518D80478B803E8980368780
2E8580268480208280628F86598E86508C85478A843E88833586832D8582268381208281
628F8C598D8B508B8A4789883E87873686852E8484268383208181>
<5BA45953A15C4B9E5F429B6339976731946B29906F228C731D89785AA25F539F624A9C65
42996839966B31926E298E72238B761D887A5AA065529D674A9A6A41976C39946F319072
2A8D752389781E867B5A9E6B529B6D49996F419571399273318F752A8B7823887A1E857C
599C71519A73499774419475399177318E792A8A7A24877C1E857E599B77519878499679
41937A398F7B318C7C2A897D24867E1F847F599A7D51977E49957E41927E398E7E318B7E
2A887F24867F1F8380589983519683499482419182398E81318B812A88812485811F8380
589888509688499387409086398D84318A832A87832485821F8381>
][<AC5D559D60598D635D7D66616C69655B6C694B706D3B74712C7976AA595F9B5C628C5F65
7C63686B676B5B6A6E4A6E713A73752C7779A8556999596B8A5D6D7A606F6A64715A6873
4A6D763A72782C777BA65273985674895A75795E76696277596779496B7A3A707B2C767D
A54F7D96547D87587D785C7D68607D58657E486A7E396F7E2C757FA34D86955186865685
775A84675F83576483486982396F812C7481A24B9094508E85548D76598B665E89576388
486886396E842C7482A14999934E97855394755891665D8F56628C476889396D862C7483
A148A2934D9E84529B755797665C9456619047678C396D882C7384>
<A0645592665984685D756B61656E6555716946746D377771297B779F605F916362836565
746868646B6B556F6E457271377675297A799D5C688F606A81636C72666E636971546D73
45707536757829797B9B59718E5D73806074716475626777536B78446F7936737B29787D
9A577B8D5A7B7F5E7C70627C61657C526A7D446E7D36737E29777F9955848B58847E5C83
6F6083616482526882436D8136728129778098538D8A578C7D5B8A6E5F89606388516786
436C853671832976829751968A55947C59916E5D8F5F628D51668A436B88357185297683
96509E89549B7C58986D5D955F619150668E436B8B357087297684>
<956B55886D597B6E5D6D70615E73654F756941776D337A71277D7793675E8769617A6C64
6C6E675D706A4F736E417671337975277C7992646786676979696C6B6B6E5C6E704E7172
407475337778277B7B9061708464717767736A69745C6C764D6F7740737933767B277A7D
8F5F7983627976647A68677B5B6B7B4D6E7C3F727D33757D277A7E8E5C81826081756381
6866815A69814C6D803F71803275802779808D5B8A815E897461886764875968864C6C85
3F70843274822778818C5992805D9174608F66638D59678B4B6B893F6F87327384277882
8C589A805C98735F9566629258668F4B6A8C3E6E89327386277883>
<8972557E735971755D6476615778654979693C7B6D307D72247F77886F5E7D7061707264
64746756756A49776D3C7971307C75257E79876C667B6E686F6F6B63716D567370487572
3C78752F7A78257D7B86696E7A6B706E6D72626F735571754874773B76782F797A257C7D
8467777969786D6B79616D7954707A47727B3B757C2F787D257C7E83657F78677F6C697F
606C7F536E7F47717F3B747F2F787F257B808363877765866C68865F6A85536D84467083
3B73822F7782257A8182618F77648D6B678C5F698A526C89466F873A73852F7683257A82
8260967663946B66925E698F526C8D466F8A3A72882F7685257A83>
<7E7A55747B59687B5D5C7C61507D65437E69377F6D2C80722281777D775D737860677964
5C7A674F7B6A437C6D377D712C7F752380797C746572756866766A5B776C4F796F437A72
377C742C7D77237F7B7B716D70736F6574715A75724E7774427876377A782C7C7A237E7C
7A6F756F70766472775974784E757942777A37797B2C7B7C237E7E796D7C6F6F7D64707D
58727D4D747E41767E36787E2C7A7F237D7F786B846E6D84636F835871834C7382417582
3677812C7A81237C80786A8B6D6C8A636E895770884C72864174853677842C7983247C81
7769926D6B91626D8F576F8D4C718A4073883676862C7984247C82>
<7382556982595F825D5482614982653E826933826D298372208377727F5D697F605E8063
54806648806A3D806D338171298175218279717C64687D675E7D69537E6C487E6E3D7F71
337F7429807721817B707A6C677A6D5D7B6F527C71477C733D7D75337E77297F7A21807C
6F77736678745C7975517A76477B783C7C79327D7B297E7C227F7E6F767A65777B5B777B
51787C46797C3C7B7D327C7D297D7E227F7F6E74816575815B76815077814678803C7A80
327B80297D80227E806D73886474875A75865076854677843C7983327A83297C82227E81
6D728E64738D5A748C50758A4577883B7886327A85297B83227D82>
<698A55608A5956895D4C88604288643887692F866D2685721F857768885C5F875F568762
4C866642856938856D2F84712684751F84796785635E85665584684B846B41846E388371
2F83742683771F837B66826A5D826C54826E4B82704182723782742F827727827920827C
6580715D80725380744A80754180773780782F807A27817C20817D657E775C7F78537F79
4A7F7A407F7B377F7C2F7F7D27807E20807F647D7E5B7D7E527E7E497E7F407E7F377E7F
2F7E7F277F7F208080647C845B7C84527C84497D83407D82377D822F7E81277E81217F80
637B8A5B7B8A527C89497C87407C86377D852F7D83277E82217F81>
<5F93555692584E905C458F603C8D64338B692B8A6D2388721D87775E905B568F5E4D8E62
448C653C8B6933896C2B88702486751E85795D8E62558D644D8C67448A6A3B896D338870
2B86732485771E847A5C8B68548B6A4C8A6C44886F3B87713386742B85762484791E837C
5C896F5489704B88724387733B86753285772B847924837B1F827D5B88755387764B8677
4385783A847932837A2B837C24827D1F827E5B867B53867C4B857C42847D3A837D32827E
2B827E25817F1F817F5A85815284814A84814283813A82803282802B81802581801F8180
5A84875284864A83864282843A81843281832B8082258081208081>
<559C544D9A5746985B3E955F3692642E9068278D6D218A721C8877549A5A4D985D459661
3D93643690682E8E6C278B702189751C87795397604C95634593663D9169358F6C2E8C70
288A732287771D857A5395664B936944916B3D8F6D358D702E8A732888762286791D847C
52936C4B916E448F703C8D72358B742E897628877822857B1E847D5291724B8F74438E75
3C8C76358A782E887928867B22847D1E837E518F784A8E79438D7A3C8B7A35897B2E877C
28857D23837E1E827F518E7E4A8D7E438C7E3C8A7E35887E2E867F28847F23837F1E8280
518D834A8C83438B823C89823587812E85812884812382811F8180>
][<A2564F935A54855D5876615D666561566966476E6B3872702B7876A0515992565D835A60
745E6465626756676B466C6F3871732B76789E4D63905266825668735B6B645F6E556570
466A733870772B767A9C496D8E4E6F805370725872635D74546376456878376E7A2B757C
9A46778D4B777F5078715679625B7A53617B45677C376D7D2B747E9943808C48807E4E80
705480615980535F80446680376D802B73809740898B46887D4C876F5286615885525E84
446583376C822B7381963E928A44907D4A8E6F508C60578B525D89446487376B852B7283
963C9B8943987C49956E4F9260568F525C8D44638A376B872B7284>
<975D508A60547C63586E665D5F6A61516D6642716B347570287A76955859885C5D7B5F60
6D63645F6767506B6B426F6F347473287978935462875865795C686C606A5D646D4F6970
416E7334737628787A91516C85556D78596F6A5D715C62734E6775416C7734717A28777C
904D75845276775677695B785C60794E657A406B7B34707C28767E8F4A7E824F7E76547E
68597E5B5E7E4D647F406A7F34707F2876808E4887824D867552856857845A5D844D6383
406982336F822975818D468F814B8E74518C67568A5A5C894C6287406886336E84297582
8C4497804A95744F926755905A5B8D4C618B3F6788336E86297483>
<8C6450806654736959666C5D596E614B71663E756B317870267C768A60597F635C726560
656864586C674A6F6B3D736F317773267B78895C627D5F6471626764666A57696D4A6D70
3D7173317676267A7A87586A7C5C6C705F6E636370566772496B753C707731747926797C
8655737A59746E5D75626177556578486A793C6E7B30737C26797E85527C79567C6E5B7C
615F7D55637D48687E3C6D7E30737F26787F8450847954836D5983615D83546282486782
3C6C81307281267781834E8C78528B6C5789605C885461874766863B6C84307183267782
824C937751926C5690605B8D53608B4765893B6B87307185277783>
<826B50766D556B6F595E715D52736245766639786B2D7B70237E7680675975695C696C60
5D6E6351716745746B39776F2D7A73247D787E63617466646869675D6B69506E6C44726F
3875732D7976247C7A7D606972636B67666D5C696F506C724470743873762D7779247B7C
7C5D717160736663745B67754F6A77436E7838727A2D767C247B7D7B5A79705E7A65617B
5A657B4E697C436D7C38717D2D767E247A7F7A58816F5C81655F815963814E6780426C80
3870802D75802479807956896F5A88645E875962864D6685426B84376F832D7482257981
7954906E598E645D8D58618B4D6589426A87376F852D7484257982>
<7773516D745562755956775D4B78623F7A66347C6B2A7E70218176756F586B705C617260
5674634A76673F786B347A6F2A7D73227F78746B606A6D63606F665571694A746C3F766F
3479722A7B76227E7A736868696A6A5F6D6C546F6F4972713E74733477762A7A79227D7C
72656F6867715E6A73536D744970763E73773476792A797B227D7D7162776765785D6879
536B7A486E7A3E717B34757C2A787D237C7F70607E66637F5C667F52697F486D7F3D707F
34747F2A787F237B806F5E856662855C6584526884476C833D6F823373822A7781237B81
6F5D8C65608B5B648A516788476B873D6F853373842A7783237B81>
<6C7A51637B55597C594F7D5D447E623A7F6630806B2781711F83766B775862785C58795F
4E7A63447B673A7D6B307E6F2780732081786A735F6175625776654D776843796B397B6F
307C72277E7620807A69706660726956736B4D756E437770397973307B76277D78207F7C
686D6E5F6F6F5671714C7373427575397777307A79287C7B217E7D676B755E6D76556F77
4B717842747939767A30797C287B7D217E7E66697C5D6B7C546D7C4B707D42727D38757E
30787E287A7F217D7F6567825D6A82546C824B6F81417181387481307781287A80217D80
6565895C6888536B874A6E864170853873842F7683287982217C81>
<6282515A825551835948835D3E83623583662C836B2484711E8476617F57597F5B50805F
4780623E816635816A2C826F2582731E8378607C5E587C614F7D64467E683D7E6B347F6E
2C80722581761F827A5F7965577A674E7B6A467B6D3D7C6F347D722C7E752580781F817B
5E766C56776E4E78704579713C7B74347C762C7D78257F7A1F807D5D73725575744D7675
4478763C7978347A792C7C7B257E7C207F7E5D717955737A4C757A44767B3C787C34797C
2C7B7D257D7E207F7F5C707F54727F4C737F44757F3C777F33787F2C7A80257C80207E80
5C6E855470854C72844474833B76833378822C7A82257C81207E81>
<588B50518A5449895841895D38886130876628876B2286711C867657875750875A48875E
40866238866630856A29856F2285731D847856845D4F84604784633F846737846A30836E
2983722283761D837A5581634E82664782693F826B37826E3082712982752382781E827B
557F6A4D7F6C467F6E3E80703780722F807529807723817A1E817D547C704D7D71457E73
3E7E75377E762F7F78297F7A23807C1E817E537A764C7B77457C783E7D79367D7A2F7E7B
297E7C237F7E1F807F53787C4C7A7C457B7D3D7B7D367C7D2F7D7E297E7F237F7F1F7F80
5377824C7882447A813D7A81367B812F7C80297D80237E801F7F80>
<4F934F4892534191583A8F5C338D612C8C66258A6B1F88711B87764D9055478F59408E5D
398D61328B652B8A6A25886F2087731C86784D8D5B468D5F408C62398A663289692B886D
2586722085761C857A4C8B61468A643F896738886A32876D2B86712685742184781D837B
4C886745886A3E876C38866F3185712B847426847721837A1D837C4B856D45856F3E8571
3884733184752B837726827921827C1D827E4A83734484743E83763783773182782B827A
26817C21817D1E817E4A81794482793D827A37827B31817C2B817D26817E21817E1E817F
4A807E43817E3D817E37817E31817F2B807F26807F2180801E8080>
]]] put
dup /DecodeABC [
{{0 0.00392 0.00784 0.01176 0.01569 0.01961 0.02353 0.02745 0.03137 0.03529
0.03922 0.04314 0.04706 0.05098 0.0549 0.05882 0.06274 0.06667 0.07059 0.07451
0.07843 0.08235 0.08627 0.09019 0.09412 0.09804 0.10196 0.10588 0.1098 0.11372
0.11765 0.12157 0.12549 0.12941 0.13333 0.13725 0.14117 0.1451 0.14902 0.15294
0.15686 0.16078 0.1647 0.16862 0.17255 0.17647 0.18039 0.18431 0.18823 0.19215
0.19608 0.2 0.20392 0.20784 0.21176 0.21568 0.2196 0.22353 0.22745 0.23137
0.23529 0.23921 0.24313 0.24706 0.25098 0.2549 0.25882 0.26274 0.26666 0.27058
0.27451 0.27843 0.28235 0.28627 0.29019 0.29411 0.29803 0.30196 0.30588 0.3098
0.31372 0.31764 0.32156 0.32549 0.32941 0.33333 0.33725 0.34117 0.34509 0.34901
0.35294 0.35686 0.36078 0.3647 0.36862 0.37254 0.37646 0.38039 0.38431 0.38823
0.39215 0.39607 0.39999 0.40392 0.40784 0.41176 0.41568 0.4196 0.42352 0.42744
0.43137 0.43529 0.43921 0.44313 0.44705 0.45097 0.4549 0.45882 0.46274 0.46666
0.47058 0.4745 0.47842 0.48235 0.48627 0.49019 0.49411 0.49803 0.50195 0.50587
0.5098 0.51372 0.51764 0.52156 0.52548 0.5294 0.53333 0.53725 0.54117 0.54509
0.54901 0.55293 0.55685 0.56078 0.5647 0.56862 0.57254 0.57646 0.58038 0.5843
0.58823 0.59215 0.59607 0.59999 0.60391 0.60783 0.61176 0.61568 0.6196 0.62352
0.62744 0.63136 0.63528 0.63921 0.64313 0.64705 0.65097 0.65489 0.65881 0.66273
0.66666 0.67058 0.6745 0.67842 0.68234 0.68626 0.69019 0.69411 0.69803 0.70195
0.70587 0.70979 0.71371 0.71764 0.72156 0.72548 0.7294 0.73332 0.73724 0.74117
0.74509 0.74901 0.75293 0.75685 0.76077 0.76469 0.76862 0.77254 0.77646 0.78038
0.7843 0.78822 0.79214 0.79607 0.79999 0.80391 0.80783 0.81175 0.81567 0.8196
0.82352 0.82744 0.83136 0.83528 0.8392 0.84312 0.84705 0.85097 0.85489 0.85881
0.86273 0.86665 0.87057 0.8745 0.87842 0.88234 0.88626 0.89018 0.8941 0.89803
0.90195 0.90587 0.90979 0.91371 0.91763 0.92155 0.92548 0.9294 0.93332 0.93724
0.94116 0.94508 0.94901 0.95293 0.95685 0.96077 0.96469 0.96861 0.97253 0.97646
0.98038 0.9843 0.98822 0.99214 0.99606 0.99998 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
{{0 0.00391 0.00781 0.01172 0.01563 0.01953 0.02344 0.02734 0.03125 0.03516
0.03906 0.04297 0.04687 0.05078 0.05469 0.05859 0.0625 0.06641 0.07031 0.07422
0.07812 0.08203 0.08594 0.08984 0.09375 0.09765 0.10156 0.10547 0.10937 0.11328
0.11719 0.12109 0.125 0.1289 0.13281 0.13672 0.14062 0.14453 0.14844 0.15234
0.15625 0.16015 0.16406 0.16797 0.17187 0.17578 0.17968 0.18359 0.1875 0.1914
0.19531 0.19922 0.20312 0.20703 0.21093 0.21484 0.21875 0.22265 0.22656 0.23046
0.23437 0.23828 0.24218 0.24609 0.25 0.2539 0.25781 0.26171 0.26562 0.26953
0.27343 0.27734 0.28125 0.28515 0.28906 0.29296 0.29687 0.30078 0.30468 0.30859
0.3125 0.3164 0.32031 0.32421 0.32812 0.33203 0.33593 0.33984 0.34374 0.34765
0.35156 0.35546 0.35937 0.36328 0.36718 0.37109 0.37499 0.3789 0.38281 0.38671
0.39062 0.39453 0.39843 0.40234 0.40624 0.41015 0.41406 0.41796 0.42187 0.42577
0.42968 0.43359 0.43749 0.4414 0.44531 0.44921 0.45312 0.45702 0.46093 0.46484
0.46874 0.47265 0.47655 0.48046 0.48437 0.48827 0.49218 0.49609 0.49999 0.5039
0.5078 0.51171 0.51562 0.51952 0.52343 0.52734 0.53124 0.53515 0.53905 0.54296
0.54687 0.55077 0.55468 0.55859 0.56249 0.5664 0.5703 0.57421 0.57812 0.58202
0.58593 0.58984 0.59374 0.59765 0.60155 0.60546 0.60937 0.61327 0.61718 0.62108
0.62499 0.6289 0.6328 0.63671 0.64062 0.64452 0.64843 0.65233 0.65624 0.66015
0.66405 0.66796 0.67186 0.67577 0.67968 0.68358 0.68749 0.6914 0.6953 0.69921
0.70311 0.70702 0.71093 0.71483 0.71874 0.72264 0.72655 0.73046 0.73436 0.73827
0.74218 0.74608 0.74999 0.75389 0.7578 0.76171 0.76561 0.76952 0.77343 0.77733
0.78124 0.78514 0.78905 0.79296 0.79686 0.80077 0.80468 0.80858 0.81249 0.81639
0.8203 0.82421 0.82811 0.83202 0.83593 0.83983 0.84374 0.84764 0.85155 0.85546
0.85936 0.86327 0.86717 0.87108 0.87499 0.87889 0.8828 0.88671 0.89061 0.89452
0.89842 0.90233 0.90624 0.91014 0.91405 0.91795 0.92186 0.92577 0.92967 0.93358
0.93749 0.94139 0.9453 0.9492 0.95311 0.95702 0.96092 0.96483 0.96873 0.97264
0.97655 0.98045 0.98436 0.98827 0.99217 0.99608 0.99998}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
] put
dup /MatrixABC [
0.625 0.625 0.625
0.3712 0 0
0 0 -0.928
] put
dup /RangeLMN [0 1.1856 0 1 -0.464 1] put
dup /DecodeLMN [
{-0.1856 add 100 mul 0.625 div
dup 8 le {27 24389 div mul}
{16 add 116 div dup dup mul mul} ifelse
0.4821087968 mul} bind
{100 mul 0.625 div
dup 8 le {27 24389 div mul}
{16 add 116 div dup dup mul mul} ifelse
0.5000076295 mul} bind
{0.464 add 100 mul 0.625 div
dup 8 le {27 24389 div mul}
{16 add 116 div dup dup mul mul} ifelse
0.4124589914 mul} bind
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0.0210579822 0.0218397835 0.0180157552] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
} ifelse

/CSA add_res
/CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
true set_gvm
%ADOBeginSubsetFont: DQVAAA+Calibri Initial
ct_T42Dict begin
-0.086 -0.191 0.859 0.742
 256 array 0 1 255 {1 index exch /.notdef put} for  /DQVAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b63767420af93b7f9000000bc0000050a6670
676df6f64d0c000005c80000091a676c7966c453fa4d000034cc0000388c
68656164f2a5604e00000ee400000036686865610d8806ea00000f1c0000
0024686d7478d18011fb00000f40000000d46c6f6361838990a000001014
0000006c6d61787023d3259600001080000000206e616d65ecff778b0000
10a00000002070726570ffeae6e0000010c00000240b6764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d000004047645f5e5d5c5b5a59585554535251504f4e4d
4c4b4a494847464544434241403f3e3d3c3b3a39383736352f2e2d2c2826
252423221f181411100f0d0b0a090807060504030201002c4523466020b0
2660b004262348482d2c452346236120b02661b004262348482d2c452346
60b0206120b04660b004262348482d2c4523462361b0206020b02661b020
61b004262348482d2c45234660b0406120b06660b004262348482d2c4523
462361b0406020b02661b04061b004262348482d2c0110203c003c2d2c20
452320b0cd442320b8015a51582320b08d44235920b0ed51582320b04d44
235920b0042651582320b00d44235921212d2c20204518684420b0016020
45b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b
2d2c00b0282370b101283e01b0282370b10228453ab10200080d2d2c2045
b00325456164b050515845441b2121592d2c2045b0004360442d2c01b006
43b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c64
2364615c58b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d
2c4565b02c234445b02b23442d2c4b525845441b2121592d2c01b0052510
23208af500b0016023edec2d2c01b005251023208af500b0016123edec2d
2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b001610110
203c003c2d2c00b00743b006430b2d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2c4523456023456023456023766818b08062202d2cb00426b004
26b00425b0042545234520b003266062636820b0032661658a2344442d2c
2045b0005458b040442045b04061441b2121592d2c45b1302f4523456160
b0016069442d2c4b5158b02f2370b01423421b2121592d2c4b515820b003
2545695358441b2121591b2121592d2c45b01443b0006063b0016069442d
2cb02f45442d2c452320458a60442d2c45234560442d2c4b235158b90033
ffe0b134201bb3330034005944442d2cb0164358b00326458a586466b01f
601b64b020606620581b21b04059b001615923586559b02923442310b029
e01b2121212121592d2cb0164358b004254564b020606620581b21b04059
b0016123586559b0292344b00425b00725082058021b0359b0052510b004
252046b0042523423cb0072510b006252046b00425b0016023423c205801
1b0059b0052510b00425b029e0b0072510b00625b029e0b00425b0072508
2058021b0359b00425b003254348b00625b00325b0016043481b21592121
21212121212d2cb0164358b004254564b020606620581b21b04059b00161
23581b6559b0292344b00525b00825082058021b0359b0042510b0052520
46b0042523423cb00425b0072508b0072510b006252046b00425b0016023
423c2058011b0059b0042510b00525b029e0b02920456544b0072510b006
25b029e0b00525b00825082058021b0359b00525b003254348b00425b007
2508b00625b00325b0016043481b2159212121212121212d2c02b0042520
2046b004252342b0052508b003254548212121212d2c02b0032520b00425
08b0022543482121212d2c452320451820b00050205823652359236820b0
40505821b04059235865598a60442d2c4b53234b515a5820458a60441b21
21592d2c4b545820458a60441b2121592d2c4b53234b515a58381b212159
2d2cb000214b5458381b2121592d2cb002435458b0462b1b21212121592d
2cb002435458b0472b1b212121592d2cb002435458b0482b1b2121212159
2d2cb002435458b0492b1b212121592d2c208a08234b538a4b515a582338
1b2121592d2c0020b200400325b0062649618b3812342d2c014623466023
466123201020468a61b8ff80628ab140408a704560683a2d2c208a234964
8a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1
020042b123018851b1400188535a58b910000020885458b2020102436042
59b12401885158b920000040885458b2020202436042b12401885458b202
2002436042004b014b5258b2020802436042591bb940000080885458b202
040243604259b94000008063b80100885458b202080243604259b9400001
0063b80200885458b202100243604259b94000020063b80400885458b202
400243604259595959592d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2c204569442d
0000000100000002000084ff6c175f0f3cf50019080000000000c6a60b75
00000000c6a60b75ff4bfe7306e005f30000000900020000000000000001
0000079efdda00000a4efc31fe8c09b60001000000000000000000000000
00000035040e000001cf00000444006104ec00ac06d700ac052a00ac0422
00ac03ad0047052200aa071e003d03d5005c0362005a0434006003fb005d
0271002503c4003501d6008503a3009901d6009906640099043400990438
005a0434009902ca00990321005102ae0021047500210475002105130021
04340094039d002205b80035039f00220329005901d6000001ff002a03fc
0057040e0060040e006b040e0052040e0048040e00ae040e0072040e0067
040e0030040e0065040e006b040e0063040e0052040e0052029d003802b1
ff4b05b80048000000a200a20120018e023c02d80352042404b0054205f2
067e071607b8083c092a09a40a3e0a820b640bf60c840d1c0d960e5c0ed8
0ee40f5a100c109c1154122c129212f21316134813dc13f414a215c8167c
173417d418c8198e1a441a4c1aec1af41bae1bfa1c341c46000100000035
00ad000500ac000700020010002f006500002318240b0004000100000001
00120001000000000006000e00005a5a5841494c2b43616c69627269b209
0320b80284b40918014a20b80283b40918014a20b80282b40918014a20b8
0281b40918014a20b80280b40918014a20b8027fb40918014a20b8027eb4
0918014a20b8027db40918014a20b8027cb40918014a20b8027bb4091801
4a20b8027ab40918014a20b80279b40918014a20b80278b40918014a20b8
0277b40918014a20b80276b40918014a20b80275b40918014a20b80274b4
0918014a20b80273b40918014a20b80271b40918014a20b80270b4091801
4a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a20b8
026cb40918014a20b8026bb40918014a20b8026ab40918014a20b80269b4
0918014a20b80268b40918014a20b80267b40918014a20b80266b4091801
4a20b80265b40918014a20b80264b40918014a20b80263b40918014a20b8
0262b40918014a20b80261b40918014a20b80260b40918014a20b8025fb4
0918014a20b8025eb40918014a20b8025db40918014a20b8025cb4091801
4a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a20b8
0258b40918014a20b80257b40918014a20b80256b40918014a20b80255b4
0918014a20b80254b40918014a20b80253b40918014a20b80252b4091801
4a20b80251b40918014a20b80250b40918014a20b8024fb40918014a20b8
024eb40918014a20b8024db40918014a20b8024cb40918014a20b8024bb4
0918014a20b8024ab40918014a20b80249b40918014a20b80248b4091801
4a20b80247b40918014a20b80246b40918014a20b80245b40918014a20b8
0244b40918014a20b80243b40918014a20b80242b40918014a20b80241b4
0918014a20b80240b40918014a20b8023fb40918014a20b8023eb4091801
4a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a20b8
023ab40918014a20b80239b40918014a20b80238b40918014a20b80237b4
0918014a20b80236b40918014a20b80235b40918014a20b80234b4091801
4a20b80233b40918014a20b80232b40918014a20b80231b40918014a20b8
0230b40918014a20b8022fb40918014a20b8022eb40918014a20b8022db4
0918014a20b8022cb40918014a20b8022bb40918014a20b8022ab4091801
4a20b80229b40918014a20b80228b40918014a20b80227b40918014a20b8
0226b40918014a20b80225b40918014a20b80224b40918014a20b80223b4
0918014a20b80222b40918014a20b80221b40918014a20b80220b4091801
4a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a20b8
021cb40918014a20b8021bb40918014a20b8021ab40918014a20b80219b4
0918014a20b80218b40918014a20b80217b40918014a20b80216b4091801
4a20b80215b40918014a20b80214b40918014a20b80213b40918014a20b8
0212b40918014a20b80211b40918014a20b80210b40918014a20b8020fb4
0918014a20b8020eb40918014a20b8020db40918014a20b8020cb4091801
4a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a20b8
0208b40918014a20b80207b40918014a20b80206b40918014a20b80205b4
0918014a20b80204b40918014a20b80203b40918014a20b80202b4091801
4a20b80201b40918014a20b80200b40918014a20b801ffb40918014a20b8
01feb40918014a20b801fdb40918014a20b801fcb40918014a20b801fbb4
0918014a20b801fab40918014a20b801f9b40918014a20b801f8b4091801
4a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a20b8
01f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801f1b4
0918014a20b801f0b40918014a20b801efb40918014a20b801eeb4091801
4a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a20b8
01eab40918014a20b801e9b40918014a20b801e8b40918014a20b801e7b4
0918014a20b801e6b40918014a20b801e5b40918014a20b801e4b4091801
4a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20b8
01e0b40918014a20b801dfb40918014a20b801deb40918014a20b801ddb4
0918014a20b801dcb40918014a20b801dbb40918014a20b801dab4091801
4a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a20b8
01d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801d3b4
0918014a20b801d2b40918014a20b801d1b40918014a20b801d0b4091801
4a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a20b8
01ccb40918014a20b801cbb40918014a20b801cab40918014a20b801c9b4
0918014a20b801c8b40918014a20b801c7b40918014a20b801c6b4091801
4a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a20b8
01c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801bfb4
0918014a20b801beb40918014a20b801bdb40918014a20b801bcb4091801
4a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a20b8
01b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801b5b4
0918014a20b801b4b40918014a20b801b3b40918014a20b801b2b4091801
4a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a20b8
01aeb40918014a20b801adb40918014a20b801acb40918014a20b801abb4
0918014a20b801aab40918014a20b801a9b40918014a20b801a8b4091801
4a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a20b8
01a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801a1b4
0918014a20b801a0b40918014a20b8019fb40918014a20b8019eb4091801
4a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a20b8
019ab40918014a20b80199b40918014a20b80198b40918014a20b80197b4
0918014a20b80196b40918014a20b80195b40918014a20b80194b4091801
4a20b80193b40918014a20b80192b40918014a20b80191b40918014a20b8
0190b40918014a20b8018fb40918014a20b8018eb40918014a20b8018db4
0918014a20b8018cb40918014a20b8018bb40918014a20b8018ab4091801
4a20b80189b40918014a20b80188b40918014a20b80187b40918014a20b8
0186b40918014a20b80185b40918014a20b80184b40918014a20b80183b4
0918014a20b80182b40918014a20b80181b40918014a20b80180b4091801
4a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a20b8
017cb40918014a20b8017bb40918014a20b8017ab40918014a20b80179b4
0918014a20b80178b40918014a20b80177b40918014a20b80176b4091801
4a20b80175b40918014a20b80174b40918014a20b80173b40918014a20b8
0172b40918014a20b80171b40918014a20b80170b40918014a20b8016fb4
0918014a20b8016eb40918014a20b8016db40918014a20b8016cb4091801
4a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a20b8
0168b40918014a20b80167b40918014a20b80166b40918014a20b80165b4
0918014a20b80164b40918014a20b80163b40918014a20b80162b4091801
4a20b80161b40918014a20b80160b40918014a20b8015fb40918014a20b8
015eb40918014a20b8015db40918014a20b8015cb40918014a20b8015bb4
0918014a20b8015ab40918014a20b80159b40918014a20b80158b4091801
4a20b80157b40918014a20b80156b40918014a20b80155b40918014a20b8
0154b40918014a20b80153b40918014a20b80152b40918014a20b80150b4
0918014a20b8014fb40918014a20b8014eb40918014a20b8014cb4091801
4a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a20b8
0148b40918014a20b80147b40918014a20b80146b40918014a20b80145b4
0918014a20b80144b40918014a20b80143b30918014ab80284b21e3e1fb8
0283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027f
b21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e
3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d431f
b80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431fb802
72b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb8026eb2
1d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab21c45
1fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c441fb8
0265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb80261
b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025db21c
451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c451f
b80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb802
54b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb80250b2
1c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb21c45
1fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb8
0247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243
b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b
4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1f
b8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb802
36b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb80232b2
1b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c
1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb8
0229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb80225
b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b
4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1f
b8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb802
18b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b2
1a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e
1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8
020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207
b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203b219
501fb80202b219511fb80201b219511fb80200b219511fb801ffb219511f
b801feb219501fb801fdb219511fb801fcb219511fb801fbb219511fb801
fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801f6b2
19511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b21854
1fb801f1b218541fb801f0b218531fb801efb218541fb801eeb218541fb8
01edb218541fb801ecb218531fb801ebb218531fb801eab218541fb801e9
b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5b218
541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218541f
b801e0b218531fb801dfb218531fb801deb218541fb801ddb218541fb801
dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801d8b2
18541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b21757
1fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b217561fb8
01cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb801cb
b217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b217
571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217561f
b801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561fb801
beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801bab2
17571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b21757
1fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb8
01b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801ad
b2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b216
3f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1f
b801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801
a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2
165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e
1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb8
0193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8018f
b2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb216
5b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1f
b80186b215611fb80185b215621fb80184b215621fb80183b215661fb801
82b215661fb80181b215551fb80180b215451fb8017fb215361fb8017eb2
15361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab21564
1fb80179b215661fb80178b215661fb80177b215661fb80176b215661fb8
0175b215661fb80174b215661fb80173b215451fb80172b215621fb80171
b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016db215
661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215621f
b80168b215621fb80167b215611fb80166b215641fb80165b215641fb801
64b215661fb80163b215661fb80162b215661fb80161b215661fb80160b2
15661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb21545
1fb8015bb215361fb8015ab215611fb80159b215621fb80158b215621fb8
0157b215631fb80156b215641fb80155b215661fb80154b215661fb80153
b215661fb80152b215661fb80151b214401fb80150b214551fb8014fb214
561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214401f
b8014ab214411fb80149b214401fb80148b214401fb80147b214411fb801
46b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb80142b2
12461fb80141b212461fb80140b212461fb8013fb212461fb8013eb21244
1fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb8
0139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135
b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211
551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211591f
b8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb801
28b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b2
11561fb80123b211571fb80122b211581fb80121b211591fb80120b2115a
1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8
011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117
b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b210
5f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1f
b8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb801
0ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2
105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f
1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f
621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641f
f40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f
621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671f
e50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e
681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311f
d60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d
2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1f
c70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40ff
c00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c
741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741f
b10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b
7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1f
a20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b
7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f
930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0a
a71f8503251f8403381f8301381f8255805581ab80557f557d557eab7d55
0b7d010b7d1b7d4b7d7b7dab7ddb7d404d060a7c557a557bab7a55795577
5578ab775576ab755504751475747503f47501ab75014475013075010200
7510752075030c7455725573ab7255007250728072b072043bb072e07202
0072010ab8ffc0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e
666d556a03251f6938675568ab67556638645565ab645563386255613860
555f385d555eab5d555c385a555bab5a55593858555703251f5638545555
ab54555338515552ab51554f384e554e03251f4d384b554cab4b554a3848
5549ab4855473846554503381f001c101c201c0310b8ffc0404e1c1b1e46
001b0142301b401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901
434f19016f197f198f19030f18cf18024018292c460f17cf17df17ef1704
134017292e460016101620160315b8ffc0b3164d5446b8ffc0b3163f4446
b8ffc0b316313546b8ffc0404d162326460f15010f151f1502451f150100
11e011f0110315bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e02
0f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d313746
b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d3046
0003012001010001100120010308b8ffc0b401151f4603bc010001000005
00010190b154532b2b4bb80800524bb008505bb00188b02553b00188b040
515ab00688b000555a5b58b101018e59b101024354b0144b515a58b10101
8e59858d8d001d424bb01d5358b203a0a01d42594bb0805358b20340401d
42594bb0ff5358b20300001d42592b5e7375732b2b745e732b2b5e73742b
73742b7374745e7301755e73742b2b2b2b5e732b5e732b7374755e735e73
5e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b5e
73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2bb1000243545841ff0284006402830064028200640281006402
800064027f0064027e0064027d0064027c0064027b0064027a0064027900
640278006402770064027600640275006402740064027300640271006402
700064026f0064026e0064026d0064026c0064026b0064026a0064026900
640268006402670064026600640265006402640064026300640262006402
61006402600064025f0064025e0064025d0064025c0064025b0064025a00
640259006402580064025700640256006402550064025400640253006402
5200640251006402500064024f0064024e0064024d0064024c0064024b00
64024a006402490064024800640247006402460064024500640244006402
430064024200640241006402400064023f0064023e0064023d0064023c00
64023b0064023a0064023900640238006402370064023600640235006402
34006402330064023200640231006402300064022f0064022e0064022d00
64022c0064022b0064022a00640229006402280064022700640226006402
2500640224006402230064022200640221006402200064021f0064021e00
64021d0064021c0064021b0064021a006402190064021800640217006402
160064021500640214006402130064021200640211006402100064020f00
64020e0064020d0064020c0064020b0064020a0064020900640208006402
0700640206006402050064020441ff006402030064020200640201006402
00006401ff006401fe006401fd006401fc006401fb006401fa006401f900
6401f8006401f7006401f6006401f5006401f4006401f3006401f2006401
f1006401f0006401ef006401ee006401ed006401ec006401eb006401ea00
6401e9006401e8006401e7006401e6006401e5006401e4006401e3006401
e2006401e1006401e0006401df006401de006401dd006401dc006401db00
6401da006401d9006401d8006401d7006401d6006401d5006401d4006401
d3006401d2006401d1006401d0006401cf006401ce006401cd006401cc00
6401cb006401ca006401c9006401c8006401c7006401c6006401c5006401
c4006401c3006401c2006401c1006401c0006401bf006401be006401bd00
6401bc006401bb006401ba006401b9006401b8006401b7006401b6006401
b5006401b4006401b3006401b2006401b1006401b0006401af006401ae00
6401ad006401ac006401ab006401aa006401a9006401a8006401a7006401
a6006401a5006401a4006401a3006401a2006401a1006401a00064019f00
64019e0064019d0064019c0064019b0064019a0064019900640198006401
970064019600640195006401940064019300640192006401910064019000
64018f0064018e0064018d0064018c0064018b0064018a00640189006401
880064018700640186006401850064418001840064018300640182006401
81006401800064017f0064017e0064017d0064017c0064017b0064017a00
640179006401780064017700640176006401750064017400640173006401
7200640171006401700064016f0064016e0064016d0064016c0064016b00
64016a006401690064016800640167006401660064016500640164006401
630064016200640161006401600064015f0064015e0064015d0064015c00
64015b0064015a0064015900640158006401570064015600640155006401
540064015300640152006401500064014f0064014e0064014c0064014b00
64014a006401490064014800640147006401460064014500640144006401
4300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b185f5e0000>
[14477 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 576 3 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c1000000>DQVAAA+Calibri AddT42Char 
1 3628 13 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c6537000000>DQVAAA+Calibri AddT42Char 
1 6956 24 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>DQVAAA+Calibri AddT42Char 
1 4692 16 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
29000000>DQVAAA+Calibri AddT42Char 
1 4216 15 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e000000>DQVAAA+Calibri AddT42Char 
1 5832 20 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d668960000000>DQVAAA+Calibri AddT42Char 
1 2400 9 <0001003dfffa06e00514003c0067b3263c0132b8fff840430b0c014c2532
012f080b0c014c282f0125100b0c014c25250122180b0c014c2922011820
0b0c014c2d31012d30012d24012d230137522a5223300b03121d52125505
55003f3f3f1217393f3f31305d5d5d5d012b5d2b5d2b5d2b5d2b5d250e03
23222e02270123030e0323222e0227012626363633321e02170133013e03
33321e02170133013e03333216160607058304101c291e1f2b1c0e04fef1
02fa030e1a2920212c1c0f03feaa06011126201f24130702012301011403
0914251e1c21140903012902011d030613231d1e23100105260e11090404
09110e03d1fc2f0e1109040409110e04ab171a0e0403080e0bfbc4043a0b
0f080404080f0bfbc6043b0a0f0804050e1a17000000>DQVAAA+Calibri AddT42Char 
1 2692 10 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f29465342440000>DQVAAA+Calibri AddT42Char 
1 7860 28 <00010021ffef04d104d800650060b22f410eb801f8b22b4e58b801f9401f
0d420d1c0d1c0d00352b54004e4841483b3b204830480248580e2bed3548
12b80104b2254d5cb80104b1074d003fed3fed3fed3232c45d392f3f3f01
2fc42f331239392f2f113310e13210e1322f313025140e0423222e023511
2111141633323e0233321e0215140e0623222e02351123222635343e0233
3335343e0233321e0215152111343e0233321e02151133321e0215140623
2311141633323e0233321e0204d108111e292f1647643f1efe4137471724
1c1408050905040203070f1e282e174664401d7e0f1205080d087d071320
181920120801bf0813201818201308e6080c0904120ee7364716251c1507
060805045b1d21100e0a06254b734e020efe0a5d5f090a09050e18121114
110d0d0d0906254b734e020e2024131a1107d6070c090404090c07d60101
080c070505070c08feff07111a132420fe0a5d5f090a09050e18>DQVAAA+Calibri AddT42Char 
1 1456 6 <000200acfffa03c7050e001c00290078b12406b8ffe8b310014d06b8fff0
b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b014d06b8
02114017111d1810014d1d100f014d1d100c0d014c1d200b014d1db80232
b2001125b8010ab306060c23b8010bb315510c55003f3fed12392fed012f
d4e12b2b2b2b10e12b2b2b2b2b32313001140e02232311140e0223222e02
351134363321321e0407342e0223231133323e0203c74077ad7893091321
19192114082a1a01152a4d696d4c29b53b575d2c9f9b4e6746240393619c
6e3cfe2e080c070505070c0804aa282207173f5c79574f6a340efdf92847
63000000>DQVAAA+Calibri AddT42Char 
1 6712 23 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b000000>DQVAAA+Calibri AddT42Char 
1 2120 8 <000100aaffed04790514002b0099401d602d01201810014d20100f014d20
100d014d200a0c014d20180b014d20b802104011004015014d004013014d
004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0b30d014d
16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315014d0ab8
ffc0400913014d0a265210521bb80129b10556003fed3f3f012f2b2be12b
2b2b2b2bd42b2b2be12b2b2b2b2b31305d01140e0223222e023511343e02
33321e021511141e0233323e023511343e0233321e021504794580b8756b
b07e440814201a182213082c5375494b75512b081421191821130901de76
b980423e79b6770323080c070505070c08fcf25a86592d2c588257031708
0c070505070c08000000>DQVAAA+Calibri AddT42Char 
1 324 2 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e0000>DQVAAA+Calibri AddT42Char 
1 6124 21 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>DQVAAA+Calibri AddT42Char 
1 7352 25 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>DQVAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d0000>DQVAAA+Calibri AddT42Char 
DQVAAA+Calibri /CharStrings get begin
/g3 3 def
/g13 13 def
/g24 24 def
/g16 16 def
/g15 15 def
/g20 20 def
/g9 9 def
/g10 10 def
/g28 28 def
/g6 6 def
/g23 23 def
/g8 8 def
/g2 2 def
/g21 21 def
/g25 25 def
end
DQVAAA+Calibri /Encoding get
dup 33 /g3 put
dup 34 /g13 put
dup 35 /g24 put
dup 36 /g16 put
dup 37 /g15 put
dup 38 /g20 put
dup 39 /g9 put
dup 40 /g10 put
dup 41 /g28 put
dup 42 /g6 put
dup 43 /g23 put
dup 44 /g8 put
dup 45 /g2 put
dup 46 /g21 put
dup 47 /g25 put
pop
end
%ADOEndSubsetFont
reset_gvm
/DBLQDO+Calibri /DQVAAA+Calibri findfont ct_VMDictPut/DBLQDO+Calibri*1 [33{/.notdef}rp /g3 /g13 /g24 /g16 /g15 /g20 /g9 /g10 /g28 /g6 /g23 /g8 /g2 /g21 /g25 208{/.notdef}rp]DBLQDO+Calibri nfDBLQDO+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf105.84 -379.72 mo(!"#$%&)[6.78966 5.49793 4.31671 2.52821 5.19975 0 ]xsh276.96 -379.72 mo('\(\)#*"+*!,)[9.45023 5.28821 6.99936 4.31671 5.49792 5.49792 3.85297 5.70764 6.78967 0 ]xsh376.08 -379.72 mo('\(\)#)[9.45023 5.28821 6.99936 0 ]xsh429.12 -379.72 mo(-.#/)[5.88437 5.81802 4.2063 0 ]xshgrestore
gsave
51.363 -348.759 mo
482.643 -348.759 li
482.643 -375.642 li
51.363 -375.642 li
51.363 -348.759 li
clp
false sop
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
true set_gvm
%ADOBeginSubsetFont: DQVAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DQVAAA+Calibri gcheck setglobal} if
1 796 4 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d150000>DQVAAA+Calibri AddT42Char 
1 8216 29 <00010094ffed039c03bc00320092401f3f34010b27100d014d270a0c014d
27080b014d27100f10014c27100b014d27b801f9b6004011014d001fb8ff
f0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8b30b014d
1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49270b0519
4924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b2b2bd42b
e12b2b2b2b2b3931305d25140e0223222e023535060623222e023511343e
0233321e021511141e023332363711343e0233321e0215039c07121d1517
1d11064d964d5a7b4c210714201818201308172f48303e7b4507141f1918
20120919080b080404080b0877554e3c6789620222080b090303090b08fd
f44f5f432558550275080b090303090b0800>DQVAAA+Calibri AddT42Char 
1 3324 12 <00020060ffed039c056d00260039008b401f3f3b010b1b39100d014d390a
0c014d391010014d39100f014d39180b014d39bb01f90000002fffe0b30d
014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d2fb8ffe8
b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a34b80104
b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b2b2b2b2b
323931305d25140e0223222e023535060623222e0235343e023332161711
343e0233321e021503262623220e0215141e0233323e0237039c07111c14
151c120847995b638c57283262915f4f834007141f1819201209a6437d44
3f58371915345641213d40462719080c070404070c08774d564d83b16274
bb84474543020b070d070505070d07fd4553573c627c404482653d122a43
31000000>DQVAAA+Calibri AddT42Char 

1 0 1 <> DQVAAA+Calibri AddT42Char 
1 4936 17 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>DQVAAA+Calibri AddT42Char 
1 8872 31 <00010035fffa058403bc004500deb90047ffc0403d0f014d38080c014d29
380137080c014d252e01262101262001261f01261e01261d01271c012804
012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b310014d10
b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0400c0d01
4d0f200c014d0f414910b8ffe040200f014d3f104f106f107f1004104012
164810334925493a902c012c200f014d2cb8ffc04010131648672c772c02
452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f012f2b2b2b
2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b01140607
010e0323222e0227032707030e0323222e022701262635343e0233321e02
17131737133e0333321e0217131737133e0333321e0205840405fef7030d
17281e1f2a190c03bd0202af030d1a291e1f27190c03fef9050408132017
1c22120803d90202c70209121f19181f120802d70201d6020913211a181d
1107039f07140ffca90b0e080304080e0a028d0909fd730b0e080304080e
0a03570f1407090b070203070d09fd1a090902e6090d070303070c08fd18
090902e6090d070302080a00>DQVAAA+Calibri AddT42Char 
1 13800 49 <00020052ffed03a605210030004200bd4013292e012a0501290401290301
2a2601260a0144b8ffc040200f024d60440131080d014d31100c0d014c1d
7a3101393149316931032b310131b8022c4009000e0e200070000200b8ff
e0b30f024d00b8ffe0b40f014d003bb8fff8b30d014d3bb8fff040120c0d
014c753b01363b463b663b03243b013bb8022b400e2f25012540f2202007
36f42a5318b80108b10756003fed3fed12392fed012f5de15d5d5d2b2bc4
2b2b5d392f10e15d5d5d322b2b31305d2b005d5d015d5d5d5d01140e0423
222e0435343e0233321e0233323e0237060623222e0235343e0233321e04
07342e0223220e0215141e0233323603a61430517ba9702b51412c140903
060b080b283d5233618b582c023594606c935927326aa472517d5c402711
af2242603f415c3b1c19385a424b8c02ba54ac9f8b683b0b1012121f1a16
1a0e050f120f4b7ea65c1f303b668c53569b7646294d6d8aa14680af6c30
2f4f64353b6244252d000000>DQVAAA+Calibri AddT42Char 
1 11152 40 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e72850000
>DQVAAA+Calibri AddT42Char 
1 11512 41 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a000000>DQVAAA+Calibri AddT42Char 
1 13464 47 <00010063fffa03af050e001f00d7b90011ffe8400a1121014c111010014d
11b8ffe8b30f014d11b8fff0b30d014d11b8ffe8b30c014d11b8fff8400a
0b014d74110126110110b8ffe8400a1121014c101010014d10b8ffe8b30f
014d10b8fff0b30d014d10b8ffe8400b0b0c014c75100126100106b8fff0
b30b014d21b8ffc0b60f024d60210100b8ffc0b310014d00b8ffd8b40b01
4d0015b8ffc0b30c014d15b8ffe8b30b014d15b8ffe8b30f014d15b8ffe0
b50f024d150511b8012db31a510b55003f3fed32012f2b2b2b2bcd2b2b31
305d2b2b5d5d2b2b2b2b2b5d5d2b2b2b2b2b2b01140e0207010e03232226
2636370121222635343e023321321e0203af03050906fe2e050f17241a22
2611020601eafd931313050a0e0902f20e150b0604c4121d1b190efbce0c
0f0903060d130d044a2824131c130906121c0000>DQVAAA+Calibri AddT42Char 
1 10564 39 <00030052ffed03ba05210027003700470182b90036fff0b40f11014c36b8
fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34b8fff0b4
0f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b30f014d49
b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10014c30b8
fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d014c2810
0f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e180f014d
14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38100f1001
4c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8ffe0b30f
014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d00b8ffc0
b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f10014c42
b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b014d0a353d
052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2bd42b2b2b
2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10e12b2b2b
2b31305d2b002b2b2b2b2b2b2b2b01140e0223222e0235343e02372e0335
343e0233321e0215140e02071e0303342e0223220615141e021736361334
2e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c5c402131
639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c656c2a22
4567443f5f3d1f85848083014c54835a2e2a52784d3d66564b221f45515c
36447758332f516e3f335e544920234a555f025f2a443019625527433c39
1f347efda22e4b413d211f3e42492c616a6b>DQVAAA+Calibri AddT42Char 
1 13784 48 <ffff0052ffed03ba0521020600270000>DQVAAA+Calibri AddT42Char 
1 11880 42 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>DQVAAA+Calibri AddT42Char 
1 10216 38 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>DQVAAA+Calibri AddT42Char 
1 13448 46 <ffff006bffed03bd0520020600260000>DQVAAA+Calibri AddT42Char 
1 12200 43 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>DQVAAA+Calibri AddT42Char 
DQVAAA+Calibri /CharStrings get begin
/g4 4 def
/g29 29 def
/g12 12 def
/g1 1 def
/g17 17 def
/g31 31 def
/g49 49 def
/g40 40 def
/g41 41 def
/g47 47 def
/g48 48 def
/g42 42 def
/g46 46 def
/g43 43 def
end
DQVAAA+Calibri /Encoding get
dup 48 /g4 put
dup 49 /g29 put
dup 50 /g12 put
dup 51 /g1 put
dup 52 /g17 put
dup 53 /g31 put
dup 54 /g49 put
dup 55 /g40 put
dup 56 /g41 put
dup 57 /g47 put
dup 58 /g48 put
dup 59 /g42 put
dup 60 /g46 put
dup 61 /g43 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/DBLQDO+Calibri*1 [33{/.notdef}rp /g3 /g13 /g24 /g16 /g15 /g20 /g9 /g10 /g28 /g6 /g23 /g8 /g2 /g21 /g25 /g4 /g29 /g12 /g1 /g17 /g31 /g49 /g40 /g41 /g47 /g48 /g42 /g46 /g43 194{/.notdef}rp]DBLQDO+Calibri nfDBLQDO+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf105.84 -366.04 mo(0"\(#1+"23*"\(43)[9.43915 5.49793 5.28821 4.3167 5.79593 3.70944 5.49792 5.79593 2.49503 5.49789 5.49794 5.28819 5.02322 0 ]xsh105.785 -351.88 mo(*!,3*.5"+)[5.70766 6.78966 7.08766 2.49502 5.49789 5.78488 7.80525 5.49792 0 ]xsh349.92 -351.88 mo(6677)[5.59732 5.59729 5.59735 0 ]xsh391.68 -351.88 mo(89:;77)[5.59732 5.59732 5.59735 5.59732 5.59729 0 ]xsh441.12 -351.88 mo(;<9=777)[5.59732 5.59732 5.59735 5.59729 5.59732 5.59735 0 ]xshgrestore
gsave
51.363 -320.922 mo
482.643 -320.922 li
482.643 -347.796 li
51.363 -347.796 li
51.363 -320.922 li
clp
false sop
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
true set_gvm
%ADOBeginSubsetFont: DQVAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DQVAAA+Calibri gcheck setglobal} if
1 1700 7 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>DQVAAA+Calibri AddT42Char 
1 8504 30 <00010022fffa037b03bc002c00e3b90023fff840170b0c014c1f080b0c01
4c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b30b014d14
b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8fff040370b
014d37110126110127100128050122280b014d3d220124220121280b014d
3f210124210120280b014d3d2001242001270f0176210121b8ffd0400911
1548212013014d21b8ffe8400910014d21200f014d21b8ffe8b30c014d21
b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b2b2b2b2b
002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b5d2b5d2b
2b01140e0207010e0323222e0227012e0235343e0233321e021713173713
3e0333321e02037b01020302fecd040d1a281e1e28190e04fece04050108
131f171d23130904fe0403fb020a13211b171e1107039f04090a0c07fca9
0b0e080304080e0a03570c120903080c070203080c09fd1a0c0c02e6090c
080302080b000000>DQVAAA+Calibri AddT42Char 
1 12688 44 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a000000>DQVAAA+Calibri AddT42Char 
DQVAAA+Calibri /CharStrings get begin
/g7 7 def
/g30 30 def
/g44 44 def
end
DQVAAA+Calibri /Encoding get
dup 62 /g7 put
dup 63 /g30 put
dup 64 /g44 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/DBLQDO+Calibri*1 [33{/.notdef}rp /g3 /g13 /g24 /g16 /g15 /g20 /g9 /g10 /g28 /g6 /g23 /g8 /g2 /g21 /g25 /g4 /g29 /g12 /g1 /g17 /g31 /g49 /g40 /g41 /g47 /g48 /g42 /g46 /g43 /g7 /g30 /g44 191{/.notdef}rp]DBLQDO+Calibri nfDBLQDO+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf105.84 -338.2 mo(0"\(#1+"23*"\(43)[9.43915 5.49793 5.28821 4.3167 5.79593 3.70944 5.49792 5.79593 2.49503 5.49789 5.49794 5.28819 5.02322 0 ]xsh105.785 -324.04 mo(>"+?"+3*.5"+)[5.06735 5.49793 3.95231 4.89067 5.49793 3.85295 2.49501 5.49789 5.7849 7.80524 5.49792 0 ]xsh344.4 -324.04 mo(8;:@=)[5.59732 5.59732 5.59735 5.59732 0 ]xsh391.68 -324.04 mo(;=889@)[5.59732 5.59732 5.59735 5.59732 5.59729 0 ]xsh441.12 -324.04 mo(=@<9<87)[5.59732 5.59732 5.59735 5.59729 5.59732 5.59735 0 ]xshgrestore
gsave
51.363 -306.999 mo
482.643 -306.999 li
482.643 -319.959 li
51.363 -319.959 li
51.363 -306.999 li
clp
false sop
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
true set_gvm
%ADOBeginSubsetFont: DQVAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DQVAAA+Calibri gcheck setglobal} if
1 1144 5 <000100acfffa047e0511003d0085b3270f0f14b8ffe8b310014d14b8ffe8
b30f014d14b8ffe8b30d014d14b8fff0b30c014d14b8ffe8b30b014d14b8
0211401e1e0a2e2e321810014d32180f014d32180d014d32100c014d3218
0b014d32b802114010001e38520a2e0f270419225119550654003f3f3f12
17393f012fd4e12b2b2b2b2b32113310e12b2b2b2b2b322f33313025140e
022323222e0227012626272316161511140e0223222e0235113436333332
1e0217011e03173326263511343e0233321e0215047e0d151a0d371a2723
2315fe6820411c02020208131f18181f12082c1a521d271f1d11013a1d36
32311801020108131f191620120847141c12080b1d322702e0397d3b4896
4afcf3070d070505070d0704aa28220a17291ffdc83463605d2f4fab4f02
be070c090404090c07000000>DQVAAA+Calibri AddT42Char 
1 5380 19 <00010099fffa05d003ca005000ea401b12100b014d13180b014d26100b0c
014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b014d13b8
fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8401e1e16
0d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f10014c0ab801
f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27b8fff0b3
10014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200100106b2
4b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f1239393f
ed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b2b2b2b39
31305d002b2b2b2b25140e0223222e023511342e022322060711140e0223
222e023511342e022322060711140e0223222e023511343e0233321e0215
15363633321e02173e0333321e021505d00812201819201308142c442e39
73450813201817211307162c432e397444081220191820130706121c1716
1d10074c8f4938594430102d514b47245776491f19080b080404080b0802
23395e44245855fd8b080b080404080b080223395e44245855fd8b080b08
0404080b080384080b090303090b0877554f1a2f412831442a133d66894c
0000>DQVAAA+Calibri AddT42Char 
1 6408 22 <00020099fe9403d503ca002a003d0080b53f3f0121360ab8fff0b30d014d
0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0ab801f840
17152b200d014d2b120c014d2b180f10014c2b180b014d2bb8020a400900
150a363521040530b80105b6264a1b49104f39b80105b1054d003fed3f3f
3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d01140e022322
2e022711140e0223222e023511343e0233321e0215153e0333321e020734
2e0223220e020711161633323e0203d53363925e28444140240812201918
20130706121c14151b1207294c4d512d628a5728ae15335640203e404627
447a433e59371a01e976bc834710223423fe3e080c080404080c0804e909
0b080303080b09792a3e29154c84af754581643c13294331fe9a53583c64
7c000000>DQVAAA+Calibri AddT42Char 
1 5244 18 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c08000000>DQVAAA+Calibri AddT42Char 
1 13084 45 <00010065ffed0396050e003e00c1400d27370127360126080126030140b8
ffc0b60f024d60400137b8ffe8b310014d37b8fff0b40b0d014c37ba0211
0028ffc0402810014d28400f014d280e4f326f327f3203321d1810014d1d
100f014d1d100c0d014c1d200b014d1dba02330000ffe8b30f024d00b8ff
c0b50f014d004013b8ffc0b70f10014c13131836b8012c400c2c3af42022
012222052c5118b8010bb10556003fed3f12392f5ded10ed11392f2b0110
d62b2be12b2b2b2bc45dd4d42b2be12b2b31305d2b005d5d015d5d01140e
0223222e0635343e0233321e0233323e0235342e02232206232226351134
363321321e02151406232111363633321e0203964680b16c3c6c54360f06
050203080b070a2a4769484370512e27517c563d58261c181f1d023d080f
0a051412fe1d2349306fa66f3901a068a26f3a1119180e0c111a12111b11
08191d1a2044674a3e5f3f1f0c1a25020f212009121c132428fe95050235
618a0000>DQVAAA+Calibri AddT42Char 
DQVAAA+Calibri /CharStrings get begin
/g5 5 def
/g19 19 def
/g22 22 def
/g18 18 def
/g45 45 def
end
DQVAAA+Calibri /Encoding get
dup 65 /g5 put
dup 66 /g19 put
dup 67 /g22 put
dup 68 /g18 put
dup 69 /g45 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/DBLQDO+Calibri*1 [33{/.notdef}rp /g3 /g13 /g24 /g16 /g15 /g20 /g9 /g10 /g28 /g6 /g23 /g8 /g2 /g21 /g25 /g4 /g29 /g12 /g1 /g17 /g31 /g49 /g40 /g41 /g47 /g48 /g42 /g46 /g43 /g7 /g30 /g44 /g5 /g19 /g22 /g18 /g45 186{/.notdef}rp]DBLQDO+Calibri nfDBLQDO+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf105.84 -310.12 mo(A\(B"CD\(/")[7.1318 5.2882 8.82092 5.49793 5.79593 2.5282 5.19989 3.58807 0 ]xsh344.4 -310.12 mo(=@9E7)[5.59732 5.59732 5.59735 5.59732 0 ]xsh391.68 -310.12 mo(<;EE77)[5.59732 5.59732 5.59735 5.59732 5.59729 0 ]xsh441.12 -310.12 mo(6=:;E77)[5.59732 5.59732 5.59735 5.59729 5.59732 5.59735 0 ]xshgrestore
gsave
51.363 -265.239 mo
482.643 -265.239 li
482.643 -278.199 li
51.363 -278.199 li
51.363 -265.239 li
clp
false sop
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
DBLQDO+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf105.84 -268.36 mo(-.#/*"+'\(\)#)[5.88437 5.818 4.20631 3.69847 5.4979 5.49792 3.85295 9.45023 5.28821 6.9994 0 ]xsh361.2 -268.36 mo(8E)[5.59732 0 ]xshgrestore
gsave
51.363 -251.316 mo
482.643 -251.316 li
482.643 -264.276 li
51.363 -264.276 li
51.363 -251.316 li
clp
false sop
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
true set_gvm
%ADOBeginSubsetFont: DQVAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DQVAAA+Calibri gcheck setglobal} if
1 3044 11 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>DQVAAA+Calibri AddT42Char 
1 3952 14 <00010025fffa02860578003c0064b2161000b8ffe0b40b014d001bb8fff0
b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b30b014d1b
b801f9b2302a25b8ffd040121011014c250aed36471a26ed3048204c1048
003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c4313001140e022322
2e0223220e02151533321e02151406232311140e0223222e023511232226
35343e02333335343e0233321e0402860405080607151e291b2534200ec9
080b0905120fc908132018182013087f101004080c087f23486d4a234224
0c0803050f13170e05090b091833513a6207111a132420fceb080b080404
080b0803152024131a11075d5e8756290d0f0c131b000000>DQVAAA+Calibri AddT42Char 
1 9304 32 <00010022fe94037c03bc00240052b9001bfff040350b014d371b01291b01
18180b014d261801260e360e022709011a400b014d3a1a0119380b014d3b
19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b5d2b015d
5d5d2b5d5d2b2103060623222e023713262627012634363633321e021701
33133e023332161614070233780631321a201102067c091003febf081024
1e1e22140905010103f8061122201c241106feb51011050c140e01390412
0a035c15180e0503080f0dfd2e02d6130b05050e18120000>DQVAAA+Calibri AddT42Char 
1 14172 50 <00020038fff102650296001300270022401214001e0a10190119af0f7f1f
230123af0582003fed713fed71012fc1d4c1313001140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e02026522466b484968
421f21446b494f6b401a8c10213625233421101323352228331f0d01474d
7e59322e577d50497c5a34365b7a4938573a1d1c385338445b35151e3b53
0000>DQVAAA+Calibri AddT42Char 
1 14172 50 <00020038fff102650296001300270022401214001e0a10190119af0f7f1f
230123af0582003fed713fed71012fc1d4c1313001140e0223222e023534
3e0233321e0207342e0223220e0215141e0233323e02026522466b484968
421f21446b494f6b401a8c10213625233421101323352228331f0d01474d
7e59322e577d50497c5a34365b7a4938573a1d1c385338445b35151e3b53
0000>DQVAAA+Calibri AddT42Char 
1 14324 51 <0001ff4bffdc036e053500150029b90013ffc0b40f10014c13b8ffc0b40b
014d1308b8ffc0b510014d081005002f2f012f2b2f2b2b3130070e032322
26263637013e0333321616060722050e141c14161b0b03080384050e151b
15151b0c03080809090703080d130c0509080b0603070e140b00>DQVAAA+Calibri AddT42Char 
1 14440 52 <ffff0048ffdc05700535002700320010028700270032030b000000070033
017c00000000>DQVAAA+Calibri AddT42Char 
DQVAAA+Calibri /CharStrings get begin
/g11 11 def
/g14 14 def
/g32 32 def
/g52 52 def
end
DQVAAA+Calibri /Encoding get
dup 70 /g11 put
dup 71 /g14 put
dup 72 /g32 put
dup 73 /g52 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/DBLQDO+Calibri*1 [33{/.notdef}rp /g3 /g13 /g24 /g16 /g15 /g20 /g9 /g10 /g28 /g6 /g23 /g8 /g2 /g21 /g25 /g4 /g29 /g12 /g1 /g17 /g31 /g49 /g40 /g41 /g47 /g48 /g42 /g46 /g43 /g7 /g30 /g44 /g5 /g19 /g22 /g18 /g45 /g11 /g14 /g32 /g52 182{/.notdef}rp]DBLQDO+Calibri nfDBLQDO+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf105.84 -254.44 mo(F.#/3.G3B.&"H)[4.59269 5.81799 4.20631 3.69847 2.49503 5.81799 3.36713 2.49501 8.82092 5.81799 5.79594 5.43169 0 ]xsh358.8 -254.44 mo(EI)[5.59729 0 ]xshgrestore
gsave
51.363 -237.402 mo
482.643 -237.402 li
482.643 -250.362 li
51.363 -250.362 li
51.363 -237.402 li
clp
false sop
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
true set_gvm
%ADOBeginSubsetFont: DQVAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DQVAAA+Calibri gcheck setglobal} if
1 7624 27 <00010021ffef03dc04ad0041003db22f4110b801f8b42b1e1e2b0fb801f9
400c03352b4148102bed3b354814b80104b3254d094c003f3fed3fcded32
3f012f32dde112392f10e1322f31300132161511140e0223222e02351121
11141633323e0233321e0215140e0423222e02351123222635343e023333
35343e0233321e02151503a81e160813201719201308fe2f374717241c14
0805090504081020292e174664401d7e0f1205080d087d07132018192012
0803b71b1afc97080b080404080b080315fe0a5d5f090a09050e18121d21
110e0906254b734e020e2024131a1107d6070c090404090c07d6>DQVAAA+Calibri AddT42Char 
1 9700 34 <0002000003b70151052f000b000c0014b900000271b40609030c48003fde
cd012fe131300114062322263534363332160101512c3b3a2b2c3b3a2bfe
af04cd3a2a29393a2a29feb1>DQVAAA+Calibri AddT42Char 
1 7600 26 <ffff0021ffef03ef052f0226001b000000070022029e0000>DQVAAA+Calibri AddT42Char 
1 9508 33 <00010059000002d703b7002b003bb90010fff040160c0d014c26100c0d01
4c2f0001003409440902092511b80102b319480f27b80102b1054b003fed
323fed32012f5dcd5d31302b2b25140e02232122263535343e0237012122
2635343e023321321e021515140e02070121321e0202d706080e08fdd615
1b04080e0a018dfe7f101304090d0902040b110c0704080e0afe7501a608
0d090646131b11071c21220e16161910026a2125121b1107060e1611200e
18171a10fd9607101b000000>DQVAAA+Calibri AddT42Char 
DQVAAA+Calibri /CharStrings get begin
/g26 26 def
/g33 33 def
end
DQVAAA+Calibri /Encoding get
dup 74 /g26 put
dup 75 /g33 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/DBLQDO+Calibri*1 [33{/.notdef}rp /g3 /g13 /g24 /g16 /g15 /g20 /g9 /g10 /g28 /g6 /g23 /g8 /g2 /g21 /g25 /g4 /g29 /g12 /g1 /g17 /g31 /g49 /g40 /g41 /g47 /g48 /g42 /g46 /g43 /g7 /g30 /g44 /g5 /g19 /g22 /g18 /g45 /g11 /g14 /g32 /g52 /g26 /g33 180{/.notdef}rp]DBLQDO+Calibri nfDBLQDO+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf105.84 -240.52 mo(G\(F$D$J"#3\(B.+JK\(J.&)[3.1684 5.2882 4.66997 2.52821 2.5282 2.52821 6.14935 5.49794 4.31671 2.49501 5.28821 8.82091 5.81799 3.85295 6.14937 4.1842 5.28819 6.14937 5.81801 0 ]xsh355.44 -240.52 mo(8:7)[5.59732 5.59732 0 ]xshgrestore
gsave
51.363 -223.479 mo
482.643 -223.479 li
482.643 -236.439 li
51.363 -236.439 li
51.363 -223.479 li
clp
false sop
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
DBLQDO+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf105.84 -226.6 mo(&1B*!,#)[5.79593 5.79594 8.82092 5.70766 6.78966 7.08766 0 ]xsh361.2 -226.6 mo(8:)[5.59732 0 ]xshgrestore
gsave
51.363 -209.556 mo
482.643 -209.556 li
482.643 -222.516 li
51.363 -222.516 li
51.363 -209.556 li
clp
false sop
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
DBLQDO+Calibri*1 [11.04 0 0 -11.04 0 0 ]msf105.84 -212.68 mo(&1B>"+?"+#)[5.79593 5.79594 8.82092 5.06735 5.49792 3.95232 4.89067 5.49794 3.67632 0 ]xsh349.92 -212.68 mo(8777)[5.59732 5.59729 5.59735 0 ]xshgrestore
201.303 140.256 mo
417.546 140.256 li
417.546 -2.628 li
201.303 -2.628 li
201.303 140.256 li
false sop
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
ef
279.207 105.03 mo
390.501 105.03 li
390.501 2.664 li
279.207 2.664 li
279.207 105.03 li
ef
gsave
279.207 105.03 mo
390.501 105.03 li
390.501 2.664 li
279.207 2.664 li
279.207 105.03 li
clp
322.083 101.484 mo
279.207 101.484 li
279.207 78.201 li
322.083 78.201 li
322.083 101.484 li
gsave
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/1 /CSA get_res setcolorspace
clp
[1 0 0 -1 210.249 133.917 ]ct
[43.44 0 0 23.76 68.631 32.1971 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 181 
/H 99 
/M[181 0 0 -99 0 99 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 181 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 181 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 181 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 181 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&^&Z+QSH8'W
qZ29LjoOoNrW%WQh#ZjB])ef1mf;bVJcY3=o)PTf[K5t"gAum,rrM]ko`:WcecPIEo)SOdd/og>p&Xgd
rW2lsL]ZZ>p&Xgdp]8)1Y6+Cuo`5!mq?$9kJckcMqZ?Zro`5!mrW8u"^B=H:qZ6BjrrN*#h#iK9rW<$!
rrMfnrrN*#PQT>9rW;rtp&P*orWC:GS-8fnrW<'"p&G-q!X&E)rrduYkQUke!WrN+quQNlrrW0%rWKe9
Z3C41r<!$$quQNlrrW0%rWM]oJd)#TrWN0%!!<'!pAb6s!sJN*VZt*Equm3+"9S],rW2`n"9Sc0"U<Zc
N!BOk"U"r1!s8H&!!2ip"p4r1"U,)7P6]\E"9o&6"U+f,!!<*"p](L#!sAc2"pW0STa(])"pG/5rW<-%
r;lZn#Qt;7"pYD>#ml1il3Rb&#R:P;"U"r1!r`5q!!NK0#6tM@r<eJkj9tnn#RLeB#6k;6!s8E%q#CR$
"U52:#lP(H$Eaa7#m^eB#6k>7!s8W'!Vl^!"9eu7#7187p^2T[pBpj*#RC\@"pG,3!s8E%q#CU&#7(VC
$Om"DY7AAYrXB2C$O[7H#6b86!s8H&q#C[*#71_G%1NdWrX\0'N=c%!"qD(O$jm:H":#)5!s8H&q#C[)
#7(VD$k*RSRh!jV$OmLQ$OI(D"pG,3!r`5r!!WW4#RLkH%/^Ra%\O=0%13LO$OI(D"pG,3!r`5r!!3E4
$O$tL%hK<brXt,&knF".%M96_%LidQ#R1G8!s/K(q#CU)$4ICU&JG'V^D*perY#VO&J,E]$4-q@"9\T'
q>^a*#n%1P&.fHF&qUbk&do9_&.T-X#m^b>!sAK&q>^^)#n%1P%hS^PX:iGarXfJK%h9$V#m^b>!sAK&
q>^^,%1Ws`'c-cbiY[[mrYGhU'b_/i%1<IH"U,#1!W`>u!!`i?&/#Zm()ZufRi9rur>?"\(D[\t&.K!R
#6b53rW2iq#RLnL&/#Zk()Hlcd28VqrYH"Z()7Mr&.T*U#R1G7!r`5s!!NZ;%M06d!Yc@bKbrti%2KZn
'+tid$jm7E"Tni*!Vud%%1j0g(`F>6*r[7q+LWEl*tTJ6*#]Y0'+bW]#R1G7!W`>u!!j#F',DH)*$$+"
+7p\-+TES_*t0/0)]9D)&.K!R"p>&-!Vud%$kEpa()Ro-)u^hX*Q]?#*"3`((`!eu%h&dN"U"r,!Vud(
$kEp`()Ro-)]Kb:i>n+&&0)Z/)]BS2().>k$jm7D"9\W(q>^m7'GhZ/+<_sT,pjt+-ep'_-71#b,9e6O
)]'2"%LWLF"9JT)q>^d4',DK,+!MpTr[#i:VC)6f%3m&=*?#_-&.JsO"U"o*!W2p'%MBHm)B9hA+T`f2
,)%91,7u+D+X%sM*#]Y/&e>BW#6b22r;lfr#n@O](E+87+<Vhd,30pY+X%sL*#]V.&J#9V#6b22r;lfr
$PO<q+<r3^.P!&%/]99G/eT`f/1`8"-6jWQ(DIDi#mLP8!r`5u!!j2Q)BL(K-7C>B/,CfK/GUjr.h4$W
-RBrY)\s(t$j[%?!rW/t!!j,M(`OP?,:+Z8-a>);./kS(-7'l[*ul+3&Io0R"Tni)!W2p*&/5p"*[)^Q
,pjrdk9u<<$7@2J-6sfZ*ZGq1"q_:P#6b22r;lfr$Pj[(,Uk8s0etO@1nHSU2%h`&1G^a=/1Dkf)]'+s
$3p_:!r`5u!"'DX*?ldY.kNA,0[hbJ0b5oj/Lr7s+s%U:&If'P"9\T'qu?d2()dH#+seTc.P!##M_40F
&M,I`.k)hl,9Ij@'+bQY"p>&,!W2p)&f)B,+seTb.Olsa/?p`:.Olho,pFEM(D@;f#mLM7r;lfr$Q'p0
.4m;32E3]X481jh4T%;V4$,G_2Dd0A.3ouQ'bCcZ"U"l.!<N)u$Pj[(,q1E!0f(XC26JjW2A%f(1c-p@
/Li%i*#B7u$3p\9r;lfr$PXEu+XJQf/M8\00]XsM0b#fj0/"n-.4-5[)&3_m!so28"8r8u!"'DW*?c^W
.P*2)0:FTH0Focg/1W+q+s%U:&If$O"9\T'qu@*D+=A]q2E<l_5!M<[6)-^\5X7Ls4?>AV/LVb^(D.)_
"U"l.!<N)u"W/7(-nI%U1,UsK3&udUloGb>3B&lS1GCC/,9@^:&.8^H!s8H&qu@'>)BU4Q.kNG01,HU#
Znr=L1,(=2.3p#T((q)a#6b22rW2os$PaR%,Ub/p0JG7;1\<MU1__c'1G^d@0J4k(,Tn$A&e56R"Tni*
!W2p)*@!!e2**ib5sn&?7E7h16UF%$3]8ZA,T[d9%LE=B!s/K(qu@*B+!`9f1,V!N3]fI_4d/#?4?PYc
2`<EE.O?/S'bC`Y"T\`-rW2os$Psd+,q:K#1,LjH2OHGY2\J#,2)I'C/Lr.k*#B8!$3p_:!r`5u!"'M]
+=/Kh0JYF@29e%T2@q]%1,(:0-6X?F'+YET"Tni*!W2p'+!iEm3'9Gn705qK8;0Y(8JOce7R][14?52K
-6F*>%LNCD!s/K(qu@*C+!iEk1cIHW4Ztuh5NY0C5!D+l3]AlM.jcAX((gr\"p>#,!W2p*(`X_I.k`Y7
2E*TT`&Y%^&i_j02Dd0B/12Y_(_dMh#6b22rW2os$5X[+-7^`(1c70Mq)EscpG`^B2Dd0B/12V^(_[Df
#6b22rW2os$QpcJ1HI`e77TpA9<h1.9GL2n8Ou9;5<C\S-Qj<B%LNFE!s/K(qu@'C+=8Wo2)mZ\5!S0p
Ma.P34ZbY]0eFar#94Kk$jd+@!r`5u!"'P`,:G)s1H%0O3Lr4\3Y4812Dd*>.3flO'G(WX"Tni*!W2p*
(`aeK/2/h:2E3ZVe2j6`&ihs32`3BF/1;_a)&*Sh#R(;3rW2os![&jC#W4\/6q9gA9MLF?ktVsf9hS)K
76isn0.7t_'b1TV"Tnf,!W2p*)^-R\1,_-T4[21s_*PCn&jS]H5!1ka1+jt!*#9+q#mLM6rW2os$Q'p0
.4m822E3]X3qk^f48_/Q3]]8\2Dd-?.3ouQ'G(ZY"Tni*!W2p)(`jnM/MJt=2`Nh"3lF&j3&ifQ0J+_!
*Z5Y&$O?n<!r`5u!"'hs0/bpY77^$E:#f!/:('`g84>g,2_Z[()\iSg$O6h;!W`?"!"0bi-S7)43^#Yl
5XCl+fg6<;5sRXt3]AiI-mBWI&e,-O"9SQ'qu@*B*[<*c1,LpL3]]@M4JP"O4$,J`2`3?C.3ouR'bCcZ
"Tni*!W2p$)'1"N/MRDc2E3]X3f#la3taS83B/oR0eOn#*Z5\($O?n<!r`5u!"0qu0/bpZ77g-H:/8N!
[SIW5:/+DR7RB6s0I\1c((UcX"Tnf,!W2p**$Qd`1H.?X5!VA!oKn-r'LG,P5sRXt4#\uK-mBWI&e,-O
"9SQ'qu@*B+!`9f1,V$N3]]@'4NT\u4$,J`3&WNF.O?/T'bCcZ"Tni*!W2p*)'1%P/i#7B3&s#\iB*5b
&3;j43&`]M/h/+g)&3\j#R(52!r`5u!"0r!0K2-^7S6<J:/70PgeSY[:/+DS7mfI"0e":d((UcX"Tnf,
!W2p**$Qd`1H.?X5<qM$c9nHr&jeoM5Wq1f1bL1#*#B4s#mLM6rW2os#T4^0.5!A53&q"#4+o``4:jP7
3&WNF.O?/T'bCcZ"Tni*!W2p*)'1%P/i#7B3'')^N]cGd&j&093B&fN/h/+g)&3\j#R(;3rW2os$R$rQ
2a'Mt8k_uT:W-)6:_cc%:/+>N6U!Ia.3]`I%grUG!s/K(qu@*E+t,'"2`a)d5X@a56\7]$6P;^P5X7Io
2`*-8+rhC3%1*4A!r`5u!"'Sc,Uk?$2)mTW40Ui`4:jP73&WNF.O?/T'bCcZ"Tni*!W2p*)'1%P/i#7B
3'')^k<+_d$9L=13B&fN/h/+g#8n6f$O?n<!r`5u!"0r!0K2-^7S6?L:/@HXekd)W:JOVV7mfI"0e":d
((UcX"Tnf,!W2p**$Qd`1H.?X5<qM$e3flr&jeoM5Wq1f1bL1#*#B4s#mLM6rW2os!Z<(*#:V8\2)mTW
4,Q/`4:jP73&WNF.O?/T'bCcZ"Tni*!W2p*)'1%P/i#7B3'')^_*#%d&j&093B&fN/h/+g)&3\j#R(;3
rW2os$R$rQ2a'Mt8k_uT:\R\;;#F-):JX_[8k2643&)j+*#9%m#6b22!<N)u$QL?=/i,FI4[21t6EW\q
6P;^P5X7Io2`*-8+rhC3%1*4A!r`5u!"'Sc,Uk?$2)mTW46&G`4:=223&WNF.O?/T'bCKV#R(;3rW2os
$Q1!2.5!A42`NiZ4.A@c4;'_;3]T,V1+k%%*uPe)$O?n<!r`5u!"0r!0K2-^7S6?L:/B86UJM\$:JOVV
7mfI"0e":d((UcX"Tnf,!W2p$*$Qd`1H,Iu4[21t6AS"q6P;^P5X7Io2`*-8+rhC3%1*4A!r`5u!"'Sc
,Uk?$2)mTW42!b`4:jP73&WNF.O?/T'bCcZ"Tni*!W2p*)'1%P/i#7B3'')^oK7^f'KeK>4$#A\2)6d6
,Tdm=&.8aI!s8H&qu@*J.53\D6Uj[A:/4Tc:ruNK:JX_[8k2643&)j+*#9%m#6b22!<N)u$QL?=/i,FI
4[21t6K(:q6P)RN5X7Io2`*-8+rhC3%1*4>"9SQ'qu@'A+!`9f1,V$O3]iZjg,op-3]K#Q0.J7i)ANel
#R(;3rW2os$Q1!2.5!A42`NiZ43fsc4;'_;3]T,V1+k%%*uPe)$O?n<!r`5u!!j_s0K2-^7S6>U:/4T=
;"%3q:JX_[8k2643&)j+*#9%m#6b22!<N)u$QL?=/i,FI4[21t6B4Fq6P;^P5X7Io2`*-8+rhC3%1*4A
!r`5u!"'Sc,Uk?$2)mTW42X1`4:jP73&WNF.O?/T'bCcZ"Tni*!W2p*)'1%P/i#7B3'')^qE0?lq)f9O
4$#A\2)6d6,Tdm=&.8aI!s8H&qu@*J.53\D6Uj[A:/4Ti:r?*E:JX_[8k2643&)j+*#9%m#6b22!<N)u
$QL?=/i,FI4[21t6K^^q6OH.H5X7Io2`*-8+pT)(&e,-O"9SQ'qu@'A+!`9f1,V$O3]ilpe3":'3]K#Q
0.J7i)ANel#R(;3rW2os$Q1!2.5!A42`NiZ44HBc4;'_;3]T,V1+k%%*uPe)$O?n<!r`5u!!4;m0F0U#
6Uj[A:/4TC;!Cdk:JX_[8k2643&)j+*#9%m#6b22!<N)u$QL?=/i,FI4[21t6GZ$q6P;^P5X7Io2`*-8
+rhC3%1*4A!r`5u!"'Sc,Uk?$2)mTW48(dg4Sh/O3]]5Y1+t+'*uYk*$j["=!r`5u!"0Yc,Uk?$1cIBT
3]jK,`]Okq4$#A\2)6d6,Tdm=&.8aI!s8H&qu@*J.53\D6Uj[A:/4UG:lnK_:JX_[8k2643&)j+*#8bi
$O6h;!W`?"!"0bj-n[;73^#\m5sh&.fg?B=69me!4#\uK-mBWI&e,-O"9SQ'qu@'A+!`9f1,V$O3]k\N
Tf`lI3]K#Q0.J7i)ANel#R(;3rW2os"W8@,.5!@Z1cIBT3]i-[loYnB4$#A\2)6d6,Tdm=&.8aI!s8H&
qu@*J.53\D6Uj[A:/4U!:ps18:JX_[8k2643&)j+*#9%m#6b22!<N)u$QL?=/i,FI4[21t6M*Ws6PMmT
6:*q&4ZbSZ/gqn`(D7/`"p>#,!W2p))':+Q/i#:D3BB7%4NBPq3]]5Y1+t+'*uYk*$j["=!r`5u!"0Yc
,Uk?$1cIBT3]l:_P<9C<4$#A\2)6d6,Tdm=&.8aI!<WE&!W2p*+Xo*(4[V\29MS>YQr)R7'i.V#9hIoC
4ub8G+rh@/$O6h;!W`?"!"0bj-n[;73^#\m5sijaVF(t_69me!4#\uK-mBWI&e,-O"9SQ'qu@!?+!`9f
1,V$O!BN;q4RG6B3]]5Y1+t+'*uYk*$j["=!r`5u!"0Yc,Uk?$1cIBT3]i?ajua8<4$#A\2)6d6,Tdm=
&.8aI!s8H&qu@*J.53\D6Uj[A:/4U':p<b2:JX_[8k2643&)j+*#9%m#6b22!<N)u$QL?=/i,FI4[21t
6Ma'$6hs(^6:*q&4ZbSZ/gqn`(D7/`"p>#,!W2p))':+Q/i#:D3BB7+4Ma,k3]]5Y1+t+'*uYk*$j["=
!r`5u!"0Yc,Uk?$1cIBT3]lLeNB@P04$#A\2)6d6,Td7/'bC`Y"Tni*!W2p*+Xo*(4[V\29MS>YSl"!7
'i.V#9hIoC4ub8G+rh@/$O6h;!W`?"!"0bj-n[;73^#\m5sj'gTL0>Y69me!4#\uK-mBWI&e,-O"9SQ'
qu?d9+!_(?/i#:D3BB6Z4Qeg<3]]5Y1+t+'*uYk*$j["=!r`5u!"0Yc,Uk?$1cIBT3]k/?ZTJj^4$#A\
2)6d6,Tdm=&.8aI!s8H&qu@*J.53\D6Uj[A:/4UZ:kDOA:_cc%:/+>N6U!Ia.3]`I%grUG!s/K(qu@*E
+t,'"2`a)d5X@`>6cMJ+6:*q&4ZbSZ/gqn`(D7/`"p>#,!W2p))':+Q/i#:D3BB7^4H;N33]]5Y1+t+'
*uYk*":PP>!s8H&qu@*B*[E0e1,LpL3]]?l4P;h04$,J`2`3?C.O6)R'bC`Y"Tni*!W2p*+Xo*(4[V\2
9MS>Yd86T7'i.V#9hIoC4ub8G+rh@/$O6h;!W`?"!!O>d-n[;7"Zee25X@_m6gR/Q6:*q&4ZbSZ/gqn`
(D7/`"p>#,!W2p))':+Q/i#:D3BB784L@3^3]]5Y1+t+'*uYk*$j["=!r`5u!"0Yc,Uk?$1cIBT3]lsr
Jij`04?GVc3B&fN/h/+g)&3\j#R(;3rW2os$R$rQ2a'Mt8k_uT:TI=6:_cc%:/+>N6U!Ia.3]`I%grUG
!s/K(qu@*E+t,'"2`a)d5X@`q6^'kK6:*q&4ZbSZ/gqn`(D7/`"p"i.rW2os$5jp2.5!A53&s#]QTWta
&3;j32DQp8,p+$?&.AgJ!s8H&qu@*B*[E0e1,LpL3]]@J4Jk4R4$,J`2`3?C.O6)R'bC`Y"Tni*!W2p'
+Xo*(4[V\29EIsa:PDX6:_cc%:/+>N6U!Ia.3]`I%grUG!s/K(qu@*E+t,'"2`a)d5X@_s6fp`K6:*q&
4ZbSZ/gqn`(D7/`"p>#,!W2p))':+Q/i#:D3BB7>4K^dX3]]5Y1+t+'*uYk*$j["=!r`5u!"0Yc,Uk?$
1cIBT3]m1#Jirik&j&093B&fN/h/+g)&3\j#R(;3rW2os$R$rQ2a'Mt8k_uT:U*a6:_cc%:/+>N6U!Ia
.3]`I%grUG!s/K(qu@*E+t,'"2`a)d5X@a"6]FG?6:*q&4ZbSZ/gqnK*#B4s#mLM6rW2os$5jp2.5!A5
3&s#]SNPCa&3;j32DQp8,p+$?&.AgJ!s8H&qu@*B*[E0e1,LpL3]]@P4J4eL4$,J`2`3?C.O6)R'bC`Y
"Tni*!W2p!+Xo)N2a'Mt8k_uT:Q&'6:_cc%:/+>N6U!Ia.3]`I%grUG!s/K(qu@*E+t,'"2`a)d5X@`Q
6aK,m6:*q&4ZbSZ/gqn`(D7/`"p>#,!W2p))':+Q/i#:D3BB7q4G#]l4:jP73&WNF.O?/T'bCcZ"Tni*
!W2p*)'1%P/i#7B3'')^Xus]d&j&093B&fN/h/+g)&3\j#R(;3rW2os$R$rQ2a'Mt8k_uT:ZP?6:^p2r
:/+>N6U!Ia.3]`I#7h1I"Tnf,!W2p**$Qd`1H.?X5<qM$RmYjr&jeoM5Wq1f1bL1#*#B4s#mLM6rW2os
$5jp2.5!A53&s#]coe!a&3;j32DQp8,p+$?&.AgJ!s8H&qu?m<*[E0e1'KKn3'')^Lck#d&j&093B&fN
/h/+g)&3\j#R(;3rW2os$R$rQ2a'Mt8k_uT:VKZ6:_cc%:/+>N6U!Ia.3]`I%grUG!s/K(qu@*E+t,'"
2`a)d5X@a/6\7Z>6UO1,5X7Io2`*-8+rhC3%1*4A!r`5u!"'Sc,Uk?$2)mTW4/tE`4:jP73&WNF.O?/T
'bCcZ"Tni*!W2p*)'1%P/i#7B3'')^iB3;d&3Ds73B&fN/h/+g)&3\j#R(52!r`5u!"0r!0K2-^7S6?L
:/@6Rge\_]:JOVV7mfI"0e":d((UcX"Tnf,!W2p**$Qd`1H.?X5<qM$c9nHr&jeoM5Wq1f1bL1#*#B4s
#mLM6rW2os#T4^0.5!A53&q"#4+o``4:jP73&WNF.O?/T'bCcZ"Tni*!W2p*)'1%P/i#7B3'')^N]cGd
&j&093B&fN/h/+g)&3\j#R(;3rW2os$R$rQ2a'Mt8k_uT:W-)6:_cc%:/+>N6U!Ia.3]`I%grUG!s/K(
qu@*E+t,'"2`a)d5X@a56\7]$6P;^P5X7Io2`*-8+rhC3%1*4A!r`5u!"'Sc,Uk?$2)mTW40Ui`4:jP7
3&WNF.O?/T'bCcZ"Tni*!W2p*)'1%P/i#7B3'')^k<+_d$9L=13B&fN/h/+g#8n6f$O?n<!r`5u!"0r!
0K2-^7S6?L:/@HXekd)W:JOVV7mfI"0e":d((UcX"Tnf,!W2p**$Qd`1H.?X5<qM$e3flr&jeoM5Wq1f
1bL1#*#B4s#mLM6rW2os!Z<(*#:V8\2)mTW4,Q/`4:jP73&WNF.O?/T'bCcZ"Tni*!W2p*)'1%P/i#7B
3'')^_*#%d&j&093B&fN/h/+g)&3\j#R(;3rW2os$R$rQ2a'Mt8k_uT:\R\;;#F-):JX_[8k2643&)j+
*#9%m#6b22!<N)u$QL?=/i,FI4[21t6EW\q6P;^P5X7Io2`*-8+rhC3%1*4A!r`5u!"'Sc,Uk?$2)mTW
46&G`4:=223&WNF.O?/T'bCKV#R(;3rW2os$Q1!2.5!A42`NiZ4.A@c4;'_;3]T,V1+k%%*uPe)$O?n<
!r`5u!"0r!0K2-^7S6?L:/B86UJM\$:JOVV7mfI"0e":d((UcX"Tnf,!W2p$*$Qd`1H,Iu4[21t6AS"q
6P;^P5X7Io2`*-8+rhC3%1*4A!r`5u!"'Sc,Uk?$2)mTW42!b`4:jP73&WNF.O?/T'bCcZ"Tni*!W2p*
)'1%P/i#7B3'')^oK7^f'KeK>4$#A\2)6d6,Tdm=&.8aI!s8H&qu@*J.53\D6Uj[A:/4Tc:ruNK:JX_[
8k2643&)j+*#9%m#6b22!<N)u$QL?=/i,FI4[21t6K(:q6P)RN5X7Io2`*-8+rhC3%1*4>"9SQ'qu@'A
+!`9f1,V$O3]iZjg,op-3]K#Q0.J7i)ANel#R(;3rW2os$Q1!2.5!A42`NiZ43fsc4;'_;3]T,V1+k%%
*uPe)$O?n<!r`5u!!j_s0K2-^7S6>U:/4T=;"%3q:JX_[8k2643&)j+*#9%m#6b22!<N)u$QL?=/i,FI
4[21t6B4Fq6P;^P5X7Io2`*-8+rhC3%1*4A!r`5u!"'Sc,Uk?$2)mTW42X1`4:jP73&WNF.O?/T'bCcZ
"Tni*!W2p*)'1%P/i#7B3'')^qE0?lq)f9O4$#A\2)6d6,Tdm=&.8aI!s8H&qu@*J.53\D6Uj[A:/4Ti
:r?*E:JX_[8k2643&)j+*#9%m#6b22!<N)u$QL?=/i,FI4[21t6K^^q6OH.H5X7Io2`*-8+pT)(&e,-O
"9SQ'qu@'A+!`9f1,V$O3]ilpe3":'3]K#Q0.J7i)ANel#R(;3rW2os$Q1!2.5!A42`NiZ44HBc4;'_;
3]T,V1+k%%*uPe)$O?n<!r`5u!!4;m0F0U#6Uj[A:/4TC;!Cdk:JX_[8k2643&)j+*#9%m#6b22!<N)u
$QL?=/i,FI4[21t6GZ$q6P;^P5X7Io2`*-8+rhC3%1*4A!r`5u!"'Sc,Uk?$2)mTW48(dg4Sh/O3]]5Y
1+t+'*uYk*$j["=!r`5u!"0Yc,Uk?$1cIBT3]jK,`]Okq4$#A\2)6d6,Tdm=&.8aI!s8H&qu@*J.53\D
6Uj[A:/4UG:lnK_:JX_[8k2643&)j+*#8bi$O6h;!W`?"!"0bj-n[;73^#\m5sh&.fg?B=69me!4#\uK
-mBWI&e,-O"9SQ'qu@'A+!`9f1,V$O3]k\NTf`lI3]K#Q0.J7i)ANel#R(;3rW2os"W8@,.5!@Z1cIBT
3]i-[loYnB4$#A\2)6d6,Tdm=&.8aI!s8H&qu@*J.53\D6Uj[A:/4U!:ps18:JX_[8k2643&)j+*#9%m
#6b22!<N)u$QL?=/i,FI4[21t6M*Ws6PMmT6:*q&4ZbSZ/gqn`(D7/`"p>#,!W2p))':+Q/i#:D3BB7%
4NBPq3]]5Y1+t+'*uYk*$j["=!r`5u!"0Yc,Uk?$1cIBT3]l:_P<9C<4$#A\2)6d6,Tdm=&.8aI!<WE&
!W2p*+Xo*(4[V\29MS>YQr)R7'i.V#9hIoC4ub8G+rh@/$O6h;!W`?"!"0bj-n[;73^#\m5sijaVF(t_
69me!4#\uK-mBWI&e,-O"9SQ'qu@!?+!`9f1,V$O!BN;q4RG6B3]]5Y1+t+'*uYk*$j["=!r`5u!"0Yc
,Uk?$1cIBT3]i?ajua8<4$#A\2)6d6,Tdm=&.8aI!s8H&qu@*J.53\D6Uj[A:/4U':p<b2:JX_[8k264
3&)j+*#9%m#6b22!<N)u$QL?=/i,FI4[21t6Ma'$6hs(^6:*q&4ZbSZ/gqn`(D7/`"p>#,!W2p))':+Q
/i#:D3BB7+4Ma,k3]]5Y1+t+'*uYk*$j["=!r`5u!"0Yc,Uk?$1cIBT3]lLeNB@P04$#A\2)6d6,Td7/
'bC`Y"Tni*!W2p*+Xo*(4[V\29MS>YSl"!7'i.V#9hIoC4ub8G+rh@/$O6h;!W`?"!"0bj-n[;73^#\m
5sj'gTL0>Y69me!4#\uK-mBWI&e,-O"9SQ'qu?d9+!_(?/i#:D3BB6Z4Qeg<3]]5Y1+t+'*uYk*$j["=
!r`5u!"0Yc,Uk?$1cIBT3]k/?ZTJj^4$#A\2)6d6,Tdm=&.8aI!s8H&qu@*J.53\D6Uj[A:/4UZ:kDOA
:_cc%:/+>N6U!Ia.3]`I%grUG!s/K(qu@*E+t,'"2`a)d5X@`>6cMJ+6:*q&4ZbSZ/gqn`(D7/`"p>#,
!W2p))':+Q/i#:D3BB7^4H;N33]]5Y1+t+'*uYk*":PP>!s8H&qu@*B*[E0e1,LpL3]]?l4P;h04$,J`
2`3?C.O6)R'bC`Y"Tni*!W2p*+Xo*(4[V\29MS>Yd86T7'i.V#9hIoC4ub8G+rh@/$O6h;!W`?"!!O>d
-n[;7"Zee25X@_m6gR/Q6:*q&4ZbSZ/gqn`(D7/`"p>#,!W2p))':+Q/i#:D3BB784L@3^3]]5Y1+t+'
*uYk*$j["=!r`5u!"0Yc,Uk?$1cIBT3]lsrJij`04?GVc3B&fN/h/+g)&3\j#R(;3rW2os$R$rQ2a'Mt
8k_uT:TI=6:_cc%:/+>N6U!Ia.3]`I%grUG!s/K(qu@*E+t,'"2`a)d5X@`q6^'kK6:*q&4ZbSZ/gqn`
(D7/`"p"i.rW2os$5jp2.5!A53&s#]QTWta&3;j32DQp8,p+$?&.AgJ!s8H&qu@*B*[E0e1,LpL3]]@J
4Jk4R4$,J`2`3?C.O6)R'bC`Y"Tni*!W2p'+Xo*(4[V\29EIsa:PDX6:_cc%:/+>N6U!Ia.3]`I%grUG
!s/K(qu@*E+t,'"2`a)d5X@_s6fp`K6:*q&4ZbSZ/gqn`(D7/`"p>#,!W2p))':+Q/i#:D3BB7>4K^dX
3]]5Y1+t+'*uYk*$j["=!r`5u!"0Yc,Uk?$1cIBT3]m1#Jirik&j&093B&fN/h/+g)&3\j#R(;3rW2os
$R$rQ2a'Mt8k_uT:U*a6:_cc%:/+>N6U!Ia.3]`I%grUG!s/K(qu@*E+t,'"2`a)d5X@a"6]FG?6:*q&
4ZbSZ/gqnK*#B4s#mLM6rW2os$5jp2.5!A53&s#]SNPCa&3;j32DQp8,p+$?&.AgJ!s8H&qu@*B*[E0e
1,LpL3]]@P4J4eL4$,J`2`3?C.O6)R'bC`Y"Tni*!W2p!+Xo)N2a'Mt8k_uT:Q&'6:_cc%:/+>N6U!Ia
.3]`I%grUG!s/K(qu@*E+t,'"2`a)d5X@`Q6aK,m6:*q&4ZbSZ/gqn`(D7/`"p>#,!W2p))':+Q/i#:D
3BB7q4G#]l4:jP73&WNF.O?/T'bCcZ"Tni*!W2p*)'1%P/i#7B3'')^Xus]d&j&093B&fN/h/+g)&3\j
#R(;3rW2os$R$rQ2a'Mt8k_uT:ZP?6:^p2r:/+>N6U!Ia.3]`I#7h1I"Tnf,!W2p**$Qd`1H.?X5<qM$
RmYjr&jeoM5Wq1f1bL1#*#B4s#mLM6rW2os$5jp2.5!A53&s#]coe!a&3;j32DQp8,p+$?&.AgJ!s8H&
qu?m<*[E0e1'KKn3'')^Lck#d&j&093B&fN/h/+g)&3\j#R(;3rW2os$R$rQ2a'Mt8k_uT:VKZ6:_cc%
:/+>N6U!Ia.3]`I%grUG!s/K(qu@*E+t,'"2`a)d5X@a/6\7Z>6UO1,5X7Io2`*-8+rhC3%1*4A!r`5u
!"'Sc,Uk?$2)mTW4/tE`4:jP73&WNF.O?/T'bCcZ"Tni*!W2p*)'1%P/i#7B3'')^iB3;d&3Ds73B&fN
/h/+g)&3\j#R(52!r`5u!"0r!0K2-^7S6?L:/@6Rge\_]:JOVV7mfI"0e":d((UcX"Tnf,!W2p**$Qd`
1H.?X5<qM$c9nHr&jeoM5Wq1f1bL1#*#B4s#mLM6rW2os#T4^0.5!A53&q"#4+o``4:jP73&WNF.O?/T
'bCcZ"Tni*!W2p*)'1%P/i#7B3'')^N]cGd&j&093B&fN/h/+g)&3\j#R(;3rW2os$R$rQ2a'Mt8k_uT
:W-)6:_cc%:/+>N6U!Ia.3]`I%grUG!s/K(qu@*E+t,#u2`a)c5X7X36@qQ"64uRM5X.Cm2`!'7+rhC3
%1*4A!r`5u!"0Yd,Uk<#1cIBT3]jT/_`SPn4$#A\2)6d5,p+$?&.AgJ!s8H&qu@*B*[E-c0f1dJ3BB4a
4,l</3]]8\2Dd-@.3ou?)&3\j#R(;3rW2os$R$rQ2EX;p8P;cQ:7b84:DHW"9h\,J69R7^.3]`I%grUG
!s/K(qu@*D+X\is2`a)c5X7Wb6D-XX5s[b#4ZYMX/gqn`((q&_"p>#,!W2p!(`jn-.4m;32`NiZ4,Z5c
4;'_;3]T,V1+k"$*uPb($j["=!r`5u!"0Vb,:G,u1c@<R3]b)=ZTAd\3]T/X1bgU3,T[g;&.8aI!s8H&
qu@*I-ndJ@6:FI=9hnIX:P)C?:DHW"9h\,J69R7].3TWG%grUG!s/K(qu@'C+XS`p2E<l_5<l88`'=ku
5!1ka1+ajt*#9+q#mLM6rW2os$5ag/-nR/12E3]Wj#W2]$TU1)1bgR2,9Id;&-NCI"Tni*!W2p*(`jkL
/2/k<2`NcWRl]4`&ihs33&WTI/LVhb)&*Sh#R(;3rW2os$QpiM2*=/n84lQL:!l_2:)-Jt9M7oF5s.%Y
.3TWF%grUG!s/K(qu?m=+=/Nm1^,g!4?YkmLd:;l&jJTD4ZYPZ0e=Xp)\s"o#R1D5rW2os$Q'm.-S-o+
2)[ER3PIP_3YFG53&`]N0.eRs*Z,S&$O6h;!r`5u!"0S`+t"op1,LmJ3&pOjJiON*3B/uW2Dd0B/1;\`
(_[Df#6b22rW2os$QpfK1cmoh7S$-E9WLn09bg>q8kDK?5<LeU-m0EC%LNFE!s/K(qu@'A+!iBi1H%6S
4$;FaOZa194#o5U0InFl)AWkm#R(53!r`5u!"0S_+XS]l0f1aG2E.!_gc,p*2`<QN1+k()+rqL7%grUG
!s8H&qu@*@*$HXY/hf(<2)[A<2l8MH2E!EM1GLL4-6aHH'+YHU"Tni*!W2p'+!rNp3B]Ys7KQ(N8VKe*
8ejoh7n6!74ZYAN-Qj<A%LNCD!s/K(qu@*B*[<'b0f1gJ3BB3]46AU;3]]8\2`*6A.3ouQ'G(WX"Tni*
!W2p*()nAB.4m2.1,LgF`&=hX&iDO'1GUU8.4$,W(D72b#6b22rW2os$Pj[(,Ub2r0etOA2#9(]2>K*B
1c.!D0eY(,,p4-C&e56R"Tni*!W2p**[E3i2EX/i6UaF5Yt)]%'h1Y]6pa+#2_lm0*uGY$$3gV8!W`?"
!!sG]+XS]l0f(XEjYr)V#W=Os0eOt(+rgh)'+YET"Tni*!W2p('cJ,<-RpZ"0/8tPe1qRi0J>"--R0]O
((q)`#6b22rW2os$PaO#+sncj/h\n51"7tO1(l;r0JG+1.OQG^)&3_m#mUV9!r`5u!!4,a-jVF]3'08f
5sdnr6g6rQ6:*t'5!1e]0.A(c(D7/`"p>#0!<N)u$PjX&,:G&o0/51:1VkoS1_DN"0ek=6.juYb)\s%r
$3p\9r;lfr$PXEt+=&<`.kE8(0)%#N0DmI8/hS_-.k)hk+WM=5&.JpM"9\T'qu@';(E4JB-7C>p/1mtV
`%DQO/1N(q,Tn'D'+bTZ"p>&,!W2p*)B^=U0JbUI4$5Vgj?AYh%6Zj:4?5>V0InIm)AWni$j[">!WiB'
qu@$:(E=PB-R^Jr/X\6C/e9Nb.k)hk+<244&.JpM"9\T'qu@!8'cA#7,:+]cr[H5EUFQ6l%O`\N,9\'G
((q,d#R(>5r;lfr"VDIe*?ZR1,UOof.4L'&lm`Sr.4?Sk,pONQ)&3bp$O?n="8r8u!"0S_+X\`m0f([F
2`JH1[Q"mY2`<NL1+t.*+rqL7%grUG"9SQ'qu@!7'c@u5+s\H^r[@CfJgp^Kr[87(,pXZV*#TJ'%LWLF
"9SN&qu@'8',DH*+!DgQ,UBB9a!D6A,9e9Q*#]S+&.JsO"Tni)!W2p'%hf]r*$-4H,Q8tI-'KYS,RktB
+<DL?()%2f$3p_:!!<*"qu@*>)'0qJ.4Zu'0JG5K1>FVt0ek@8/Lr7s+s%U:&Io*O"Tni*!W2p'%MBKn
)]^"C+oW\2,Gl^a+q5Y:*?,h1&e>BX#6Y,1rW2lr#Rq=Y()Rr0*?P2%Kcoh,r>uIh*#]Y0'+bW]#mLM7
!r`5t!"05I',;?&)]]t@+!6Lcjrb6X+!)ID)]BP.'+bT\#mLM7!r`5t!!j/P)''hE,pt,?.E!^?.fCe-
-RBu[*>oV*%L`UH"9S]+!W)j&$kEp`()Ro-)u^iR*J,=-*W6rd)]9J.'G1ia$3p_;!r`5s!!s#C&/#Zm
(Dmu,Y8Y4q%N--$(D[\t&.T'S#6b22rW2iq#R_(P&JGlq(E!,hk8K<ur>>eV(DRVs%h/[M#mUV9!r`5s
!"08L'c.c/+!;[L+sNU'efthP+sA*P*uu:;'bUub#mLP8!W`>u!!`i>%1j-c'G^Q^e/+bor>#eV'GD)j
%L`[M"p>#0rW2iq!XT5C":btU&ek3XM\YIkr=fYR&eY`c%1<II"U"o/rW2iq#RLkI%M03b',1?Z_%j9k
rY,eT'+tlg%LidP#6b54!r`5s!!iuC&/,fq(`=7k)tt>(*;gfU)\<o*(`*r$&Io3V#6b54!W`>u!!NT6
$4I@SrXf&@XqJ_er=KDK&.]3Y$4-qA"9\f*!Vl^$#7(VD$k<aX&)e(Y&.&jW%L`^O#R:M9!<WE&!Vl^"
#7(VD$k3^E&"=-`&H!%G%LigS#m^b>"9S`)!Vl^$#n%1P&/#Wj'`Jip(8DZD'b1ok&eGN^$OI%A"Tnf,
!Vl^!"U>8=$4?kB%"o)R%13LP$OR1G#6b55!rW/q!!`Z3#7(VC$4FERZ4%'J$OR1G#6k>7!s8E%q#CU&
"pYD?$4?50Jd_A^#RUkD#6k>7!s8E%q#CO%#RLkIrXPh:`=MqX$OmIN#R1G9!s/N)!Vl]s"9\o-#QG(c
$',Dm#lY&3"p>&2!r`3#!VcWt!sAc3#6"jl#hTF]#6b;8"9S`-r;lZn"9Sc1"pY&3ap=^Ir<EK1"U"o0
!rW/p!!i`3"pbJ@$47/m$gS00$47(G#R:M:"9S],!<Mrqrr`6'rrn5`i<K8b"9\i0!s8E%pAk0prrg"=
W!*/(rW<-%r;lWmrWE0'o*'^LnHAmqrW<-%r;lWmrri<)rs#P0^'FWA#R(A7"9S],!<Mop"9AQ*!s@Ha
L'7MYrrW*!p&G-p!WnVhbldtIquQKk!W`?(b6+(5rrW*!p&G-q!sAQ+KE^?=rri?(rrW0#p&P$l\H8f5
q>p6hr;l?gJcbQGq>p6hr;ibs^&n-3o`+smrW:jWL]dVXrW*!"o`1$Rb5q58`;u5)oDnahJcX^/oDngj
[K<T5qZ6<hkQ-89oE"I^T)lY,nGq)?L]RAQpAg-Qd/iM4aT8(9j8f2\JcY-;lN$b]M#lQ9j8cpqWr^iQ
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&e,Y"~>

%%EndBinary
grestore
np
grestore
gsave
279.207 105.03 mo
390.501 105.03 li
390.501 2.664 li
279.207 2.664 li
279.207 105.03 li
clp
333.603 67.401 mo
279.207 67.401 li
279.207 44.118 li
333.603 44.118 li
333.603 67.401 li
gsave
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/1 /CSA get_res setcolorspace
clp
[1 0 0 -1 210.249 133.917 ]ct
[54.96 0 0 23.76 68.631 66.2771 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 229 
/H 99 
/M[229 0 0 -99 0 99 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 229 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 229 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 229 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 229 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&XoO%R
JcLB&JcLB&b5f$QJcYQGmf8s\O9+qQr;_QQW<)GfliD\=_?'0,d/eh"fE(UE\,h0^nH&7^T)jiNp]16m
q>lQWX9/1uoDnahncFCE_uf`8o`4jif`Ha,h#dBQo`4ji^]K)hp&b$jo`5!mr;rl!O9>F_r;lcqqZ-Ws
rrW*#OT_`gqucs#qZ6EkrrN-$ncOIG^]XT<qZ6EkrrN-$L'+O[rrW&upAk3prr`0%nHFLJb6@eHrr`9&
r;lWm!WiH+rWLaTJd(-;r<*0(!s8B$p](9qrWE0']ENljqZZs%rW<-%quQQm!!<-%rrf)#Pm.-irW<-%
quQWo"98E("9e]-M?^3fr<3<,"9S],rW2co"9\i2"pY#2o*BpRaU%hM"pP56"9S],r;l]o!<WK("TSbY
#D*3<#6tG:"U"o0!Wr<$q#CEt"TAQ)#/1=o#P\N/"pG/5!s8T+r;l]o"U,&6#6tP6$)e2r$N:>;#R:P;
"U"o0!r`6!!;um%"U52;#mq%<$]tk%%/pY6$3pkB#6k;6!s8E%q>^^'"U52;#mpP;pBuQ\aUA(TrWrf8
#6k>7!s8W'!Vud#"U,)8#RLh9$Jl/B$fVQn$N:>:#R:P;"9S`-r;l`p"pP;<$4@7O_%)&,p^RZ@%1EUN
#R:M:"9S`)!Vud%#7(YE$k3[W&#p2)&.9!Z%LigR#mU\="9\T'!!)lr"pP;=$4@7Or!nr%YRgU@#n7:N
#m^b?"Tnl*!Vud""pYGA$Om"DrXSc8Je,s6r=8f9#R_"H#R:P;!sAK&q>^d,$4ICS&.oNfrY(;+[M8ZR
%h]Ke%h9$V#m^_="9JW*!Vud%#mq+O&/#Wi'_)oi(!@=#'GD,l&.T*U#R:M9!rW/s!!ii:$k3^Y&J>`/
'7pnY'+>Kd&J,E]$OI%B"Tni)!W)j&#RLkJ%hK<b'#,*3'E&RQ&eP]d%LidP#6k>6!rW/s!!irA%hTKk
(Ddpc)4)3M(`*u''+k]`$4$h>!s8H&r;[6+!"05I',;9")&X>2NuPAD%iQ?()&F&&&eGKZ#R1D6!r`5t
!!io?%M9?g()@_X(kNUH(_%8s'bh8l%L`XK"U"o/rW2lr#7:kL&JGin(B,-*(kNUc)#b<[()7Jq&.T'S
#6b54!r`5t!!j&G',MN**?H<=+G(a5+:oV9*#]Y0'+YNZ#6b54!W`?!!"'/H',DH**?Q@G+K?TO+V,\<
+!)C@)&<ks%13=D"9SQ'rrDut$4IFX'GhW**#ot>OWL_J%ilZ1)]BP/'G1f`#mUV9!r`5t!"',F&JQ$!
)B0Y:*VUV,*m#H6*??+=)&O,&&Io0T#6b22rW2lr$4mmf)]p4J,pjuehC*t(i[>Ee-RL)_+<DF;'+YKX
"pG)1!<N&t$4mje)]g+G,UF```@$6bq^2n$,pac[*uu78'+bQY#6Y/-!W2p(%h]To)]^"D+X3s3PTpY^
+WqjH)Aj/#%LWOH"9\W(!!2ut$4d^`(`OJ;+<_pQP9[4T%jE2@+<DL@(DIGk$O?q>"8r8u!"'DV*$?LS
.4Zr$0)7/P0?5^Z/hJV(.4-8^)]'.t$O?n=!WiB'qu@*<()n>>,pt,k.k<02/[d5D/1`;%.OZYi+W_L:
&e,0Q"U"o+!W2p*&JQ'%+!MpU-7:/hoI5A@cRBJT-mpAh,pOQS)]'2"$jd.B!s8H&qu@'9'Gqc2+sSB\
-R[UrJgfb0&18hP,U4EQ)]'/!$jd.B!s8H&qu@*@)^$FU/MAk81c.),2M*h%2)R3I1GLO5-mTlQ((^o]
"pG)1!<N)u$PaO#+sn`h/h\n50rZpt1B'!=0J>%/-m^#V(_[Dg#R1D5rW2uu$ig8@(E4G@,pt,l.kH`5
Z7QV=.k<%r,p=<J((q)b#6b22rW2os$PO<q+!N!Y.4Qi!/G:ZI/^5mH/.X6\.46Aa*Z5\)%1<CE!s8H&
qu@'A+!`9f1,LpM3]l+ZJir*V'0A682`*6?-mBZJ&e56R"Tnf-!W2p*(*"GC.4m5/1c.'J`&E9,'K7s/
2Dm<J0eY(+,Tdp?&.JpM"9SQ'qu@*=)''nI.4Zu'0/,,]179m10ek@80.e\&,p=6F'FtTX"U"o+!<<,u
!"0JY*?ldX.kNA,0JJYEZ8)>4%kfOd.OZPb*#B8!$O?n=!r`5u!"0_h-S7)33]oSj5XG03JjRXI'gY,N
5<_1i2)-U.+;tq)$O6h;!WiE#!"'P`+t+ur1Gq*N3SlfK3oW163B/rT1+t.)+WM71%13=C!WiB'qu@$=
)BU4Q.kWM21W2,%2#9$A1GUX9.jlP_)&*Vj#mLM6!W`?"!"'GZ+!`6b/hf"81TWEu1_MT"0eb1/-6aKK
'G(ZZ"p=u/!<</u!!sYj.53V?4[;>%P!uKA&k#&O4?52M-m9NF&.AgJ!s8T*qu@*B+!`<g1Gq-Q4$,S$
4b>i=4V^(A4$,J^1bgR1,97U7%LNFD!s/K(qu@!=*$HXY/hf(<r\fcq[Q".C&Mu6r/L_tg)AWno#mLM7
!W`?"!"'M]+=8Qj0JYIB2=i_X2U+,n2)R3G0.\Ls+;tt,%1*4A!s/K(qu@*H,qCc24[;D(7n6,)8V0Ot
8JOce7n6!85<LhY.O,rM&If!L"9S]+qu@*C+!iEk1cIHW4Zu!G5Cu*75!D+m4#o5U/h/+g)&!Mf#6b22
!<N)u$Q'j--S$i*1c@9P32np-3W:uN2`<KJ/h/1k*#9+r#mLP8!W`?$!"8i-(E=VH.k`Y72)[CS33kLW
2`<NL0eOq&+<)(.%1*4B!s/K(qu@*I-7q&85=7k08P2YL9S,s_9GL2n8kDNA69R:a.jZ5Q&e,*N"9S]+
qu@'C+=8Wo2)mZ\5!RgfJjAB^'0eZD3]AlL.jZ8T'+YET"Tnf,!W2p)(`ahL/MJt=2`Nh83eBEk3YOM5
2`3?D.jlJ[(D72a#6b22!<N)u$Q'm.-nI&-2)[ER3NG3/3Yj_93&ifQ1+t.)+WM:1%1*7C!s/K(!;um*
+=Ad!4?u;)8P;`OP"r;X'hqCr91_T?5<:SO-6F$:%1*4A!s/N$!"0_h-S7)43BTGh5X>*1JjIRGr]h)\
4ZbV\0e4Ol)&!Ph#6b22!<N)u$Q'p0.4m;32E3]X3o<#N46/L&3YFG42D[$<-R'NH&e56R"Tnf,!W2p)
(`jnM/MT%>2`Nh:3eBEi3YOM52`3?E/12V](D.,a#6b22!<N)u$6U`M2EX;p84lQMXA5$U&ku%l7moU(
1bC$r(D@8b"p>#0!!2ut$QL?</M]7G4[)+r6'O^?65;dP5X7Lq3AiNA,p4*?&.8^H!s/K(qu@*B+!W3d
1,LpL3]]A!4G#];4;Bq>3]]5Y1b^I.+rqL5%LNFE!s/K(qu@*B*[<'b0f1dJ3BB3]4176M3YFG42D[$<
-R'QI&e56R"Tnf,!W2p*+Xo'&4@2J.92//VoM:'7cVOO8&ku"i76ipk/LMYX'+P<Q"9S]+qu@*E+t,'"
2`a)d5X@`k6\7\h6PVpS5sRXt3]8]D-6O3@&.8^H!s/K(qu@'A+!`9f1,V$O3]k/?Jijc14?GSa2`*6@
-mK`L&e56R"Tnf,!W2p*)'1%P/i#7B3'')^WB?Y4'g"K<3]K#S0J"Ur*>]=u$3p_:!W`?$!"Ao.+Xo*(
4[V\29MS>YOAN;\'i.V#:/"5J5s."W-Qj6>%LE=B!s/N$!"0bj-n[;73^#\m5sk94Jj[dM'gb5Q5X.Cm
2DHa0+;tq*$O6h;!W`?"!"'Sc,Uk?$2)mTW45;rM4QJU<4$#A\1bgR1,97U6%LNFE!s/K(qu@*B*[E0e
1,LpL3]]@@4G#[34?P\e3]]5Y1b^I/+rqI4%LNFE!s/K(qu@*J.53\D6Uj[A:/4Tc:mk,q:JX_\9M%Z=
4>e`=+;bb%#mLM7!W`<"!"0bj-n[;73^#\m5sg`%Z9o?n6:!k$4ZYJU/1)JX'G(WW"Tnf,!W2p))':+Q
/i#:D3BB7r4G#];4;0e;3B&cL/LVha(_R;c#6b22!<N)u$Q1!2.5!A42`NiZ45W/P4QJU>4$,Ja3&WTI
/1;\_(D72b#6b22!<N)u$R$rQ2a'Mt8k_uT:W?4_;#O3*:JX_\9M%Z=4>e`=+;bb%#mLM7!Wi3!$QL?=
/i,FI4[21t6ENVA6PMjR5sRXt3]8]D-6O3@&.8^H!s/K'!W2p))':+Q/i#:D3BB6c4K^d[4$#A\1bgR1
,97U6%LNFE!s/K(qu@*B*[E0e1,LpL3]]A!4G#];4;Bq>3]]5Y1b^I/+rqI4%LNFE!s/K(qu@*J.53\D
6Uj[A:/4TF:ps18:JX_\9M%Z=4>e`=+;bb%#mLM7!Wi3!$QL?=/i,FI4[21t6M*Ws6dJ+76:*t'5<V%c
0e=Xo)AE_j#6b22!<N)u$5jp2.5!A53&s#]g,ssLjua;=3]T,U0eFdu*>fD!$3p_:!W`?"!"0Yc,Uk?$
1cIBT3]k2@Jijc04$#D^2Dd*=-mBZJ&e56R"Tnf,!W2p*+Xo*(4[V\29MS>YWDK'\'i.V#:/"5J5s."W
-Qj6>%LE=B!s/N&!"Ao.*$Qd`1H.?X5<qM$O@-BB'gb5Q5X.Cm2DHa0+;tq*$O6h;!W`?"!"'Sc,Uk?$
2)mTW47t^f4Nfi#4$#A\1bgR1,97U6%LNFE!s/K(qu@*B*[E0e1,LpL3]]@Y4G#]X4;Bq>3]]5Y1b^I/
+rqI4%LNFE!s/K(qu@*J.53\D6Uj[A:/4U':kDL[:f'q`:/4JS76s$n/ghbY'+P<Q"9S]+qu@*E+t,'"
2`a)d5X@`;6^^:W6:*t'5<V%c0e=Xo)AE_j#6b22!<E3!!"'Sc,Uk?$2)mTW4-;Y04;0e;3B&cL/LVha
(_R;c#6b22!<N)u$Q1!2.5!A42`NiZ48:pi4Nfi%4$,Ja3&WTI/1;\_(D72b#6b22!<N)u$R$rQ2a'Mt
8k_uT:Z#!#:ukFf:JX_\9M%Z=4>e`=+;bb%#mLM7!Wi3!$QL?=/i,FI4[21t6H2BE6iB@e6:*t'5<V%c
0e=Xo)AE_j#6b22!<N)u$5jp2.5!A53&s#]X?;b1&j&-72`*6@-mK`L&e56R"Tnf,!!2ut$Q1!2.5!A4
2`NiZ4-Vk34;Bq>3]]5Y1b^I/+rqI4%LNFE!s/K(qu@*J.53\D6Uj[A:/4U]:kDNc:_cc%:/4JS76s$n
/ghbY'+P<Q"9S]+qu@*E+t,'"2`a)d5X@_s6af>s6:*t'5<V%c0e=Xo)AE_j#6b22!<N)u$5jp2.5!A5
3&s#]o/qUebrcY$3]T,U0eFdu*>fD!$3p_:!W`?"!"0Yc,Uk?$1cIBT3]l(YJir6Z'g"K<3]K#S0J"Ur
*>]=u$3p_:!W`?"!"0r!0K2-^7S6?L:/A`'Jl!1X:JOYY8OYp-2(g7!(_[Ac"p>#0!W2p**$Qd`1H.?X
5<qM$WC*.B'gb5Q5X.Cm2DHa0+;tq*$O6h;!W`?$!"8i-)':+Q/i#:D3BB6_4L.'_4$#A\1bgR1,97U6
%LNFE!s/K(qu@*B*[E0e1,LpL3]]@r4G#]?4;Bq>3]]5Y1b^I/+rqI4%LNFE!s/K(qu@*J.53\D6Uj[A
:/4U@:kDO+:_cc%:/4JS76s$n/ghbY'+P<Q"9S]+qu@*E+t,'"2`a)d5X@`T6\7ZA6UO1,5sRXt3]8]D
-6O3@&.8^H!s/K(qu@'A+!`9f1,V$O3]j?(QTPsD3]T,U0eFdu*>fD!$3p_:!W`<%r;[3C*[E0e1,LpL
3]]?c4L.'a4$,Ja3&WTI/1;\_(D72b#6b22!<N)u$R$rQ2a'Mt8k_uT:\[b<:s2ZM:JX_\9M%Z=4>e`=
+;bb%#mLM7!Wi3!$QL?=/i,FI4[21t6Jk.^6f^TL6:*t'5<V%c0e=Xo)AE_j#6b22!<N)u$5jp2.5!A5
3&s#]`B8`7q`GNR3]T,U0eFdu*>fD!$3p_:!W`?"!"0Yc,Uk?$1cIBT3]jH+QTPsD4$#D^2Dd*=-mBZJ
&e56R"Tnf,!!2ut$R$rQ2a'Mt8k_uT:R"\[:_cc%:/4JS76s$n/ghbY'+P<Q"9S]+qu@*E+t,'"2`a)d
5X@a56\7\I6PVpS5sRXt3]8]D-6O3@&.8^H!s/K(qu@'A+!`9f1,V$O3]i<`Zof!`3]T,U0eFdu*>fD!
$3p_:!W`?"!"0Yc,Uk?$1cIBT3]lsrJiq@A'g"K<3]K#S0J"Ur*>]=u$3p_:!W`?"!"0r!0K2-^7S6?L
:/BV@Jl(Z-'i.V#:/"5J5s."W-Qj6>%LE=B!s/N$!"0bj-n[;73^#\m5siFUJjU8>6:!k$4ZYJU/1)JX
'G(WW"Tnf,!W2p))':+Q/i#:D3BB7#4IJ;F4$#A\1bgR1,97U6%LNFE!s/K(rW!B-!#Zh'.5!A42`NiZ
4-2S34;Bq>3]]5Y1b^I/+rqI4%LNFE!s/K(qu@*J.53\D6Uj[A:/4UY:kDNg:_cc%:/4JS76s$n/ghbY
'+P<Q"9S]+qu@*E+t,'"2`a)d5X@`m6\7\f6PVpS5sRXt3]8]D-6O3@&.8^H!s/K(qu@'A+!`9f1,V$O
3]k5AJiruo'0A682`*6@-mK`L&e56R"Tnf,!W2p*)'1%P/i#7B3'')^X#ue4(-=T=3]K#S0J"Ur*>]=u
$3p_:!W`<%r;[3K.53\D6Uj[A:/4TJ:pNn4:JX_\9M%Z=4>e`=+;bb%#mLM7!Wi3!$QL?=/i,FI4[21t
6MNp"6d%h36:*t'5<V%c0e=Xo)AE_j#6b22!<N)u$5jp2.5!A53&s#]hE6BPi]Il93]T,U0eFdu*>fD!
$3p_:!W`?"!"0Yc,Uk?$1cIBT3]k>DJiruo'g"K<3]K#S0J"Ur*>]=u$3p_:!W`?"!"0r!0K2-^7S6?L
:/@ugQV\Al:JOYY8OYp-2(g7!(_[Ac"p>#0!!2ut$QL?=/i,FI4[21t6BjjA6PVpS5sRXt3]8]D-6O3@
&.8^H!s/K(qu@'A+!`9f1,V$O3]m."Jiq(9'0A682`*6@-mK`L&e56R"Tnf,!W2p*)'1%P/i#7B3'')^
N]aa4'g"K<3]K#S0J"Ur*>]=u$3p_:!W`?"!"0r!0K2-^7S6?L:/CLYJl'ci'i.V#:/"5J5s."W-Qj6>
%LE=B!s/N$!"0bj-n[;73^#\m5sj<nJj\`h'gb5Q5X.Cm2DHa0+;tq*$O6h;!W`?"!"'Sc,Uk?$2)mTW
42F%24;Bt@4$#A\1bgR1,97U6%LNFE!s/K(qu@*B*[E0e1,LpL3]]@%4I\GJ4$,Ja3&WTI/1;\_(D72b
#6b22!<N0"%0-AO.53\D6Uj[A:/4TH:pa%6:JX_\9M%Z=4>e`=+;bb%#mLM7!Wi3!$QL?=/i,FI4[21t
6M<cu6d7t56:*t'5<V%c0e=Xo)AE_j#6b22!<N)u$5jp2.5!A53&s#]gcU0Nj?+);3]T,U0eFdu*>fD!
$3p_:!W`?"!"0Yc,Uk?$1cIBT3]k8BJiji34?GVc3]K#S0J"Ur*>]=u$3p_:!W`?"!"0r!0K2-^7S6?L
:/@oeR8=Yp:JOYY8OYp-2(g7!(_[Ac"p>#0!<E&u$QL?=/i,FI4[21t6BX^A6PVpS5sRXt3]8]D-6O3@
&.8^H!s/K(qu@'A+!`9f1,V$O3]m'uJiq.;'0A682`*6@-mK`L&e56R"Tnf,!W2p*)'1%P/i#7B3'')^
h`QKQj?+/=4$#D^2Dd*=-mBZJ&e56R"Tnf,!W2p*+Xo*(4[V\29MS>Y`__7`rD45):JOYY8OYp-2(g7!
(_[Ac"p>#0!W2p**$Qd`1H.?X5<qM$X[AFB'LG,P5X.Cm2DHa0+;tq*$O6h;!W`9%qu@'A+!`9f1,V$O
3]iNfXum@Z3]T,U0eFdu*>fD!$3p_:!W`?"!"0Yc,Uk?$1cIBT3]m1#Jiq.;'g"K<3]K#S0J"Ur*>]=u
$3p_:!W`?"!"0r!0K2-^7S6?L:/?mH[SR]7:JOYY8OYp-2(g7!(_[Ac"p>#0!W2p**$Qd`1H.?X5<qM$
oL"3tcU/F66:!k$4ZYJU/1)JX'G(WW"Tnf,!W2p))':+Q/i#:D3BB7U4G#]X4;0e;3B&cL/LVha(_R;c
#6b22!<N)u$Q1!2.5!A42`NiZ42O+34;Bq>3]]5Y1b^I/+rqI4%LNFE!s/K(qu@*J.53\D6Uj[A:/4Ta
:n(8r:JX_\9M%Z=4>e`=+;bb%#mLM7!Wi9#%0-AJ+t,'"2`a)d5X@_u6aT2q6:*t'5<V%c0e=Xo)AE_j
#6b22!<N)u$5jp2.5!A53&s#]ofRggb<-G"3]T,U0eFdu*>fD!$3p_:!W`?"!"0Yc,Uk?$1cIBT3]l.[
Jir0X'g"K<3]K#S0J"Ur*>]=u$3p_:!W`?"!"0r!0K2-^7S6?L:/Af)Jl!7[:esk^:/"5J5s."W-Qj6>
%LE=B!s/N$!"0bj-n[;73^#\m5shV>R6q`V6:!k$4ZYJU/1)JX'G(WW"Tnf,!<E&u$5jp2.5!A53&s#]
OZ]j1'0A682`*6@-mK`L&e56R"Tnf,!W2p*)'1%P/i#7B3'')^pcO-jb<-M$4$#D^2Dd*=-mBZJ&e56R
"Tnf,!W2p*+Xo*(4[V\29MS>Yhb\o$jA6Re:JOYY8OYp-2(g7!(_[Ac"p>#0!W2p**$Qd`1H.?X5<qM$
`^>>FrBh;d6:!k$4ZYJU/1)JX'G(WW"Tnf,!W2p))':+Q/i#:D3BB7'4I&#A4$#A\1bgR1,97U6%LNFE
!s/K'!W2p*)'1%P/i#7B3'')^PWZ04'g"K<3]K#S0J"Ur*>]=u$3p_:!W`?"!"0r!0K2-^7S6?L:/C^_
Jl'Qc'i.V#:/"5J5s."W-Qj6>%LE=B!s/N$!"0bj-n[;73^#\m5sgT![R1cr6:!k$4ZYJU/1)JX'G(WW
"Tnf,!W2p))':+Q/i#:D3BB7n4G#]?4;0e;3B&cL/LVha(_R;c#6b22!<N)u$Q1!2.5!A42`NiZ452lL
4QnmB4$,Ja3&WTI/1;\_(D72b#6b22!<N)u$R$rQ2a'Mt8k_uT:Voq[:_cc%:/4JS76s$n/ghbY'+P<Q
"9S]+qu@*E+t,'"2`a)d5X@`96^pFX6:*t'5<V%c0e=Xo)AE_j#6b22!<N0"$ig8F+!`9f1,V$O3]iBb
Z9/d^3]T,U0eFdu*>fD!$3p_:!W`?"!"0Yc,Uk?$1cIBT3]m$tJiq:?'g"K<3]K#S0J"Ur*>]=u$3p_:
!W`?"!"0r!0K2-^7S6?L:/B\BJl(T+'i.V#:/"5J5s."W-Qj6>%LE=B!s/N$!"0bj-n[;73^#\m5siLW
JjU>A6UF+*5X.Cm2DHa0+;tq*$O6h;!W`?"!"'Sc,Uk?$2)mTW4/tE04;9k<3B&cL/LVha(_R;c#6b22
!<E3!!"0Yc,Uk?$1cIBT3]iKeZ9/j`4$#D^2Dd*=-mBZJ&e56R"Tnf,!W2p*+Xo*(4[V\29MS>YpeZQ=
b>8pL:JOYY8OYp-2(g7!(_[Ac"p>#0!W2p**$Qd`1H.?X5<qM$ha;u_j?jYK6:!k$4ZYJU/1)JX'G(WW
"Tnf,!W2p))':+Q/i#:D3BB7@4G#]m4;0e;3B&cL/LVha(_R;c#6b22!<N)u$Q1!2.5!A42`NiZ40:W3
4;9k=3]]5Y1b^I/+rqI4%LNFE!s/K'!W2p*+Xo*(4[V\29MS>YPYeS\'i.V#:/"5J5s."W-Qj6>%LE=B
!s/N$!"0bj-n[;73^#\m5skE8Jj[XI'gb5Q5X.Cm2DHa0+;tq*$O6h;!W`?"!"'Sc,Uk?$2)mTW4,lA0
4;0e;3B&cL/LVha(_R;c#6b22!<N)u$Q1!2.5!A42`NiZ47kXe4O6,)4$,Ja3&WTI/1;\_(D72b#6b22
!<N)u$R$rQ2a'Mt8k_uT:YS]t;!:^j:JX_\9M%Z=4>e`=+;bb%#mLM7!Wi3!$QL?=/i,FI4[21t6Gc*A
6PVpS5sRXt3]8]D-6O3@&.8^H!s/K(qu@'A+!`9f1,V$O3]j9&R62-E3]T,U0eFdu*>fD!$3p_:!W`?$
!"Ao.)'1%P/i#7B3'')^O?Bm4'g"K<3]K#S0J"Ur*>]=u$3p_:!W`?"!"0r!0K2-^7S6?L:/CR[Jl']g
'i.V#:/"5J5s."W-Qj6>%LE=B!s/N$!"0bj-n[;73^#\m5sjBpJj\Zf'gb5Q5X.Cm2DHa0+;tq*$O6h;
!W`?"!"'Sc,Uk?$2)mTW42X144T.AU4$#A\1bgR1,97U6%LNFE!s/K(qu@*B*[E0e1,LpL3]]@'4IJ;I
4$,Ja3&WTI/1;\_(D72b#6b22!<E3!!"0r!0K2-^7S6?L:/@$LZ;;93:JOYY8OYp-2(g7!(_[Ac"p>#0
!W2p**$Qd`1H.?X5<qM$pd9X#b<m"26:!k$4ZYJU/1)JX'G(WW"Tnf,!W2p))':+Q/i#:D3BB7Y4G#]T
4;0e;3B&cL/LVha(_R;c#6b22!<N)u$Q1!2.5!A42`NiZ42sC74T.AW4$,Ja3&WTI/1;\_(D72b#6b22
!<N)u$R$rQ2a'Mt8k_uT:T[H[:_Z]$:/4JS76s$n/ghbY'+P<Q"9S]*!W2p**$Qd`1H.?X5<qM$PXDZB
'gb5Q5X.Cm2DHa0+;tq*$O6h;!W`?"!"'Sc,Uk?$2)mTW48D!j4NBPt4$#A\1bgR1,97U6%LNFE!s/K(
qu@*B*[E0e1,LpL3]]?_4LR?e4$,Ja3&WTI/1;\_(D72b#6b22!<N)u$R$rQ2a'Mt8k_uT:\7J8:sVrQ
:JX_\9M%Z=4>e`=+;bb%#mLM7!Wi3!$QL?=/i,FI4[21t6JFkZ6g-lP6:*t'5<V%c0e=Xo)AE_j#6b22
!<N)u$5jp2.5!A53&s#]_*!<3'g+T?3]T,U0eFdu*>fD!$3p_:!W`?"!"0Yc,Uk?$1cIBT3]j<'RlhEI
4$#D^2Dd*=-mBZJ&e56R"Tnf,!WE'.!!"/k0K2-^7S6?L:/?sJZqqK5:JOYY8OYp-2(g7!(_[Ac"p>#0
!W2p**$Qd`1H.?X5<qM$p-XF!bsN446:!k$4ZYJU/1)JX'G(WW"Tnf,!W2p))':+Q/i#:D3BB7W4G#]V
4;0e;3B&cL/LVha(_R;c#6b22!<N)u$Q1!2.5!A42`NiZ42a754;U+B4$,Ja3&WTI/1;\_(D72b#6b22
!<N)u$R$rQ2a'Mt8k_uT:TI<[:_li&:/4JS76s$n/ghbY'+P<Q"9S]+!;um**$Qd`1H.?X5<qM$P!cNB
'gb5Q5X.Cm2DHa0+;tq*$O6h;!W`?"!"'Sc,Uk?$2)mTW481jh4NT]!4$#A\1bgR1,97U6%LNFE!s/K(
qu@*B*[E0e1,LpL3]]@[4G#]V4;Bq>3]]5Y1b^I/+rqI4%LNFE!s/K(qu@*J.53\D6Uj[A:/4U):kDOB
:_cc%:/4JS76s$n/ghbY'+P<Q"9S]+qu@*E+t,'"2`a)d5X@`=6^L.S6:*t'5<V%c0e=Xo)AE_j#6b22
!<</u!"'Sc,Uk?$2)mTW4-Me04;0e;3B&cL/LVha(_R;c#6b22!<N)u$Q1!2.5!A42`NiZ48M'k4NT]#
4$,Ja3&WTI/1;\_(D72b#6b22!<N)u$R$rQ2a'Mt8k_uT:QA8[:_cc%:/4JS76s$n/ghbY'+P<Q"9S]+
qu@*E+t,'"2`a)d5X@a/6\7\O6PVpS5sRXt3]8]D-6O3@&.8^H!s/K(qu@'A+!`9f1,V$O3]l%XJir0X
'0A682`*6@-mK`L&e56R"Tnf,!W2p*)'1%P/i#7B3'')^_E<E4'g"K<3]K#S0J"Ur*>]=u$3p_:!W`?"
!"0r!0K2-^7S6?L:/@icRnshq:JOYY8OYp-2(g7!(_[Ac"p>#0!WE'.!!!u_-n[;73^#\m5sgZ#ZpPQp
6:!k$4ZYJU/1)JX'G(WW"Tnf,!W2p))':+Q/i#:D3BB7p4G#]=4;0e;3B&cL/LVha(_R;c#6b22!<N)u
$Q1!2.5!A42`NiZ45E#N4Q\a@4$,Ja3&WTI/1;\_(D72b#6b22!<N)u$R$rQ2a'Mt8k_uT:W-(]:_ur)
:JX_\9M%Z=4>e`=+;bb%#mLM7!Wi3!$QL?=/i,FI4[21t6E<JA6P`!T5sRXt3]8]D-6O3@&.8^H!s/K(
!;um))':+Q/i#:D3BB6a4Kpp]4$#A\1bgR1,97U6%LNFE!s/K(qu@*B*[E0e1,LpL3]]@t4G#]=4;Bq>
3]]5Y1b^I/+rqI4%LNFE!s/K(qu@*J.53\D6Uj[A:/4UB:kDO):_cc%:/4JS76s$n/ghbY'+P<Q"9S]+
qu@*E+t,'"2`a)d5X@`V6\7](6PVpS5sRXt3]8]D-6O3@&.8^H!s/K(qu@'A+!`9f1,V$O3]jE*Pro[@
3]T,U0eFdu*>fD!$3p_:!W`9%qu@*B*[E0e1,LpL3]]?e4Kpp_4$,Ja3&WTI/1;\_(D72b#6b22!<N)u
$R$rQ2a'Mt8k_uT:\mn>:ruNK:JX_\9M%Z=4>e`=+;bb%#mLM7!Wi3!$QL?=/i,FI4[21t6B4FA6PVpS
5sRXt3]8]D-6O3@&.8^H!s/K(qu@'A+!`9f1,V$O3]lpqJiq:?'0A682`*6@-mK`L&e56R"Tnf,!W2p*
)'1%P/i#7B3'')^gH:'MkWBSA4$#D^2Dd*=-mBZJ&e56R"Tnf,!W2p*+Xo*(4[V\29MS>Y_GGh\'i.V#
:/"5J5s."W-Qj6>%LE=B!s/N$!"0bj-n[;73^#\m5shP<RmRoW6:!k$4ZYJU/1)JX'G(WW"Tnf,!WE'-
!!!lY,Uk?$2)mTW4-)M04;0e;3B&cL/LVha(_R;c#6b22!<N)u$Q1!2.5!A42`NiZ48(dg4O#u'4$,Ja
3&WTI/1;\_(D72b#6b22!<N)u$R$rQ2a'Mt8k_uT:Yej!;!(Rh:JX_\9M%Z=4>e`=+;bb%#mLM7!Wi3!
$QL?=/i,FI4[21t6Gu6C6Pi*W6:*t'5<V%c0e=Xo)AE_j#6b22!<N)u$5jp2.5!A53&s#]W]ZV1'K\?9
2`*6@-mK`L&e56R"Tnf,!<E&u$Q1!2.5!A42`NiZ4-D_34;Bq>3]]5Y1b^I/+rqI4%LNFE!s/K(qu@*J
.53\D6Uj[A:/4U[:kDNe:_cc%:/4JS76s$n/ghbY'+P<Q"9S]+qu@*E+t,'"2`a)d5X@`o6\7\d6PVpS
5sRXt3]8]D-6O3@&.8^H!s/K(qu@'A+!`9f1,V$O3]k;CJirom'0A682`*6@-mK`L&e56R"Tnf,!W2p*
)'1%P/i#7B3'')^XZVq4'K\B;3]K#S0J"Ur*>]=u$3p_:!W`9%qu@*J.53\D6Uj[A:/4TL:p<b2:JX_\
9M%Z=4>e`=+;bb%#mLM7!Wi3!$QL?</M]7G4[)+r62Ep"6HMP/5s[b$5!1h_0e4Om)AE_j#6b22!<N)u
$Q1$2.4m;32`NiZ4,uG34;Bq>3]]5Y1b^I.+rqL5%LNFE!s/K(qu@*B*[<'b0f1dJ3BB4n4+]Q?48q8R
3B/oQ0J"Rq*>]=u$3p_:!W`?"!"0r!0/bpZ77g-H:/9P>JktT+r_=)#91VK:4#AN:+;bb%#mLM7!Wi3!
$QC6:/M]7G4Zu"p5f,g=62j+^5<V+h2)-U-*uPb($O6h;!W`?"!"0Vb,:P3"1cIBS3]a6%RlgU1&ihp0
1b^I.+rhC3%LNFE!s/K(rW!?,!#Qb%-nR/12E*TUO#jR-'0/$22D[$<-R'NH&e56R"Tnf,!W2p)+=Jm$
4@2J.8k_tP:4c6a:(p>q8k;B94#AN9*uGY$#mLM7!Wi3!$6(-8/29%C4$>blgd$HVj?OAC5!:qd1b^F+
*uP_&$O6h;!W`?"!"'Pa,:G,u1c@9P3Q!n03rM)Q3B/rT1G:7++WM:2%LNFE!s/K(qu@*A*[3!`0JbRE
3&iq!3gi#E3B9&Y2Dd0B.jcDZ(D.)`#6b22!<E3!!"0nt/i>aW77TpB9ML[FZ;)-/9h\2O7RTI%1Fsjp
(D72a"p>#0!W2p*)B^=V0Jk^L4?Yhkpcj?pb<H_*5!;%k3]AiJ.O6)R'+YET"Tnf,!W2p*(`aeJ.k`Y8
2E*TTh`69Kj>m3!&iV^*1+k((+WM71%LE=C!s/K(qu@'?*?lj]0/>@B2E/T7JiNWe'/qg-1bgU4-6O6C
&If$N"Tnf,!W2p*+=A`t3^5u$84cEHX\>'T'MD(k8Ou9:4ZP;K,p!j8%1!.@!s/H'qu@'A+!iBh1H%3R
4$8]iY!!F\4$#;X0eOk!*>fG"$3p\9!W`?"!"0S_+XSZk0f(XE2E1IlJiLk3'fS'02Dd0C/L_tg)AWno
#mLM7!W`?"!"0S^+XSZk0JYIB2E$RS[Q"1D&iDL$0J"Xu+;tt,%1*4A!s/K(qu@*H,qLi34[DJ)7n?5D
8qK[]8ejoh84Q*95Wgt[.O,rM&If!L"9S]+qu@'@*[<'b0f(^H3'#\RJi`$T'0/$22)?m9-R'NH&e,0Q
"9S]+!W2p*()nAB.4d)+1,CaD_DQp&r\P6D1,(=2-R0]O'bCc["p>#0!<N)u$5FL&,Ub2r0JYC>W&0o!
'/MC!0J4h&,9@^;&.AjL"9S]+!WE'.!!"#b.PWhC4[DG'77E;-Zpt$`&k#)P4ZP>P.3]`I&.AgJ"9S]+
qu@'?*$HUX/hf(<2)b+dJiCk3&2lC&1,(7-,p+'A&.JpM"9SQ'qu@'=)'0tK.4[#(0JV?<JhlCB&2>jl
/Lr4q+WM=5%h&^I"9SQ'qu@'=)'0tK.4[#'0JLC!Jhd3Y&25dj/Lr4p+WM=4%grXH"9SQ'qu@'D+Xeou
2`a)c5XDD:QU2BP5X%:k2)-X/+;tq)$O6h;!WiB&r;[3?)'0tL.P*2+0ekGH1U8eL1,:R=0J4n*,pF?I
'G(ZY"p>#,!W2p*',MT0,:4fg.kE8(pb%.Nb:`cG%kK4\-m^&Z)AWqq$O6h;!r`5u!"0GV)]p:O-n6_u
/1oa3JhH+:&hP[d/1W1u,pFBK((q)b#6b22rW2os$Q1$3.5*J73'',`4N9O94oIPC4;'_:3&NHC.3flN
'+P?S"Tnf-!W2p*',MT0+sn]f.kE5'XY,qm'J1mf/1W.t,pFBK((q&`#6b53!<E0$qu@'9'c7o4,:"T`
-n(9.Xsjo1-mp;d+WhX?'G(ZZ#6b22rW2os#S@dg*$6@M-78^?qC."FaXR0:%ONJI+W_R='+bQY#6b22
rW2os$Psd*-7LQ$1G^mG2NB`)2\e5/2)R0F0J"Xu+;u",%1*4B!s/K(qu@'8'Gqc2+X89Z-7AC5Jgekl
%jr\M,U+?O)Aa%u$jm4B"8r8u!"'5L()S#4+<_pR,MFDp,j$?_,9nBU*uu7:'bUua#mLM7r;lfr$4daa
(`OM=+X/*T_'FUX&L8VH+sJ-O*?#_/&Io0T"p>&,!W2p)'Gqi5,q(5o/M8]T0UXU.0.nh,.46>_*#B7u
$j[">!WiB'rW!?,!"KST(E+87+!;^MO!:kR%j<)=*uu==()%5g$4$h="9&>u!"'/H&eu6%)]Tk>*q^V,
+3P`:*Zc=A)As>*&e>BW#6b23rW2lr#Rq:W'c.`,*$*`SJf`nm%36B+)&Eu!%h&aL"Tnl+!W)j(&JZ-&
+<i'X-R^C\.=s#I.2"$W-RBu\*uc"1&.JsO"U"l.!W)j($P!^]'c.`*)B0Wq*1%WU)]K\5(`!i"&.K!Q
#6Y,1rW3$!r;['0%1a$a'c%Vb(m,]?)?(H](D[\u&Io3V#6k;5!r`5t!"'&B%hTHi()Ic()#"o")9Ea,
(`4&*'bh;n%L`[L"p>#0rW2lr#7_=[(E"26+9!D>+bCls+oWSp*uu:<(D@>i$4$e<!s/K(qZ$m.$OmUY
',)&p_\Rh>q%aAR'GD)j%h/jP#6b53r;lcq#RCbG%M03b&eh8ZP8"E=&eY`d%L`XL"pG)1r;lcq#7(YF
%1a$_')`K.'X/;L'+5Eb&.]3X#m^_=!s8E%qZ$m0%M06f(Ddo+rYkVPJfDfNr>H+_(`*r%&e>EZ#R1G7
!r`5t!!WZ6$4@:Q&,[!!&[i;K&./pW%1<LK#6b54!r`5s!!NQ3#mq(MrXSo<oFQTccOg$crXK5C$jm:G
"pG)2!r`5s!!ic6#mq%L%1Wm#%tY>Q%h&pX%1EUO#mUY<!s8W(!Vud%#RUtM%hTEf'E/]_'nR2!'Ftij
&eGQ`$jm7E"U"o/!<N#s#6b;:#RUnH$iLL5%@[h)$jm@L$4-tC"pG,3!rW/t!<3'!"oei-$3(A2$]ke(
%/^J?$4."E#6k>8!s8W'!Vufr"oei-$3(A'$\Ac-$OR4I#m^b?"U+u1!rW/r!!NQ3#mq(Mq[VEmJe-uS
q[NrB$k!CJ#6k>7!s8H&q>^U#"9f#/#Q4qG$%`K^$2k//#6b;8"9\f.r;l]o"9Sc1"U=i/WX+psr!*H2
"pG/5!s8W'!W<#s!!EB,"U,,-#E]:r#lFo4"pP57"9S`-r;l]o"pG/7#7(VBr<i9,Jd][.r<`i;#RCY>
"U,#2!r`5r!!*-'rWN0'g]i?7i!0/ar<*-'!rN)o!!!*"!rrJ="bHpO"oe`)!rrE#!VcWp!r`9%"Ju?a
"oe`)!rrE#!WE)r!!*0)rWW6)OU%rmrW`<)!sA]-!r`5q!!!'!!r`;p"G-co"TAN'!rE#m!!!'!!epfZ
"9/H"!VZQo!WE/e"+gWp"9/H"!VZQo!r`<$"P*a."l]^b"TJT'!r`5p!;ll0!eLLL!r2lj!;lkl!g<]]
!VcZp!;lkS!iuJ!!VQKn!W<)g"+gWo"8r<"!VQN@!J1@)!V?B%!J1@B!V?Aa!K.!R!;uoq!K.#[!r;ri
!:0`<!Pea+!7Lt#!SIMD!4i2_!V-9]!20FP!VZSG!.k3&!3Q<R!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&
!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3R!.k3&!.k3&!.k3&!.k3&!.k4N!.Y~>

%%EndBinary
grestore
np
grestore
gsave
279.207 105.03 mo
390.501 105.03 li
390.501 2.664 li
279.207 2.664 li
279.207 105.03 li
clp
383.283 33.084 mo
279.207 33.084 li
279.207 9.801 li
383.283 9.801 li
383.283 33.084 li
gsave
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
/1 /CSA get_res setcolorspace
clp
[1 0 0 -1 210.249 133.917 ]ct
[104.64 0 0 23.76 68.631 100.597 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 436 
/H 99 
/M[436 0 0 -99 0 99 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 436 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 436 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 436 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 436 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&NrXb3
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLi3JcLB&
JcLB&JcLB&LB.5QJcUH(JcYQGg&SJ\JcUH(^B*$glN)S<JcUZ.qZ,OSUB,rIJcX4!joE[-JcUH(NWJeQ
r;_QQJcUH(ecG:@]`E]cJcVJEnGn.AJcUH(g&^^D\H.9_JcVMFoDn@]JcUH(JcY'9oDkfjJcUH(YlXIs
quPj[Jc^N*JcYoRq>p3gquN;hJc^N*a9)/<p&P!kdfP+&Jc_&9q#U<lr;c`rMZSJ3JcaU,q#U0h!!3$"
_?5AlJch_LrW;uup&G-p!Wr<&M$/D5Jcss6rWE0%qZ6Ek!W`?(]E<`fJchhOrrW&upAb6q!WqrqJcgT,
JckBBrrW&upAb6r!sAK)Y6BL]Jd&[grWN6'rW<'"pAb3q"9&H&"m6)A#(d&3"onf,"o\W+!s8W&!VcWp
!r`9%"IoXI"bHp""oe`)!rrE#!VcWp!r`9%"OdO+"bHo@"oe`)!rrE#!W2rr!!*0)rWW9*NX(.@Jd:'9
rs&H+"9\i0!Wr?%p](C!"9f#/#Q>"L$%`J8$)\+/#lY&4"pG,4!s8E%q#CO""9er5r!//dJd?r6iX#Ge
"pP57"9S`-r;l]o"9Sc1"U=l0_[(i"JdAC_r!*E1"U,#2!s8E%q#CU&"U52;#mpS<q?ql_Jd[/<o*bO)
#mgnD#6k>8"9S`)!Vl^#"U52;$47.KrX?+BJdm;@]aarL$4@1J#m^b?"9\f.r;l`prrrE-rsA]4rX8!"
Jdd5>L(+%h!"'#=#m^b?"U"o0!rW/r!<36&#QG,1$D.]X$\Ac0$OR4I#m^b?"U"o0!rW/r!!NQ3#mq(M
r!qBjJe*GDQOj$)$4RCO$4$k?"U"o/rW2uur;[$,#mq(M%M/IKOqE9XJe?oQr"'2G%1N[P#R:M9!s8H&
q>^['#RLkI%K6k:&'5B7&:tIm&H34>%LEOP$4-qA"Tni.rW2iq#R1P@$O[CQ%M"C-Je*GDi=?>,%LigS
$4-qA"Tni.rW2iq#RCeI%M'-a',1?Z`>*t>JebC&rY,kV'+tie%L`[M"pG,3!W`>u!!il=%1a$a',22W
(4m<R(4m=m((:ol'+tid%13@G"U"o+!Vud%#RUtM&.oNf'<r7''S7%2'FYWf&eGQ_$jd.C"Tni*!Vud$
#RUtL%hTBdr=eK2JeWeNL_Tb#!"oVN&.]3X#mUY<!s8H&q>^d/%M06f(Ddo+rYhONJfB:\cl;p%%iH3#
().>k%13@F"Tnf,!Vud&$k<g^()Ii+)B7<KJfK@^Q5gGT)AsA-'G:rd$4$h=!s/K(rW)ls#n%1Q&el&r
(Dn!N)1i`X);Z5B(`4&)'G:re$jd.B"9S]+!Vud&$OmUY',;9!(Dt11Jf0.XV\p$_(Ddf#&eGN]#mUV:
!s/K(q>^g3&JQ$"*$-1E+H.Iq+bCls+V5b=*uu:;()%5g$3p_;!s/N"!"'2J'GhZ-*ZlLJ+iGRV,(_#?
+qGh?+<MUD)&<ks%13=E"9\W(qZ$s4&/#]p)B0Y:*Zk2#JffRdJfjV,%iuc4*#]\1'G:la#mUV9"9&>u
!!j#E&eu3#)]Tm'*eGGb*kNI&*?,n7().>j$OI%A!sAN'qZ$s8'c7o5+s\K_-n+@0Jgl:#L+*3Q-mp;N
,9\*I(D@;g#mUV:!WiE"!"'8O(`XV@,:+W`-_`#@."Wkm-k@[Q,pa`X*?#\,%h&aL"9\T'qu@'7&f)?)
*ZuUM,9tkeJg>pnQR!(d,9e9Q*?#b/&Io0S"p>&,!<<,u!"'5L'c@r3+<_pR,EX7',_@<!,S)+E+sA$K
)Aa)"%1<FG"9\T'qu@'<(`abG-n6c"0/(C#JhVd1W%\l<0.e_(-R0`Q(D72c#R(>4!W`?"!"0GV)]p:O
-n6_u/M2u8JhDX-jY$Na%kK4\-m^&Y)&<eo$3p_;!r`5u!!s5P(`XYC,UOle_^U0dJgm`L%k&eP,U"6K
(DIDi#mUV9!r`5u!!j/O(`XYB,UOo<./YNG.=s"#.J>4h-k7UO,U"3J(D@;g#mUV9!r`5u!"0S_+=8Qj
0JbOC2E%p$JiA9?^Gl-M&iDL%0J"Xu*uYk+%1*4B!s/K(qu@*>)'0tL.P*2+0ekHL1P.E71Pdgj1,:R=
0J3bb.4$,W(_[Gg#R1D5rW2os$PO<q+!W*\.P!&%/YaqM/qP_&0)dF5/1W1u,p=<J((q)a#6b22rW2os
$PO<q+!W*\.P!&$/_Vh//qP^D/eT`f/1`;$-m^#X)&3_n$3p_:!r`3#!;um*)':+Q0/GIF3]fGdP!+C[
Jj&'Ur]CfT3]JuP/1;\_(D@8c#6b22!<N)u$5X[*,q:N$1GgsIa>\]0JiBVe&2lC&1,(7-,Tdp>&.JpM
"9SQ'qu@'=)'0tK.4[#(0JSPBJhhp5j"_0#0J>".-m^#V(_[Dg#R(>4rW2os$PaO#+sn`h/hSh30uYo"
14h9a1(l;r0JG+2.juYc)]'.u$O?n=!r`5u!"0bi-nR563^#Yl5skK:JjY,WJj]6!'gb5Q5X%:k2)-U-
+;kk($O6h;!W`?"!"'Sb,:G,u1c@9Q3O:bu3eBE+3YOM62`3BE.jcDZ((q&`#6Y,1!<N)u#Sn@%,q1Au
0f&_blSX8OJi/?ArA4O10Focd-R0ZM'G(ZZ"p>#0!<N)u$5OR',Ub2r0JYF?U,7HYJi(b0'/MF"0J4h%
+s%U9&.AjL"9S]+!W2p'*[E3i2EO)g6iKO.7Y4*]7[ZaE71qsQ4ZP;N-m9NF&.AgJ"9SZ*!;um))':.S
/i,CF3]fHd4b>hK4l8C94?GS_2)-[2+rqI5%13=C!s/K(qu@*@*$HXY/ho.=2E!M93.a,A33"qQ2`EWQ
1bpa:.3ouR'bLi\"p>#0!<N)u$Psa*-7UW%1,LjH2NB_J2hF!M2uY]J2)I'B/1;bc)ANhm#mLM7!W`?"
!"0kp/2K7K5t".384gcmJkCVeY"BF#8Ou??6U3al0I\4d(D%#]"U"o.!W2p*)B^=V0Jk^L4?Yklr',ct
Jj4iOp-8O?&j8?<2`!'8,9@[8%LNFE!s/K(qu@!>*?lj]0/>CCr]%8FJiSEC^H)6P&N2I$/h/.i)\s%q
#mLP8!W`?"!!sG^+t"lo1,LmJkr=8SJiJHD!]N"o%l#[d,p4-A&If$N"Tnf,!W2p*+=A`t3^5u$84lNJ
UJ-85JkXNbr_!kr84>j.3&2s/*>]:s#R1D6!<N)u$6(-8/29%C4$>blfg(-SJj>Yf'L+cE3]JrL.O6)R
'+PBT"Tnf,!<E&u$5ag/-nR/12E*TUOZJ(TJi_dM'0/$22)?m9-6X?E&e,0Q"Tnf,!W2p*(`jkL/2/k;
2E3ZVaZ>#7Ji]nm'fe963&WTK0.J:k)\s"p$3p_:!W`?"!"0nt/i>aW77TpB9MLOBJkgnmj\?Ob9h\2O
7RTI$1Fjam(D.,`"p>#/!W2p*)^-R\1,h6W4[21s`Bf)AJjHP*r]h)\4Zk_^0InFk)&*Sh#6b22!<N)u
$Q'p0.4m;32`NfY3rD'k4+]PG48(c83YFG42Dd*<-QsHF&e56R"Tnf,!W2p)(`jnM/MT(?2`Nh(3eBDE
3k[Qf3B/rU1GC=++WD10%13=D!s/K(qu@'H-ndJ@6:FI<9MOeIJkgnmL/%hF9M.hd76imi/0u>S&e53P
"9SZ*qu@*E+t"rt2`a)c5X7W16@qOU6I8%65s[b$5!1h_0InFk)&*Sh#6b22!<N)u$Q1$2.4m;32`NiZ
45)fK4G#\`4;L"?3]]5Y1b^F-+rhC3%LNFE!s/K(!;um*)'1"N/MT(?3&s#\Oun7WJihpQr]1ZP3&WQH
.jcG[(D7/a#6b22!<N)u$R$rP2EX;p8P;cQ:<?:`:P)BB:]=*%9hS#G5WU\Q-6F';%LE=B!s&H#!"0bj
-n[;73^#\m5sgT!JjY,Wj[0bL6:!k$4ZYJU.jZ8T'FtQV"Tnf,!W2p))':+Q/i#:D3BB7?4G#\I4KLXY
4$#A\1bgO/+rhC3%LNFE!s/K(qu@*B*[E0e1,LpL3]]A#4G#\I4G#]h4;Bq>3]]5Y1b^I.+rhC3%13=D
!s/K(qu@*J.53\D6Uj[A:/4Tl:kDMq:qogA:JX_\9M%Z=4#AN9*uGV##mLM7!<N)u$QL?=/i,FI4[21t
6L.!j6\7[]6NoeC5sRXt%luU'.jZ8T'FtQV"Tnf,!W2p))':+Q/i#:D3BB6r4G#\I4O-&&4$#A\1bgO/
+rhC3%LNFE!s/K(qu@*B*[E0e1,LpL3]]@V4G#\I4IJ;I4$,Ja3&WTI/12V](D7/a#6b22!<E3!!"0r!
0K2-^7S6?L:/@$LJl%%qiD:7b:JOYY8OYp,1bC$r(_R;b"p>#/!W2p**$Qd`1H.?X5<qM$a[:YIJjZP*
'gb5Q5X.Cm2DH^.*uPb'$O6h;!W`?"!"'Sc,Uk?$2)mTW4,l@S4G#]U4;0e;3B&cL/12V](D72b#6b22
!<N)u$Q1!2.5!A42`NiZ42j=64G#\u4;Bq>3]]5Y1b^I.+rhC3%13=D!s/K(qu@*J.53\D6Uj[A:/4U_
:kDMq:kDO;:_cc%:/4JS76s!l/LDPV&e53P"9SZ*qu@*E+t,'"2`a)d5X@`D6\7[W6bbu'6:*t'5<V%c
0e4Ol)&*Sh#6b22!<N)u$5jp2.5!A53&s#]l9'Y\JincM"$8P(2\.`"/12V](D72b#6b22!<N)u$Q1!2
.5!A42`NiZ4/4oi4G#]B4;Bq>3]]5Y1b^I.+rhC3%13=D!s/K(qu@*J.53\D6Uj[A:/4U=:kDMq:mk,q
:JX_\9M%Z=4#AN9*uGV##mLM7!<E3!!"0bj-n[;73^#\m5sg`%JjY,WiBn>H6:!k$4ZYJU.jZ8T'FtQV
"Tnf,!W2p))':+Q/i#:D3BB7C4G#\I4K(@U4$#A\1bgO/+rhC3%LNFE!s/K(qu@*B*[E0e1,LpL3]]?_
4G#\I4QS[?4$,Ja3&WTI/12V](D7/a#6b22!<N)u$R$rQ2a'Mt8k_uT:W6.^:kDNH:_cc%:/4JS76s!l
/LDPV&e53P"9SZ*qu@*E+t,'"2`a)d5X@a76\7[W6\7]!6PVpS5sRXt3]8]C,p+!=%grUG!s/K(qu@'A
+!`9f1,V$O3]jZ1JinWI]fZri3]T,U0e=[r*#B4t$3p_:!W`?"!"0Yc,Uk?$1cIBT3]lXiJinWILcbi&
4$#D^2@hVu/12V](D7/a#6b22!<N)u$R$rQ2a'Mt8k_uT:SUa<:kDNj:_cc%:/4JS76s!l/LDPV&e53P
"9SZ*qu@*E+t,'"2`a)d5X@`j6\7[W6^^:W6:*t'5<V%c0e4Ol)&*Sh#6b22!<E3!!"'Sc,Uk?$2)mTW
4-;XW4G#]Q4;0e;3B&cL/12V](D72b#6b22!<N)u$Q1!2.5!A42`NiZ439U:4G#\q4;Bq>3]]5Y1b^I.
+rhC3%13=D!s/K(qu@*J.53\D6Uj[A:/4TF:kDMq:utLg:JX_\9M%Z=4#AN9*uGV##mLM7!<N)u$QL?=
/i,FI4[21t6H)<D6\7\.6PVpS5sRXt3]8]C,p+!=%grUG!s/K(qu@'A+!`9f1,V$O3]m4$JinWIJirZf
'0A682`*6?-R'NH&e56R"Tnf,!W2p*)'1%P/i#7B3'')^Zoiq&Jipe1'g"K<3]K#S0J"Rq*#B4s$3p_:
!W`?"!"0r!0K2-^7S6?L:/C1PJl%%qLen7N:JOYY8In6U4#AN9*uGV##mLM7!<N)u$QL?=/i,FI4[21t
6DHo"6\7\P6PVpS5sRXt3]8]C,p+!=%grUG!s/K(qu@'A+!`9f1,V$O3]l"WJinWIQTPsD3]T,U0e=[r
*#B4t$3p_:!W`<%r;[3C*[E0e1,LpL3]]?c4G#\I4Q/C;4$,Ja3&WTI/12V](D7/a#6b22!<N)u$R$rQ
2a'Mt8k_uT:WZFb:kDND:_cc%:/4JS76s!l/LDPV&e53P"9SZ*qu@*E+t,'"2`a)d5X@_s6\7[W6fgZM
6:*t'5<V%c0e4Ol)&*Sh#6b22!<N)u$5jp2.5!A53&s#]`&rW6Jip+s'0A682`*6?-R'NH&e56R"Tnf,
!W2p*)'1%P/i#7B3'')^r&fQnJinWIp,j'O4$#D^2Dd*=-R'NH&e,0Q"Tnf,!W2p*+Xo*(4[V\29MS>Y
Zqu?NJl'3Y'i.V#:/"5J5s$nT-6F';%LE=B!s&H#!"0bj-n[;73^#\m5sjm)JjY,WLdM>46:!k$4V'S3
0e4Ol)&*Sh#6b22!<N)u$5jp2.5!A53&s#]U-+#iJiq=@'0A682`*6?-R'NH&e56R"Tnf,!W2p*)'1%P
/i#7B3'')^g,ssLJioG`(-=T=3]K#S0J"Rq*#B4s$3p_:!W`<%r;[3K.53\D6Uj[A:/4TJ:kDMq:uP4c
:JX_\9M%Z=4#AN9*uGV##mLM7!<N)u$QL?=/i,FI4[21t6HMTH6\7\*6PVpS5sRXt3]8]C,p+!=%grUG
!s/K(qu@'A+!`9f1,V$O3]i<`JinWIj#du:3]T,U0e=[r*#B4t$3p_:!W`?"!"0Yc,Uk?$1cIBT3]k;C
JinWIXumF\4$#D^2Dd*=-R'NH&e,0Q"Tnf,!W2p*+Xo*(4[V\29MS>Yr(quAJl%%qp.uK":JOYY8OYp,
1bC$r(_R;b"p>#/!W2p**$Qd`1H.?X5<qM$ZpTF4Jj[:?'gb5Q5X.Cm2DH^.*uPb'$O6h;!W`?"!"'Sc
,Uk?$2)mTW46eq[4G#\M49IZ+3B%I*0e=[r*#B4t$3p_:!W`?"!"0Yc,Uk?$1cIBT3]j*!JinWIco`%)
4$#D^2Dd*=-R'NH&e,0Q"Tnf,!W2p*+Xo*(4[V\29MS>Yg/*AtJl%k3(/I_$:/"5J5s$nT-6F';%LE=B
!s&E&r;[3F+t,'"2`a)d5X@`"6\7[W6fCBI6:*t'5<V%c0e4Ol)&*Sh#6b22!<N)u$5jp2.5!A53&s#]
a?5&:Jioto'0A682`*6?-R'NH&e56R"Tnf,!W2p*)'1%P/i#7B3'')^N]_nUJir-W'g"K<3]K#S0J"Rq
*#B4s$3p_:!W`?"!"0r!0K2-^7S6?L:/Ai*Jl%%qY##j/:JOYY8OYp,1bC$r(_R;b"p>#/!W2p**$Qd`
1H.?X5<qM$r'Q''JjY,Wp-TQ]6:!k$4ZYJU.jZ8T'FtQV"Tnf,!W2p))':+Q/i#:D3BB7.4G#\I4M<ij
4$#A\1bgO/+rhC3%LNFE!s/K(qu@*B*[E0e1,LpL3]]@g4G#\I4GZ*'4$,Ja3&V:(0J"Rq*#B4s$3p_:
!W`?"!"0r!0K2-^7S6?L:/@W]Jl%%qcqkHQ:JOYY8OYp,1bC$r(_R;b"p>#/!W2p**$Qd`1H.?X5<qM$
g-^HZJjYqn(.(>R5X.Cm2DH^.*uPb'$O6h;!W`<%r;[0B+!`9f1,V$O3]iHdJinWIh`MQ63]T,U0e=[r
*#B4t$3p_:!W`?"!"0Yc,Uk?$1cIBT3]kGGJinWIW]V"X4$#D^2Dd*=-R'NH&e,0Q"Tnf,!W2p*+Xo*(
4[V\29MS>YN_k=(Jl(Q*'i.V#:/"5J5s$nT-6F';%LE=B!s&H#!"0bj-n[;73^#\m5siOXJjY,WY!Wpj
6:!k$4ZYJU.jZ8T'FtQV"Tnf,!W2p))':+Q/i#:D3BB8!4G#\I4G#]f4;0e;3B&cL/12V](D72b#6b22
!<N)u$Q1!2.5!A42`NiZ41%,%4G#]14;Bq>3]]5Y1b^I.+rhC3%13=D!s/K(qu@*J.53\D6Uj[A:/4UN
:kDMq:l%pO:JX_\9M#a`5s$nT-6F';%LE=B!s&H#!"0bj-n[;73^#\m5sh>6JjY,WcpJO76:!k$4ZYJU
.jZ8T'FtQV"Tnf,!W2p))':+Q/i#:D3BB7T4G#\I4I8/E4$#A\1bgO/+rhC3%LNFE!s/K(!;um*)'1%P
/i#7B3'')^P!"=YJir!S'g"K<3]K#S0J"Rq*#B4s$3p_:!W`?"!"0r!0K2-^7S6?L:/Au.Jl%%qW_aF+
:JOYY8OYp,1bC$r(_R;b"p>#/!W2p**$Qd`1H.?X5<qM$N^JCcJj\We'gb5Q5X.Cm2DH^.*uPb'$O6h;
!W`?"!"'Sc,Uk?$2)mTW42a754G#\s4;0e;3B&cL/12V](D72b#6b22!<N)u$Q1!2.5!A42`NiZ48_3m
4G#\I4SClP4$,Ja3&WTI/12V](D7/a#6b22!<N)u$R$rQ2a'Mt8k_uT:UErM:kDNY:_cc%:/4JS76s!l
/LDPV&e53P"9SZ*qu@*E+t,'"2`a)d5X@a&6\7[W6\n)56:*t'5<TN<2DH^.*uPb'$O6h;!W`?"!"'Sc
,Uk?$2)mTW4/+ih4G#]@4;0e;3B&cL/12V](D72b#6b22!<N)u$Q1!2.5!A42`NiZ45)fK4G#\`4;L"?
3]]5Y1b^I.+rhC3%13=D!s/K(!;um*+Xo*(4[V\29MS>YP#-a,Jl(E&'i.V#:/"5J5s$nT-6F';%LE=B
!s&H#!"0bj-n[;73^#\m5si[\JjY,WW^@Lf6:!k$4ZYJU.jZ8T'FtQV"Tnf,!W2p))':+Q/i#:D3BB6]
4G#\I4QAO;4$#A\1bgO/+rhC3%LNFE!s/K(qu@*B*[E0e1,LpL3]]@A4G#\I4K^d]4$,Ja3&WTI/12V]
(D7/a#6b22!<N)u$R$rQ2a'Mt8k_uT:]+%@:kDMq;"d^#:JX_\9M%Z=4#AN9*uGV##mLM7!<N)u$QL?=
/i,FI4[21t6F9+36\7\?6PVpS5sRXt3]8]C,p+!=%grUG!s/K(qu@'A+!`9f1,V$O3]lUhJinWIL-,Q"
3]T,01bgO/+rhC3%LNFE!s/K(qu@*B*[E0e1,LpL3]]?t4G#\I4O?2*4$,Ja3&WTI/12V](D7/a#6b22
!<N)u$R$rQ2a'Mt8k_uT:YJWs:kDN3:_li&:/4JS76s!l/LDPV&e53P"9SZ*!;um**$Qd`1H.?X5<qM$
P!aggJj\Ka'gb5Q5X.Cm2DH^.*uPb'$O6h;!W`?"!"'Sc,Uk?$2)mTW430O94G#\o4;0e;3B&cL/12V]
(D72b#6b22!<N)u$Q1!2.5!A42`NiZ4,uFT4G#]W4;Bq>3]]5Y1b^I.+rhC3%13=D!s/K(qu@*J.53\D
6Uj[A:/4U(:kDMq:p*V0:JX_\9M%Z=4#AN9*uGV##mLM7!<N)u$QL?=/i,FI4[21t6Ms3&6\7[W6hWk^
6:*t'5<V%c0e4Ol)&*Sh#6b22!<N)u$5jp2.5!A53&s#]ZTNh%Jip_/'0A682`*6?-R'NH&e56R"Tnf,
!W2p*)'1%P/i#7B3'')^lTBb]JiniO"Zne,3]K#.1b^I.+rhC3%13=D!s/K(qu@*J.53\D6Uj[A:/4T[
:kDMq:s`#R:JX_\9M%Z=4#AN9*uGV##mLM7!<N)u$QL?=/i,FI4[21t6J=eY6\7[n6P`!T5sRXt3]8]C
,p+!=%grUG!s/K(!;um))':+Q/i#:D3BB6a4G#\I4Pr774$#A\1bgO/+rhC3%LNFE!s/K(qu@*B*[E0e
1,LpL3]]@E4G#\I4K:LY4$,Ja3&WTI/12V](D7/a#6b22!<N)u$R$rQ2a'Mt8k_uT:QA8':kDO*:_cc%
:/4JS76s!l/LDPV&e53P"9SZ*qu@*E+t,'"2`a)d5X@`U6\7[W6`rck6:*t'5<V%c0e4Ol)&*Sh#6b22
!<N)u$5jp2.5!A53&s#]q`KHmJinWIoK3dK3]T,U0e=[r*#B4t$3p_:!W`?"!"0Yc,Uk?$1cIBT3]j]2
JinWI^H<5m4$#D^2Dd*=-R'NH&e,0Q"Tnf,!W2p*+Xo*(4[V\29MS>YlVN10Jl%8""]%oh:/"4i76s!l
/LDPV&e53P"9SZ*qu@*E+t,'"2`a)d5X@`36\7[W6dS186:*t'5<V%c0e4Ol)&*Sh#6b22!<N)u$5jp2
.5!A53&s#]ffXjKJioA^'K\?92`*6?-R'NH&e56R"Tnf,!<E&u$Q1!2.5!A42`NiZ4-D^X4G#]S4;Bq>
3]]5Y1b^I.+rhC3%13=D!s/K(qu@*J.53\D6Uj[A:/4U,:kDMq:o[>,:JX_\9M%Z=4#AN9*uGV##mLM7
!<N)u$QL?=/i,FI4[21t6B4Eb6\7\e6PVpS5sRXt3]8]C,p+!=%grUG!s/K(qu@'A+!`9f1,V$O3]k8B
JinWIX?7.X3]T,U0e=[r*#B4t$3p_:!W`?"!"0Yc,Uk?$1cIBT3]m7%JinWIJir`h'g"K<3]K#S0J"Rq
*#B4s$3p_:!W`?"!"0r!0K2-^7S6?L:/A5nJl%%q^JGY@:JOYY8OYp,1bC$r(_R;b"p>#/!W2p**$Qd`
1H.?X5<qM$lU-7kJjY>]"[YOA5X.CB3]8]C,p+!=%grUG!s/K(qu@'A+!`9f1,V$O3]j&uJinWIc9)b%
3]T,U0e=[r*#B4t$3p_:!W`?"!"0Yc,Uk?$1cIBT3]l%XJinWIR626H4$#D^2Dd*=-R'NH&e,0Q"Tnf,
!<E&u$R$rQ2a'Mt8k_uT:QeP+:kDO&:_cc%:/4JS76s!l/LDPV&e53P"9SZ*qu@*E+t,'"2`a)d5X@`Y
6\7[W6`NKg6:*t'5<V%c0e4Ol)&*Sh#6b22!<N)u$5jp2.5!A53&s#]NBDeTJir'U'0A682`*6?-R'NH
&e56R"Tnf,!W2p*)'1%P/i#7B3'')^`B8`7Jip1u'g"K<3]K#S0J"Rq*#B4s$3p_:!W`?"!"0r!0K2-^
7S6?L:/CdaJl%%qJl)/;'i.V#:/"5J5s$nT-6F';%LE=B!s&H#!"0bj-n[;73^#\m5shqGJjY,W^I&`&
6:!k$4ZYJU.jZ8T'FtQV"Tnf,!W2p))':+Q/i#:D3BB7e4G#\I4GGs#4$#A\%l?!l-R'NH&e56R"Tnf,
!W2p*)'1%P/i#7B3'')^UHF,jJiqCB'g"K<3]K#S0J"Rq*#B4s$3p_:!W`?"!"0r!0K2-^7S6?L:/BS?
Jl%%qR8=Yp:JOYY8OYp,1bC$r(_R;b"p>#/!<E&u$QL?=/i,FI4[21t6BX]f6\7\a6PVpS5sRXt3]8]C
,p+!=%grUG!s/K(qu@'A+!`9f1,V$O3]kDFJinWIW&t_T3]T,U0e=[r*#B4t$3p_:!W`?"!"0Yc,Uk?$
1cIBT3]i?aJinWIjZF8>4$#D^2Dd*=-R'NH&e,0Q"Tnf,!W2p*+Xo*(4[V\29MS>Y`DD._Jl&UH'i.V#
:/"5J5s$nT-6F';%LE=B!s&H#!"0bj-n[;73^#\m5skK:JjY,WJj]6!'gb5Q5X.Cm2DH^.*uPb'$O6h;
!W`?"!"'Sc,Uk?$2)mTW40q&$4G#]/4;0e;3B&cL/12V](D72b#6b22!<N)u$Q1!2.5!A42`NiZ46o"\
4G#\O49[f.3]]5Y%l>sk-R'NH&e,0Q"Tnf,!W2p*+Xo*(4[V\29MS>YUJQP=Jl'fj'i.V#:/"5J5s$nT
-6F';%LE=B!s&H#!"0bj-n[;73^#\m5sj9mJjY,WR6q`V6:!k$4ZYJU.jZ8T'FtQV"Tnf,!<E&u$5jp2
.5!A53&s#]OZ\4XJiqpQ'0A682`*6?-R'NH&e56R"Tnf,!W2p*)'1%P/i#7B3'')^aZP/;Jip%q'g"K<
3]K#S0J"Rq*#B4s$3p_:!W`?"!"0r!0K2-^7S6?L:/?mHJl%%qj\Q[f:JOYY8OYp,1bC$r(_R;b"p>#/
!W2p**$Qd`1H.?X5<qM$`C#5EJjZ\.'gb5Q5X.Cm2DH^.*uPb'$O6h;!W`?"!"'Sc,Uk?$2)mTW48V-l
4G#\I4S1`L4$#A\1bgO/+rhC3%LNFE!s/K(qu@*B*[E0e1,LpL3]]@04G#\I4MNun4$,Ja3&WTI/12V]
(D7/a#6b22!<N)u$R$rQ2a'Mt8k_uT:[:i/:kDN":^'Wj:/4JS%n/cG1bC$r(_R;b"p>#/!W2p**$Qd`
1H.?X5<qM$UI0W#Jj[mP'gb5Q5X.Cm2DH^.*uPb'$O6h;!W`?"!"'Sc,Uk?$2)mTW44u`J4G#\^4;9k<
3B&cL/12V](D72b#6b22!<E3!!"0Yc,Uk?$1cIBT3]iKeJinWIiB.i:4$#D^2Dd*=-R'NH&e,0Q"Tnf,
!W2p*+Xo*(4[V\29MS>Ya\[RcJl&ID'i.V#:/"5J5s$nT-6F';%LE=B!s&H#!"0bj-n[;73^#\m5sgT!
JjY,Wj[0bL6:!k$4ZYJU.jZ8T'FtQV"Tnf,!W2p))':+Q/i#:D3BB7?4G#\I4KLXY4$#A\1bgO/+rhC3
%LNFE!s/K(qu@*B*[E0e1,LpL3]]A#4G#\I4G#]h4;Bq>3]]5Y1b^I.+rhC3%13=D!s/K(qu@*J.53\D
6Uj[A:/4Tl:kDMq:qogA:JX_\9M%Z=4#AN9*uGV##mLM7!<N)u$QL?=/i,FI4[21t6L.!j6\7[]6NoeC
5sRXt%luU'.jZ8T'FtQV"Tnf,!W2p))':+Q/i#:D3BB6r4G#\I4O-&&4$#A\1bgO/+rhC3%LNFE!s/K(
qu@*B*[E0e1,LpL3]]@V4G#\I4IJ;I4$,Ja3&WTI/12V](D7/a#6b22!<E3!!"0r!0K2-^7S6?L:/@$L
Jl%%qiD:7b:JOYY8OYp,1bC$r(_R;b"p>#/!W2p**$Qd`1H.?X5<qM$a[:YIJjZP*'gb5Q5X.Cm2DH^.
*uPb'$O6h;!W`?"!"'Sc,Uk?$2)mTW4,l@S4G#]U4;0e;3B&cL/12V](D72b#6b22!<N)u$Q1!2.5!A4
2`NiZ42j=64G#\u4;Bq>3]]5Y1b^I.+rhC3%13=D!s/K(qu@*J.53\D6Uj[A:/4U_:kDMq:kDO;:_cc%
:/4JS76s!l/LDPV&e53P"9SZ*qu@*E+t,'"2`a)d5X@`D6\7[W6bbu'6:*t'5<V%c0e4Ol)&*Sh#6b22
!<N)u$5jp2.5!A53&s#]l9'Y\JincM"$8P(2\.`"/12V](D72b#6b22!<N)u$Q1!2.5!A42`NiZ4/4oi
4G#]B4;Bq>3]]5Y1b^I.+rhC3%13=D!s/K(qu@*J.53\D6Uj[A:/4U=:kDMq:mk,q:JX_\9M%Z=4#AN9
*uGV##mLM7!<E3!!"0bj-n[;73^#\m5sg`%JjY,WiBn>H6:!k$4ZYJU.jZ8T'FtQV"Tnf,!W2p))':+Q
/i#:D3BB7C4G#\I4K(@U4$#A\1bgO/+rhC3%LNFE!s/K(qu@*B*[E0e1,LpL3]]?_4G#\I4QS[?4$,Ja
3&WTI/12V](D7/a#6b22!<N)u$R$rQ2a'Mt8k_uT:W6.^:kDNH:_cc%:/4JS76s!l/LDPV&e53P"9SZ*
qu@*E+t,'"2`a)d5X@a76\7[W6\7]!6PVpS5sRXt3]8]C,p+!=%grUG!s/K(qu@'A+!`9f1,V$O3]jZ1
JinWI]fZri3]T,U0e=[r*#B4t$3p_:!W`?"!"0Yc,Uk?$1cIBT3]lXiJinWILcbi&4$#D^2@hVu/12V]
(D7/a#6b22!<N)u$R$rQ2a'Mt8k_uT:SUa<:kDNj:_cc%:/4JS76s!l/LDPV&e53P"9SZ*qu@*E+t,'"
2`a)d5X@`j6\7[W6^^:W6:*t'5<V%c0e4Ol)&*Sh#6b22!<E3!!"'Sc,Uk?$2)mTW4-;XW4G#]Q4;0e;
3B&cL/12V](D72b#6b22!<N)u$Q1!2.5!A42`NiZ439U:4G#\q4;Bq>3]]5Y1b^I.+rhC3%13=D!s/K(
qu@*J.53\D6Uj[A:/4TF:kDMq:utLg:JX_\9M%Z=4#AN9*uGV##mLM7!<N)u$QL?=/i,FI4[21t6H)<D
6\7\.6PVpS5sRXt3]8]C,p+!=%grUG!s/K(qu@'A+!`9f1,V$O3]m4$JinWIJirZf'0A682`*6?-R'NH
&e56R"Tnf,!W2p*)'1%P/i#7B3'')^Zoiq&Jipe1'g"K<3]K#S0J"Rq*#B4s$3p_:!W`?"!"0r!0K2-^
7S6?L:/C1PJl%%qLen7N:JOYY8In6U4#AN9*uGV##mLM7!<N)u$QL?=/i,FI4[21t6DHo"6\7\P6PVpS
5sRXt3]8]C,p+!=%grUG!s/K(qu@'A+!`9f1,V$O3]l"WJinWIQTPsD3]T,U0e=[r*#B4t$3p_:!W`<%
r;[3C*[E0e1,LpL3]]?c4G#\I4Q/C;4$,Ja3&WTI/12V](D7/a#6b22!<N)u$R$rQ2a'Mt8k_uT:WZFb
:kDND:_cc%:/4JS76s!l/LDPV&e53P"9SZ*qu@*E+t,'"2`a)d5X@_s6\7[W6fgZM6:*t'5<V%c0e4Ol
)&*Sh#6b22!<N)u$5jp2.5!A53&s#]`&rW6Jip+s'0A682`*6?-R'NH&e56R"Tnf,!W2p*)'1%P/i#7B
3'')^r&fQnJinWIp,j'O4$#D^2Dd*=-R'NH&e,0Q"Tnf,!W2p*+Xo*(4[V\29MS>YZqu?NJl'3Y'i.V#
:/"5J5s$nT-6F';%LE=B!s&H#!"0bj-S7)43^#Yl5XF^&JjP&ULdD825sR\!4:aG00InFk)&*Sh#6b22
!<N)u$Q1$2.4m;32`NiZ4/4oi4G#]B4;Bq>3]]5Y1b^F-+WM:2%LNFE!s/K(qu@*B*[<'b0f1dJ3BB4T
4+]PG4./203YOM52D[$;-6X?F&e,0Q"Tnf,!<E&u$R$rP2EX;p8P;cQ:6JD):P)C$:]=*%9hS#G5WU\P
-6F';%LE=B!s&H#!"0_h-S7)43BTGh5X<FWJjFuSW^6VL&jJN@3&NB?,p+!<%grUG!s/K(qu@*A*[<*c
1,LmK3BB3]4+]PG468R'3YFG42D[$;-QsHF&e56R"Tnf,!W2p)(`jnM/MT%>2`Nh93eBDE3ik@U3B/rT
1,(4*+WD1/%13=D!s/K(qu@'H-ndJ@6:FF;9MPCZJkgnmJkkr5'2;.m7moU'1Fsgn(D72a"p>#/!W2p)
)^$IY0f:pP4[)*:5_;7Q5eTDr5<_4k2`*0;,Tdm;%LNFE!s/K(qu@'@*?usa0JbUG3'$7bJi\KEL,oDs
3&`]*1+t.)+WM71%1*7C!s/K(qu@*A*?lm_0JYLD3&ipn3eBDE3m]o&3B9&Y2Dd0B.OH8W((gu^#6b22
!<N)u$QpfL2*=,l7nH?I:"i?o:4c6/:)6Pu9M7rH6U*Re.jZ5Q&If$N"9SZ*!;um*)BU7U0Jk^L4$>_j
P!=O_Jj83Y'g=fE4ZbY_1G1+$*Z,P#$3p_:!W`?"!"0V`+t"lo1,LmJ3&o#?JiSECW]C&<&iV^*1+k"%
+<)(.%1*4B!s/K(qu@'?*$Qa\0/>@A2E-UTJiJ?Aj#@]22Dm9F/h&(h)\iqo#mLP8!W`?"!"0nr/MoLQ
6UaL:8k[,sJkUbiY"TR'91hcG77'-r1+FOi(D.)^"p>#/!W2p*)':+R/i#:D3]]>br&oWpJj"]Kp,s-Q
4?GSb2`*6?-mBWI'+G9R"9S]+!W2p*(E=SF.P3>11c70LZo<RqJiCG'r\bBH1bp^9-mTlQ'bLi\"p>#0
!<N)u$5XX(-7UT$1,LgFl8F5PJi8?A"#Vnl1(Q#h-mTlP'bLi\"p>#0!<N)u$QgZF1H7K^6q'R88>Ab.
8V0O\8JOce7n,p75<LeW.3]`J&.JmK"9SZ*qu@'@*?lm_0JbRF3'#YQJi\KEQT>g@3&`ZL0.S=l*#9+q
$3p\8!W`<%r;[->)BU4Q.kWM21QXGF1kIR@1_MT"0.e\%+s%U9&.AjL"9JW*!W2p)'cJ/>-n?o(0etQ+
1kIQ91oN5E1GU[</Li(k*Z5Y&$OI"?!WiB'qu@$D,:P<(3^#_p7#XQd7=mtf71r!T5<Lq^/LVb]'b:]Y
"Tni-!W2p*(*"GC.4m5/1GgsI`A`B-JiBhk&iMX*1c$j>/1;_b)&3\k#mLM6rW2os$PXI!+seZg/M8\1
1&NeY14h951A3I90ek@8/hJS%,Tn'C'+YHV"U"o+!W2p*'H%o8,q(8q/h\n4Zn[.eJhb"pr\+j9/hAJ#
,Tn$B'+YHV"U"o+!W2p*)^-R\1,_0U4[21tlU$1iJjP8["[PF>5<V+>3AiK?,p+!=%LWLF!s/K(qu@*>
)'0tK.4[#(0JP;W14h951=.fU0b5rk/h8=r+<212%grXH"9SQ'qu@';(E4G@,pt,l.kK@*Jh;R+QRrb"
.k<%r,p=9H'bLo_#6b22rW*!!r;[3=(E4G?,pt,k.kE67/V5R+/`A;\/.X6\.46Aa*>oS(%13=D!s8H&
qu@'A+!`9f1,LpM3]kDFJinWIW&t_T3]T,U0e=[q*#B4t$3gY9!W`?"!"0GU)]p7M-RgMq.kH]4Jh;R+
jXh)r/1W5#-mp8`*>oS(%13=D"9SQ'qu@*:'Gqf3+sSB\-RU=].=s"#.BY*4-n$Gj-7'l[*Z>h.&.AjM
"Tni*!W2p)&JQ'$+!MpU-7:2<."Wk!."Wl>-kIaR-6sfY*Z>h.%h&aL"Tni*!W2p*(E4JC.4m2.1GgpG
Zo3LoJi:A%'f@j*1c$j>.juVa)&3\k#mLP8!W`?"!"0>O(E4D<+s\H\-78%+JgZ-tLaW0K![T-;$R-Z4
)&<kr$jd.A"8r8u!!s/K'c7l1+!DdOTd,.6Jg8Mb%O*&=*ul18'G1f_#R1D6r;lfr#S.L^(`OJ;+<g_.
g*;1oJg6[.r?;[o+<DL?(D@Ai$O?q>"8r6#!;um*'Gh`3,UY#k/1iJ,OtVD?JhQ(9r[ng8/1N(q+s.^>
&e59T"U"l.!<N)u$OmX\()\&2*ZlIH+NYdY+bCl;+oWSo+!2OD)]0>(&.JsO"U"o+!W)j)$kEsb(Dn&0
*#ot>NZNcnJfa"prZ)Ig*#fe5().>j$jd.B!s8H&qZ%!4%hTKl(`=83*$$'=*eGGb*j-R`*=a&.)]9J-
'+k]^#mUV9!r`5t!"0>P(E4G=+s\H]-R\g?Jgc4!Jgg=@r[/:),pXZW*?#_-%h&aK"Tnf,!W)j($OmX\
'G_K&)&aF")hK#\)nd1&)B'J2(D[Yr%h/jO"p>#0!<N#s#RUtM&J>cm()Q0OJf'(VKGX_+((Cum&eGN]
#mUV:!s/K(q>^a-$k<j^'GVD_(SVau(kNUM)#b<]()7Jp%h/mQ#6b54!W`>u!!j&G',MK)*$-3R+G(_f
+I+&[+!)C?(DRPn%13=D"9S]+rW)ls#mgqJ%M03c',2.B'nR0P(#BZ7'GM2o&J,B[$4$k>"9SQ'q>^^*
#n.7R&/"mS`tO%<JeP$qrXoPM&.T*V#mUY;!s8H&q>^g-#n%1Q%hTBd&r[KU'7pnW'+GQe&J5N`$k!@H
"p>#0rW2iq#n%1Q&JPrr(Dn",)1i`X)64Vd(`4&*'b_,g$jm7D"Tnf,!Vud%#7(YE$k3[W&,?cg&:tIF
&FpA?%hB-Z$jm:G"p>&2r;l`p"pP;=$4@7Or!p(EJe*GD^CU2O#n7:N#m^b>"9Sc)!Vud""pYGA$Om"D
rXS6)Je*GDL_'Fors]8D$O[7H#6b54"8r8s!!ii;$k<aY&J>`U';H7n'S7%G'`A[U&eYce%LidP#6b86
!WiB'q>^X%"pYD?rX/W4faNH@JddtSrX8]4#7(P>"U"r1!rW0!!;um#"U,)8#lY/0$BY^J$\AcD$iUM4
#mU\?"pG,3!s8E%q>^X%"U52;rX&Q2a:!S-Jd\LbrX/W2#6tJ<"U"o0!rW/r!!`]5#RUqJ%1S1)Je!AB
i!p,(%1ERM#R1G9"9S`)!Vud!"9\l4#5neD#_E>6#c\1/#6b;8"9\f.quQTn!<WK("TSc##D*24#D*3L
#6kA9"U"o0!rN)p!!*0)rWN9+Xp9O`Jd8dj"pP57"9S`-quQTn"U,&6#6tP6$0V_J$A&V<$NCD=#m^b?
"U,#2!Wr?%q#CHt!sAK)Scs]LJd':#r<*0(!Wr9#p](9qrWE-&eHLO.Jd%>Arri<'rrW*!quHZq!!<-%
rWJ2aJd$`0gBIT[rWE0%quQQm!WrQ.r<:+DJd-f2U^$c$"9\f/!Wr?%p]1<prrW*#MZeV7Jct$8r<*$#
qZ6EkrrN-$]`WigJchkPrW;rtpAk3orrVfpJcgT,JckECrW;rtpAk3prr`0%Ym#^_Jd&air<3*%rrW-"
pAk'kjT:#8Jc^N*p]:$fqZ35hJc^N*ao_>=o`4jie,k4'Jc_,;p]:0jr;ciur;qo[JcgT,gB7?Tr;lQk
]`E]cJcVDCo)O@CJcUH(fE(RD\H.9_JcVPGo)SUfpB#pJJc^N*nH/LenGoQiJcUH(ZiTUqi;nN2JcUH(
quQ6dR/qm?JcWgkmf:]8JcUH(NWJeQJcLB&JcLB&JcLB&NrXb3JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLi3JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&NrX\~>

%%EndBinary
grestore
np
grestore
279.211 79.9186 mo
318.419 79.9186 li
318.419 96.0132 li
279.211 96.0132 li
cp
np
279.211 45.7984 mo
330.075 45.7984 li
330.075 61.8929 li
279.211 61.8929 li
cp
np
279.211 11.6781 mo
379.739 11.6781 li
379.739 27.7726 li
279.211 27.7726 li
cp
np
0.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
279.211 105.026 mo
390.504 105.026 li
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.443137 0.364706 0.368627 0.0156863 colr
@
279.211 105.026 mo
279.211 107.881 li
316.309 105.026 mo
316.309 107.881 li
353.406 105.026 mo
353.406 107.881 li
390.504 105.026 mo
390.504 107.881 li
@
279.211 105.026 mo
279.211 2.66513 li
@
gsave
319.023 140.256 mo
359.433 140.256 li
359.433 82.566 li
319.023 82.566 li
319.023 140.256 li
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
true set_gvm
%ADOBeginSubsetFont: DQVAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal DQVAAA+Calibri gcheck setglobal} if
1 9872 36 <00010057ff0b039b05f3005f0031b74d524d1d4d1d2252b80108b7572505
3f39335122b8010cb2110b05002fcd33ed3fcd33123939ed1139392f2f10
c4313001140e0207070e0323222e0237372e0535343e0233321e02333236
35342e0635343e0237373e0333321e0215071e0715140e0223222e022322
0e0215141e06039b3d70a2641601050e1914171b100502173052402d1508
04080d090d304f72508e93365971757158362e5c8c5d1401050e1815161d
0f04161e41392e1107040303060a070b3049603b435f3b1b375972777259
37016e50835e3805d9060b070405070d08d80613161815221e161d13071d
231e70603b4f39292a365073544374573706ca060b080304090c08c8030f
1317100e12180f131c10081a1e1a1a2f42273c5038282b345073>DQVAAA+Calibri AddT42Char 
1 10168 37 <ffff0060ff0b03a405f3010600240900001cb90061ffc0b30f024d61b8ff
c0b30f014d61b8ffc0b20f004d2b2b2b0000>DQVAAA+Calibri AddT42Char 
1 9772 35 <0001002afede017300e0001b000ab20b171c0010d4cd313025140e020707
0e0323222e02371335343e0233321e020173060e171189050d1319131117
0a0104850b18241a1924170b8f1f342e2d19ce070a080303070c08011380
1b201006061020000000>DQVAAA+Calibri AddT42Char 
DQVAAA+Calibri /CharStrings get begin
/g37 37 def
/g35 35 def
end
DQVAAA+Calibri /Encoding get
dup 76 /g37 put
dup 77 /g35 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/DBLQDO+Calibri*1 [33{/.notdef}rp /g3 /g13 /g24 /g16 /g15 /g20 /g9 /g10 /g28 /g6 /g23 /g8 /g2 /g21 /g25 /g4 /g29 /g12 /g1 /g17 /g31 /g49 /g40 /g41 /g47 /g48 /g42 /g46 /g43 /g7 /g30 /g44 /g5 /g19 /g22 /g18 /g45 /g11 /g14 /g32 /g52 /g26 /g33 /g37 /g35 178{/.notdef}rp]DBLQDO+Calibri nfDBLQDO+Calibri*1 [9 0 0 -9 0 0 ]msf324.419 91.5659 mo(L;8M8=93)[4.56302 4.56305 4.56302 2.25 4.56305 4.56302 4.56305 0 ]xshgrestore
gsave
330.678 116.442 mo
371.088 116.442 li
371.088 48.447 li
330.678 48.447 li
330.678 116.442 li
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
DBLQDO+Calibri*1 [9 0 0 -9 0 0 ]msf336.075 57.4456 mo(L;9M@;83)[4.56302 4.56305 4.56302 2.25 4.56305 4.56302 4.56305 0 ]xshgrestore
gsave
379.53 82.323 mo
417.546 82.323 li
417.546 14.328 li
379.53 14.328 li
379.53 82.323 li
clp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
DBLQDO+Calibri*1 [9 0 0 -9 0 0 ]msf384.932 23.3253 mo(L9@M86<3)[4.56302 4.56305 4.56302 2.25 4.56305 4.56302 4.56305 0 ]xshgrestore
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
true set_gvm
%ADOBeginSubsetFont: RQYAAA+Calibri-Bold Initial
ct_T42Dict begin
0 -0.191 0.805 0.742
 256 array 0 1 255 {1 index exch /.notdef put} for  /RQYAAA+Calibri-Bold
Type42DictBegin
[<00010000000b000b000b000b6376742026f12f5c000000bc000005f46670
676da1ea42ac000006b000000913676c796615850ac10000263800001f6c
68656164f2ec605000000fc400000036686865610d9a06d300000ffc0000
0024686d747875300a0f00001020000000706c6f636174a86dbc00001090
0000003a6d6178700cb902cc000010cc000000206e616d656758e2f30000
10ec000000257072657011c2f8a600001114000015226764697200000000
00000000000000000000079e0000fe930000000000000000000000810081
009c00ab00b500ba00c100ca00d300f3010a0060008500bf00e300ea00f2
00fb010001070115011c0129000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe83056d
000d03c0000600170000fffaffe9fea9ffe90000050e000600170000fffa
ffe9fe93050e00170426000600170000fffaffe9ff12ffed050e00170426
000600170000fffaffe9fe93feb8fece060b0010050e0006001002cbfffa
fff001edfffa023f00060010ff36fffafff00287000600100000fffafff0
079efeaffe9f00000000000000000000000000700072007500780079007a
007b007d007e007f008300860087008800890085007f0086008b008c008d
008e008f0090009100920093009400950096009700980099009a009b009c
009d009e009f009200930094009b009c009e009e00960099009a009d009e
00a200a600a900ac00a200a300a400a500a700a800a900aa00ab00ac00ae
00a300a500a700a800aa00ab00ac00ad00ae00a000a100a300a600a700a9
00aa00ac00ad00af00af00b000b100b200b300b400b500af00af00b000b2
00b300b400b500b800c000b600b700b800b900ba00bb00bc00bd00be00bf
00c000c100c200b900ba00bc00bd00bf00c000c100c200b600b700b800b9
00ba00bb00bc00bd00be00bf00c000c100c200c000c100c200c300c400c5
00c600c700c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c7
00c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c500c800c900ca00cb00ce00cf00d000d1
00d200d300d400d500d600d700d900db00de00df00e000e200e300ec00d0
00d100d200d300d400d500d600d700d800d900da00db00dd00de00df00e0
00e100e300e500e900ec00ed00d100d300d400d500d800d900da00dc00e0
00e100e800d000d100d400d600e000e4010800f5010200fb00ff0108008f
009000960092009300990090009100970098009a009d00a400a600a700a8
00a900af009a00a200a300a700a900aa00ab00ac00ad00b000ad009b00aa
00ab00ad00b0009a00aa00ac00ad00ae00af00b100b900bb00bc00bd00be
00c100c200c300c400c500c600c700c800c900ca00cb00ce00b300b400b5
00b600b700b800bc00c200c500c800ca00cb00cd00ce00cf00d000c700b7
00b800b900bb00bc00be00c600c700c800c900cb00cf00d000b200b600b7
00c200c400c500c600c700cb00cc00cd00ce00cf00d000d100d400d500d7
00d800d900da00db00dc00de00df00e000e200e300e500e600d100d300d6
00d700d800da00db00dc00dd00de00df00e000e100e200e300e400e500d1
00d200d400d500da00db00dd00de00df00e000e100e200e600d200d300d4
00d700d800dd00de00e000e100e200e300e400e500e600d200da00e100e9
00ea00ec00e800e900ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e7
00e900ea00ec00ed00ee00ef00f500ee00ef00f000f100f200f300f400f5
00f600ee00f000f200ef00f000f100f200f300f400f500f600ee00ef00f0
00f100f200f300f400f500f600f700f700f800f900fa00fb00fc00fd00f7
00f800f900fa00fb00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff
010001010102010300fe010001010102010300fe00ff0100010101020103
01020103010401050106010701080109010a010c010d010e010f01100107
010401050106010701080109010a010b010d010e010f0110011101040105
0106010701080109010a010b010c010d010e010f01100111010401050106
01070109010e010f011201130114011501170118011a011b011c011d011e
011f01210122011201130114011501170119011b011c011d011e01200121
0123012401250113011401150116011701180119011a011b011c011d011f
01200117011c011d011e012001210129013001770129012b012e012f0130
01310134013501370139012b012d013001320134013a012e01300134013a
014240465f5e5d5c5b5a59585554535251504f4e4d4c4b4a494847464544
434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f18141110
0f0d0b0a090807060504030201002c4523466020b02660b004262348482d
2c452346236120b02661b004262348482d2c45234660b0206120b04660b0
04262348482d2c4523462361b0206020b02661b02061b004262348482d2c
45234660b0406120b06660b004262348482d2c4523462361b0406020b026
61b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8
015a51582320b08d44235920b0ed51582320b04d44235920b00426515823
20b00d44235921212d2c20204518684420b001602045b04676688a456044
2d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101
283e01b0282370b10228453ab10200080d2d2c2045b00325456164b05051
5845441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c20
69b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0036159
2d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b0
2b23442d2c4b525845441b2121592d2c01b005251023208af500b0016023
edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500ed
ec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b007
43b006430b2d2c21210c6423648bb84000622d2c21b08051580c6423648b
b82000621bb200402f2b59b002602d2c21b0c051580c6423648bb8155562
1bb200802f2b59b002602d2c0c6423648bb84000626023212d2c45234560
23456023456023766818b08062202d2cb00426b00426b00425b004254523
4520b003266062636820b0032661658a2344442d2c2045b0005458b04044
2045b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b51
58b02f2370b01423421b2121592d2c4b515820b0032545695358441b2121
591b2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c4523
20458a60442d2c45234560442d2c4b235158b90033ffe0b134201bb33300
34005944442d2cb0164358b00326458a586466b01f601b64b02060662058
1b21b04059b001615923586559b02923442310b029e01b2121212121592d
2cb0164358b004254564b020606620581b21b04059b0016123586559b029
2344b00425b00725082058021b0359b0052510b004252046b0042523423c
b0072510b006252046b00425b0016023423c2058011b0059b0052510b004
25b029e0b0072510b00625b029e0b00425b00725082058021b0359b00425
b003254348b00625b00325b0016043481b2159212121212121212d2cb016
4358b004254564b020606620581b21b04059b0016123581b6559b0292344
b00525b00825082058021b0359b0042510b005252046b0042523423cb004
25b0072508b0072510b006252046b00425b0016023423c2058011b0059b0
042510b00525b029e0b02920456544b0072510b00625b029e0b00525b008
25082058021b0359b00525b003254348b00425b0072508b00625b00325b0
016043481b2159212121212121212d2c02b00425202046b004252342b005
2508b003254548212121212d2c02b0032520b0042508b002254348212121
2d2c452320451820b00050205823652359236820b040505821b040592358
65598a60442d2c4b53234b515a5820458a60441b2121592d2c4b54582045
8a60441b2121592d2c4b53234b515a58381b2121592d2cb000214b545838
1b2121592d2cb002435458b0462b1b21212121592d2cb002435458b0472b
1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b049
2b1b212121592d2c208a08234b538a4b515a5823381b2121592d2c0020b2
00400325b0062649618b3812342d2c014623466023466123201020468a61
b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b21592d
2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851b1
400188535a58b910000020885458b202010243604259b12401885158b920
000040885458b2020202436042b12401885458b2022002436042004b014b
5258b2020802436042591bb940000080885458b202040243604259b94000
008063b80100885458b202080243604259b94000010063b80200885458b2
02100243604259b94000020063b80400885458b202400243604259595959
592d2c451868234b51582320452064b04050587c59688a6059442d2cb000
16b00225b0022501b001233e00b002233eb10102060cb00a236542b00b23
4201b001233f00b002233fb10102060cb006236542b0072342b00116012d
2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b00225
20b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b005254a
b0042547b004254760b0062547b0806361b00225b0005558b00325b00725
496359b0082558001b0159b00425b0062549b009255cb009255a58b0092b
59b0072546b0806361b0032520b0005558631b2159612320b0005558b080
631b21b08059b0592bb006255c586959b00425202010b00048233ab00626
58001b0159b0052658b003252f598a12233221212d2cb00625b00a2587b0
0625b009254ab0005358b00625b00a251bb00925b0072559b00225b00225
070cb005256323b00625636020b94000040063535821b00426b00426b00a
1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000b0
0325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507
595920b0005558b00525b0052587b00725b007250bb0092510b00b25b009
2620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b00625
b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b007
25b0072507b00a25b00d254961b08062b00525b005250bb00a252338b006
25b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b00925
b00c2549b0032554b8ffa723792121212121212121212121212d2c23b000
5458b9400000001bb900004000598ab0005458b9400000001bb900004000
59b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a
8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b004
26080db00426b00426080db05b2b2d0000010000000200008c02e9465f0f
3cf50019080000000000c6a60b7500000000c6a60b750000fe73067105f5
00010009000200000000000000010000079efdda00000a7bfc0ffe6109ea
00010000000000000000000000000000001c040e000001cf0000050b008d
06fe008d0545008d0442008d03c8003f0539008c03f30047044b004b0407
004a044b007e03d7007e01f7007e0682007e044b007e044d0048044b007e
02d8007e0331004902c60017044b007903c9001605f6002303fc0049040e
0052040e0039040e00940000009e009e010801cc027e02fc03b80422050e
05aa067606f4077407b60878090009740a160a960b6a0c020c7e0cee0da2
0e5e0e760f180fb6000000010000001c00ad000500ac000700020010002f
006000000c1c014100040001000000010012000100000000000600130000
5849415847542b43616c696272692d426f6c64000000b10903b802f9b21e
1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e2c1f
b802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1fb802
f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802ecb2
1e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b21e2c
1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e091fb8
02e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d191fb802df
b21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802dbb21d
191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d2f1f
b802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1fb802
d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802ceb2
1d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802cab21d19
1fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f1fb8
02c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb802c1
b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb802bdb21d
2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d2f1f
b802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1fb802
b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802b0b2
1c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802acb21c33
1fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b21c321fb8
02a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c321fb802a3
b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8029fb21c
331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029bb21c311f
b8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c321fb802
96b21c321fb80295b21c331fb80294b21c331fb80293b21c331fb80292b2
1c331fb80291b21c331fb80290b21c331fb8028fb21c331fb8028eb21c31
1fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab21c321fb8
0289b21c321fb80288b21c331fb80287b21c331fb80286b21c331fb80285
b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb80281b21b
341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027db21b341f
b8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b341fb802
78b21b341fb80277b21b341fb80276b21b341fb80275b21b341fb80274b2
1b341fb80273b21b341fb80272b21b341fb80271b21b341fb80270b21b34
1fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb21a351fb8
026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a351fb80267
b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb80263b21a
351fb80262b21a351fb80261b21a351fb80260b21a351fb8025fb21a351f
b8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a351fb802
5ab21a351fb80259b219371fb80258b219371fb80257b219371fb80256b2
19371fb80255b219371fb80254b219371fb80253b219371fb80252b21937
1fb80251b219371fb80250b219371fb8024fb219371fb8024eb219371fb8
024db219371fb8024cb219371fb8024bb219371fb8024ab219371fb80249
b219371fb80248b219371fb80247b219371fb80246b219371fb80245b219
371fb80244b219371fb80243b219371fb80242b219371fb80241b219371f
b80240b219371fb8023fb219371fb8023eb219371fb8023db219371fb802
3cb219371fb8023bb219371fb8023ab219371fb80239b218391fb80238b2
18391fb80237b218391fb80236b218391fb80235b218391fb80234b21839
1fb80233b218391fb80232b218391fb80231b218391fb80230b218391fb8
022fb218391fb8022eb218391fb8022db218391fb8022cb218391fb8022b
b218391fb8022ab218391fb80229b218391fb80228b218391fb80227b218
391fb80226b218391fb80225b2173b1fb80224b2173b1fb80223b217321f
b80222b2173a1fb80221b2173b1fb80220b2173b1fb8021fb2173b1fb802
1eb2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2173b1fb8021ab2
173b1fb80219b2173b1fb80218b2173b1fb80217b2173b1fb80216b2173b
1fb80215b217321fb80214b2173a1fb80213b2173b1fb80212b2173b1fb8
0211b2173b1fb80210b2173b1fb8020fb2173b1fb8020eb2173b1fb8020d
b2173b1fb8020cb2173b1fb8020bb2173b1fb8020ab2173b1fb80209b217
321fb80208b217321fb80207b2173b1fb80206b2173b1fb80205b2173b1f
b80204b2173b1fb80203b2173b1fb80202b2173b1fb80201b2173b1fb802
00b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2173b1fb801fcb2
173b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b1fb801f8b2173b
1fb801f7b217321fb801f6b2173a1fb801f5b2173b1fb801f4b2173b1fb8
01f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0b2173b1fb801ef
b2173b1fb801eeb2173b1fb801edb2173b1fb801ecb2173b1fb801ebb217
3b1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1fb801e7b217321f
b801e6b216231fb801e5b216231fb801e4b216371fb801e3b216371fb801
e2b216381fb801e1b216381fb801e0b216431fb801dfb216441fb801deb2
16441fb801ddb216441fb801dcb216451fb801dbb216461fb801dab21646
1fb801d9b216461fb801d8b216231fb801d7b216231fb801d6b216381fb8
01d5b216431fb801d4b216431fb801d3b216431fb801d2b216441fb801d1
b216461fb801d0b216461fb801cfb216461fb801ceb216461fb801cdb216
461fb801ccb216461fb801cbb216431fb801cab216231fb801c9b216231f
b801c8b216371fb801c7b216371fb801c6b216381fb801c5b216421fb801
c4b216431fb801c3b216441fb801c2b216451fb801c1b216461fb801c0b2
16461fb801bfb216461fb801beb216461fb801bdb216461fb801bcb21646
1fb801bbb216461fb801bab216371fb801b9b216381fb801b8b216421fb8
01b7b216431fb801b6b216431fb801b5b216431fb801b4b216441fb801b3
b216441fb801b2b216441fb801b1b216451fb801b0b216451fb801afb216
451fb801aeb216461fb801adb216461fb801acb216461fb801abb216461f
b801aab216461fb801a9b215341fb801a8b215411fb801a7b215411fb801
a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b215521fb801a2b2
15401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f1fb8019eb21552
1fb8019db2154d1fb8019cb215401fb8019bb2154d1fb8019ab2154e1fb8
0199b2154e1fb80198b2154f1fb80197b2154f1fb80196b215501fb80195
b215521fb80194b215521fb80193b215521fb80192b215411fb80191b215
4f1fb80190b215501fb8018fb215501fb8018eb215511fb8018db215521f
b8018cb215521fb8018bb215521fb8018ab214581fb80189b214591fb801
88b2145c1fb80187b2145d1fb80186b2144a1fb80185b2145b1fb80184b2
145c1fb80183b214591fb80182b2145d1fb8018140af145d1ff00f451fef
0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561fb20b561fb10b56
1fb00b561faf0b561fae0b561fad0b561fac0b561fab0b561faa0b561fa9
0b561fa80b561fa70b561fa60b561fa50b561fa40b561fa30b561fa20b56
1fa10b561fa00b561f9f0b561f9e0a681f9a0a681f990a681f980a681f97
0a681f960a681f950a681f940a681f930a681f920a681f910a681f900968
1f8f09681f8e09681f8d09681f8c09681fb8017fb213321fb8017eb21237
1fb80174b212371fb80173b211421fb80172b211421fb80171b211421fb8
0170b211421fb8016fb211421fb8016eb211421fb8016db211421fb8016c
b211421fb8016bb211421fb8016ab211421fb8013cb211421fb8013bb210
421fb8013ab210421fb80139b210421fb80138b210421fb80137b210421f
b80136b210421fb80135b210421fb80134b210421fb80133b210421fb801
32b20f451fb80131b20f451fb80130b20f451fb80112b20f451fb80111b2
0f451fb80110b20f451fb8010fb20f451fb8010eb20f451fb8010db20e48
1fb8010cb20e481fb8010bb20e481fb8010ab20e481fb80109b20e481fb8
0108b20e481fb80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec
0d4a1feb0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e
1fdb0c4e1fda0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b561fbc
0b561fbb0b561fba0b561f9d0a681f9c0a681fb80180b213321fb8017ab2
11401fb80179b211421fb80178b211421fb80177b211421fb80176b21142
1fb80175b211421fb80143b211421fb80142b210421fb80141b210421fb8
0140b210421fb8013fb210421fb8013eb210421fb8013db20f451fb80115
b20f451fb80114b20f451fb80113b20f451fb8017bb213321fb80153b212
371fb80152b211401fb80151b211401fb80150b211401fb8014fb211401f
b8014eb211401fb8014db211401fb8014cb211401fb8014bb211401fb801
4ab211401fb80149b211401fb80148b211401fb80147b211401fb80146b2
11401fb80145b211401fb80144b211401fb80122b211401fb80121b21042
1fb80120b210421fb8011fb210421fb8011eb210421fb8011db210421fb8
011cb210421fb8011bb210421fb8011ab210421fb80119b210421fb80118
b20f451fb80117b20f451fb80116409b0f451ffd0f451ffc0f451ffb0f45
1ffa0f451ff90e481ff80e481ff70e481ff60e481ff50e481ff40e481ff3
0d4a1ff20d4a1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a
1fe20d4a1fe10c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc8
0c4e1fc70c4e1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b56
1fb60b561fb50b561fb40b561fb30b561f9b0a681fb8017db212371fb801
7cb212371fb80169b2112e1fb80168b2112e1fb80167b211401fb80166b2
11401fb80165b211401fb80164b211401fb80163b211401fb80162b21140
1fb80161b211401fb80160b211401fb8015fb211401fb8015eb211401fb8
015db211401fb8015cb211401fb8015bb211401fb8015ab211401fb80159
b211401fb80158b211401fb80157b211401fb80156b211401fb80155b211
401fb80154b211401fb8012fb211401fb8012eb210421fb8012db210421f
b8012cb210421fb8012bb210421fb8012ab210421fb80129b210421fb801
28b210421fb80127b210421fb80126b210421fb80125b20f451fb80124b2
0f451fb80123b20f451fb80105b20f451fb80104b20f451fb80103b20f45
1fb80102b20f451fb80101b20e481fb8010040a20e481fff0e481ffe0e48
1fe80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd0
0c4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e1f824880
5581ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7d
db7d067c487a557bab7a55047a147a020a7948775578ab77550b77010c76
4875555475e475f4750314755475647574759475d475e47507a475b475c4
7503b8ffc0401275383b46807590750214757475020075010fb8ffc04021
750b0e467448725573ab725504723472023be47201d07201022072014072
507202b8ffc0b372242846b8ffc040ff72161a460072207230720371486f
5570ab6f556e486d55cf6d016b032e1f6a03251f692e675568ab6755662e
645565ab6455632e6255612e60555f2e5d555eab5d555c2e5a555bab5a55
592e58555703251f562e545555ab5455532e515552ab51554f2e4e554e03
251f4d2e4b554cab4b554a2e485549ab4855504801472e46554503361f00
1f01001e01001e701e801ef01e040b601d701d02701de01df01d03701cf0
1c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19
af19050f198f199f19030c7012801202701180110230114011d011e01104
0011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf
0e4060034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e31460f0d1f0d2f0d
033c2f0d3f0d4f0d038f0d01400d2e3246400d2427463f0c4f0c5f0c039f
0c01400c262946ef0aff0a02400a242746ef09ff0902ff09010003012001
010001100120010308b8ffc0b401151f4603bc01000100000500010190b1
54532b2b4bb807ff524bb009505bb00188b02553b00188b040515ab00688
b000555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d
001d424bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff
5358b20300001d42592b5e73757373742b732b73742b2b73745e732b5e73
74757374755e73747573015e7374737475757473745e737473002b2b732b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b732b2b
73755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b18
5f5e000000>
[8045 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 528 3 <0001008dfffa0671050e003c00d9b10102435558400b0d3030172f2f0a2e
18181ab80264b424310c0c0ab80264b700243651190c0b18bb012d004000
2efff0b41023024c31b8fff040201023024c17101023024c0d101023024c
0d172f30312e061f28511f551255055500183f3f3f3f1217392b2b2b2b1a
4ded3232323f012fd4ed32113310ed32113311393d2f3333113331301bb5
3651190c0b18bb012d0040002efff0b41023024c31b8fff040201023024c
17101023024c0d101023024c0d172f30312e061f28511f55125505550018
3f3f3f3f1217392b2b2b2b1a4ded3232323f31305925140e0223222e0235
1123010e0323222e0227012311140e0223222e02351134363333321e0217
0133013e033333321e021506710b1d302524301c0c02fe8904121f302222
301f1203fe96020b1e2f2524301d0b362dac2e4230200c01180401220d1f
293825b11b27190d240a100a06060a100a041dfbe40d110a03050b100b04
1cfbe30a100a06060a100a048133360f23392afcfd03012a3a240f0e1b27
1900>RQYAAA+Calibri-Bold AddT42Char 
1 2900 10 <0002004affe903b603d7002b00340105b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d
012fed32dded12392f31301b4009032c132c021b2cc304b8ffc040170d01
4d00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8
ffe840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f01
4d09f9401c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d
2bed5e5d3130590114062321141e0233323e0233321e0215140e0623222e
0235343e0233321e021527362623220e020703b62924fde11b3b5d414264
49300f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b
5f30472f190201fa2e2c395d412213171307122119161f160f0e1817113c
7aba7d77bf85464275a05e206a79243d532f>RQYAAA+Calibri-Bold AddT42Char 
1 2116 8 <00020047ffe9037603d7003300400129b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f
5f5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed32393130
1b400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e
412ab80118401be02201037d228d2202402250226022030f221f22020c04
2222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe840091001
4d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f5f5e5d5d5d5f5ded
1112392f2b5d71ed5d7131305925140606232226263535060623222e0235
343e02333335342e0223220e0223222e0235343e0433321e02150723220e
02151416333236370376142b2a2d2911378d56477757303d79b477571127
41303f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35
592e1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a
26171f241d231e132955865cda122433213840363400>RQYAAA+Calibri-Bold AddT42Char 
1 5420 19 <00010049ffe902f203d7004900e9b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1a4ded5f5e5d2b3f123939ed2b5d
1139392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed31301b402004
2e012ee4370b0a010ae71137400b014d10372037020337113711160f3c01
3cb8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f2
40054d00183f1a4ded5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed
5d10ed5d31305901140e0223222e0435343e0233321e0233323e0235342e
0635343e0233321e0615140e0223222e0223220e0215141e0602f239688e
53325b4830160c04080c090b2b40553622352714253d4d514d3d25325e87
542a4f402c1308040303070c080926394b3022322010263e4f514f3e2601
1e4c744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a
3f406b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c
40590000>RQYAAA+Calibri-Bold AddT42Char 
1 6148 21 <00010079ffe903cc03c60032006bb10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1a4ded2b3f1239393f012fedd4ed3931301b400e2d49270b05194924
180b0f014c24b8014db4400e4d054c00183f3f1a4ded2b3f1239393f3130
5925140e0223222e023535060623222e023511343e0233321e021511141e
023332363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d
210b1d312425301d0c122539263061370b1d302525301c0c220a0f0a0505
0a0f0a6750503c68896602220a0f0a05050a0f0afe08464a351d46430251
0a0f0a05050a0f0a>RQYAAA+Calibri-Bold AddT42Char 
1 5164 18 <0001007efffa02bb03d700330070b10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1a4ded2b5f5e5d012fc4ed3931301bb9000aff
e8b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1a
4ded2b31305901140e0223222e0223220e020711140e0223222e02351134
3e0233321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c
0c1d302525301d0c0a1a291f202a170a233e38381c0d1e20180b05040203
4b242e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a
0f0a6f3241260f0307090a0c152a0000>RQYAAA+Calibri-Bold AddT42Char 
1 2588 9 <0002004bffe903cc056d002600390095b10102435558b20b1b39bb025e00
00002f0272400a1321460b39271b040e2ab8ffe8b40b0f014c2ab8014940
09184a34180b0f014c34b80149b4400e4d054c00183f3f1a4ded2b3fed2b
1217393f012fedd4ed323931301b400921460b39271b040e2ab8ffe8b40b
0f014c2ab801494009184a34180b0f014c34b80149b4400e4d054c00183f
3f1a4ded2b3fed2b1217393f31305925140e0223222e023535060623222e
0235343e023332161711343e0233321e021503262623220e0215141e0233
323e023703cc0a18291e2028190b45975c668d59283362925f4b7a3c0b1d
302525301c0cfa36633631472b15122944341a31333620220b0f0a04040a
0f0b634a524f86b36377be86483d3b01e30a100b06060b100afd34444831
526535386a53320f22372800>RQYAAA+Calibri-Bold AddT42Char 

1 0 1 <> RQYAAA+Calibri-Bold AddT42Char 
1 1276 5 <0002008dfffa0403050e001c00290080b10102435558b12406bb02930011
001d02c14009001125180b0f014c25b8012bb306060c23b8ffe8b40b0f01
4c23b8012bb44015510c5500183f3f1a4ded2b12392fed2b012fd4ed10ed
3231301bb625180b0f014c25b8012bb306060c23b8ffe8b40b0f014c23b8
012bb44015510c5500183f3f1a4ded2b12392fed2b31305901140e022323
11140e0223222e02351134363321321e0405342e0223231133323e020403
4482bd806c0d1e322726331e0c312801312e537477542cfeed30464d2970
763f55361c03856da8733cfe630a100a06060a100a048c2f2f07173e5f7f
6244582a0bfe49223d550000>RQYAAA+Calibri-Bold AddT42Char 
1 3560 12 <0001007efffa03bb057000340062b10102435558bf003102600022000c02
600016002302b6b32d2d160ab802b7400e400016220b0528491c46114c05
4c00183f3f3f3f123939012fd41a4ded12392fed10fd32e431301b400b22
0b0528491c46114c054c00183f3f3f3f12393931305925140e0223222e02
270111140e0223222e023511343e0233321e021511013e0333321e021514
06070101161603bb0b1d32282933211207fed70c1d302525301d0c0c1d30
2525301d0c0108081421312625331f0c0f0ffefb012e0c0b210a0f090504
09100d01d6fe280a0f0a05050a0f0a05230a100b06060b100afcf101630c
120a05050a0f0b0f2213fed8fe2d141d>RQYAAA+Calibri-Bold AddT42Char 
1 316 2 <0002008d000004c0050e0012001f0071b10102435558bf0013029b000000
1a029200090018ffe8b40b0f014c18b8012e40090e511b180b0f014c1bb8
0154b240055400183f1a4ded2b3fed2b012fedd4ed31301bb90018ffe8b4
0b0f014c18b8012e40090e511b180b0f014c1bb80154b240055400183f1a
4ded2b3fed2b31305901140e0223212226351134363321321e0205342e02
23231133323e0204c05daef9acfecb212d2d21014cadf1a556fef02b5f95
7985896c946331029ab2fda04b272c04682c27519feaa35c9e7441fc9038
71a8>RQYAAA+Calibri-Bold AddT42Char 
1 1904 7 <0001008cffe904ad0514002b0057b10102435558bc002002900000001602
93400c0a265210521b180b0f014c1bb8015cb240055600183f1a4ded2b3f
3f012fedd4ed31301b400b265210521b180b0f014c1bb8015cb240055600
183f1a4ded2b3f3f31305901140e0223222e023511343e0233321e021511
141e0233323e023511343e0233321e021504ad4688c8827ac286470c1f32
2726321e0d2647633d3e6244250c1e332626311e0c01e277bc82443d7cb9
7c03130a100a06060a100afd044d714a2526496b44030b0a100a06060a10
0a00>RQYAAA+Calibri-Bold AddT42Char 
1 4608 16 <00020048ffe9040403d7001300270071b10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1a4ded2b3fed2b012fedd4ed31301bb90019ffe8b4
0b0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1a
4ded2b3fed2b31305901140e0223222e0235343e0233321e0205342e0223
220e0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fe
fd1532533f3854361b1631543e3954361a01e972bc884a427eb87672bd87
4a417eb881426f522e294f6f47426f522d294e6f0000>RQYAAA+Calibri-Bold AddT42Char 
1 6620 23 <00010023fffa05d303c600450097b10102435558b71c1d122e2c2c102ab8
0243400b1d10380e1004033a3a103cb8022b400d4003104149334910300b
0f483ab8ffd0b30b0f482cb8ffd0400e0b0f482c3a1003172549174c094c
00183f3f3f1217392b2b2b3f3f01192f18d41a4ded1239192f1239123939
1810d4ed1239192f3939123931301b400f414933492c3a1003172549174c
094c00183f3f3f1217393f3f31305901140607030e0323222e0227032707
030e0323222e022703262635343e0233321e0217131737133e0333321e02
17131737133e0333321e0205d30608ee0510213d31313e2310049602028a
040f243e31323d231004ec09050b1d312528321c0b03b10202a6030d1a2f
25252e1b0b03b20302aa020c1c3025252f1b0a03a00b201efcd911150c04
050c1510021e0909fde211150c04050c151003271d210b0a0f0904040a11
0cfd710c0c028f0c110a0405090f0afd6c0b0c028f0c110a0404090f0000
>RQYAAA+Calibri-Bold AddT42Char 
1 1528 6 <0001003fffe9038c0525004900bbb10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1a4ded2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2f
ed31301bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f01
4c3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1a
4ded2b3f123939ed2b1139392f2f10ed10ed31305901140e0223222e0435
343e0233321e0233323e0235342e0635343e0233321e0615140e0223222e
0223220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49
304c351c304d6268624d3045759f592e5c503e1407050203070d0b0b3046
5c372b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b21
2821172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a
0c1c211b1525341d2b3f312b303d5573>RQYAAA+Calibri-Bold AddT42Char 
1 6396 22 <00010016fffa03b303c6002c0055b10102435558b210211fb80284b64015
2120062123b8025d400c400020212849210b1a490b4c00183f3f12393f01
192f1a18dd1a4ded12391a10dd1aed123931301bb72849210b1a490b4c00
183f3f12393f31305901140e0207010e0323222e0227012e0235343e0233
321e0217131737133e0333321e0203b301030504fef40511274336354326
1105fef40607010b1c312529321d0c04cb0606c8030d1c2f26252f1a0a03
9f050e11160efcd911150c04050c1510032714200e060a0f0a040509110c
fd711919028f0c110905040a0f00>RQYAAA+Calibri-Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>RQYAAA+Calibri-Bold AddT42Char 
RQYAAA+Calibri-Bold /CharStrings get begin
/g3 3 def
/g10 10 def
/g8 8 def
/g19 19 def
/g21 21 def
/g18 18 def
/g9 9 def
/g1 1 def
/g5 5 def
/g12 12 def
/g2 2 def
/g7 7 def
/g16 16 def
/g23 23 def
/g6 6 def
/g22 22 def
end
RQYAAA+Calibri-Bold /Encoding get
dup 33 /g3 put
dup 34 /g10 put
dup 35 /g8 put
dup 36 /g19 put
dup 37 /g21 put
dup 38 /g18 put
dup 39 /g9 put
dup 40 /g1 put
dup 41 /g5 put
dup 42 /g12 put
dup 43 /g2 put
dup 44 /g7 put
dup 45 /g16 put
dup 46 /g23 put
dup 47 /g6 put
dup 48 /g22 put
pop
end
%ADOEndSubsetFont
reset_gvm
/DBLQDP+Calibri-Bold /RQYAAA+Calibri-Bold findfont ct_VMDictPut/DBLQDP+Calibri-Bold*1 [33{/.notdef}rp /g3 /g10 /g8 /g19 /g21 /g18 /g9 /g1 /g5 /g12 /g2 /g7 /g16 /g23 /g6 /g22 207{/.notdef}rp]DBLQDP+Calibri-Bold nfDBLQDP+Calibri-Bold*1 [9 0 0 -9 0 0 ]msf212.285 86.1659 mo(!"#$%&"'\(\)"#*\(\()[7.86594 4.52705 4.44603 3.59102 4.83302 3.10495 4.52705 4.83302 2.03398 4.65297 4.52707 4.44601 4.31998 2.03397 0 ]xsh220.028 97.1659 mo(\)+,\(\)-."&\()[4.78798 5.67004 5.877 2.03398 4.65298 4.83295 6.64197 4.52704 3.19498 0 ]xsh212.285 52.0456 mo(!"#$%&"'\(\)"#*\(\()[7.86594 4.52705 4.44603 3.59102 4.83302 3.10495 4.52705 4.83302 2.03398 4.65297 4.52707 4.44601 4.31998 2.03397 0 ]xsh216.214 63.0456 mo(/"&0"&\(\)-."&\()[4.25706 4.52705 3.27596 4.18506 4.52705 3.19496 2.03398 4.65298 4.83295 6.64197 4.52704 3.19498 0 ]xshgsave
223.794 48.321 mo
275.76 48.321 li
275.76 14.328 li
223.794 14.328 li
223.794 48.321 li
clp
true set_gvm
%ADOBeginSubsetFont: RQYAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RQYAAA+Calibri-Bold gcheck setglobal} if
1 920 4 <0001008dfffa04b80512003d00b5b10102435558b6270f0a2e0f0f14b802
34b21e2e32b80234b4001e385229b8fff040120f26024c29282e220c100f
26024c0c0b060fb8017db7270a19225119552eb8017db240065400183f1a
4ded3f3f123939ed1139392b111239392b3f012fd4ed3210ed322f113311
3331301bb2385229b8fff040120f26024c29282e220c100f26024c0c0b06
0fb8017db7270a19225119552eb8017db240065400183f1a4ded3f3f1239
39ed1139392b111239392b3f31305925140e022323222e02270126262723
16161511140e0223222e02351134363333321e0217131e03173326263511
343e0233321e021504b8101b25137023332b2819febe1c3a170204040b1b
2e24232e1a0a37288d2634292413fc162b2826120103030c1c2e24222e19
0a5c1724180b0e253f32025d367d3b488f4cfd5b0a100b06060b100a048b
2f2f0d1e3527fe272b53535028469845025f0a100c05050c100a>RQYAAA+Calibri-Bold AddT42Char 
1 3948 14 <0001007efffa060903d7005000abb10102435558b14613b8025fb31e1e32
0ab8025fb2503e27bb026000320010ffe8b40b0f014c10b8014db24b4a24
b8ffe8b40b0f014c24b8014d400e40414a3e462d38492d4c194c054c0018
3f3f3f3f1239393f1a4ded2b3fed2b012fed39d4ed11392fed3931301bb9
0010ffe8b40b0f014c10b8014db24b4a24b8ffe8b40b0f014c24b8014d40
0e40414a3e462d38492d4c194c054c00183f3f3f3f1239393f1a4ded2b3f
ed2b31305925140e0223222e023511342e022322060711140e0223222e02
3511342e022322060711140e0223222e023511343e0233321e0215153636
33321e02173e0333321e021506090c1c302526301d0b112335252d5c360c
1d302425301d0c112236242e5c350c1d302525301d0c0a1a291f202a170a
4a93503758453211284d4b4b27597a4b20220a0f0a05050a0f0a02112d4a
351d4643fdaf0a0f0a05050a0f0a02112d4a351d4643fdaf0a0f0a05050a
0f0a037c0a0f0a05050a0f0a675050172b3c252b3e27133c678a4d00>RQYAAA+Calibri-Bold AddT42Char 
1 4840 17 <0002007efe95040003d7002a003d0096b10102435558b221360abb026000
15002b0285400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b49104f39180b0f014c39b8014ab240054d00183f1a4ded2b3f3f3f
ed2b121739012fd4ed10ed323931301bb60a363521040530b8ffe8b40b0f
014c30b8014b400d264a1b49104f39180b0f014c39b8014ab240054d0018
3f1a4ded2b3f3f3fed2b12173931305901140e0223222e022711140e0223
222e023511343e0233321e0215153e0333321e0205342e0223220e020711
161633323e0204003362925e27413d3c200c1d302525301d0c0a19291f1e
29190a274b4e532f628a5728fefa11294332193133361e35603431452c15
01ed77bf86480f1f2e1ffe5c0a100b06060b100a04de0a0f0a05050a0f0a
69283d29144d86b277396952310f223628feda4349325166>RQYAAA+Calibri-Bold AddT42Char 
1 3816 13 <0001007efffa017a05700015003fb10102435558400f0d15010b0b010b0a
010d00010b0400b80260b5400a1046054c00183f3f012f1a4ded31305f5e
5d5d5d5d1bb31046054c00183f3f31305925140e0223222e023511343e02
33321e0215017a0c1d302525301d0c0c1d302525301d0c220a0f0a05050a
0f0a05230a100b06060b100a>RQYAAA+Calibri-Bold AddT42Char 
1 5844 20 <00010017ffec028e04b1003a0093b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1a4ded3fed2bcd3fed2b01
2f33fd32c4321112392f31301bb9002dffe8b40b0f014c2db8011fb32348
1d0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1a4d
ed3fed2bcd3fed2b31305925140e0423222e02351123222635343e023333
35343e0233321e02151533321e02151406232311141633323e0233321e02
028e0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a
0f0a051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c9
2f371d28170ac70a100b05050b100ac70a17281d372ffe5d494907090707
15240000>RQYAAA+Calibri-Bold AddT42Char 
RQYAAA+Calibri-Bold /CharStrings get begin
/g4 4 def
/g14 14 def
/g17 17 def
/g13 13 def
/g20 20 def
end
RQYAAA+Calibri-Bold /Encoding get
dup 49 /g4 put
dup 50 /g14 put
dup 51 /g17 put
dup 52 /g13 put
dup 53 /g20 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/DBLQDP+Calibri-Bold*1 [33{/.notdef}rp /g3 /g10 /g8 /g19 /g21 /g18 /g9 /g1 /g5 /g12 /g2 /g7 /g16 /g23 /g6 /g22 /g4 /g14 /g17 /g13 /g20 202{/.notdef}rp]DBLQDP+Calibri-Bold nfDBLQDP+Calibri-Bold*1 [9 0 0 -9 0 0 ]msf229.192 23.3253 mo(1#2"34#5"\()[5.93097 4.44603 7.31703 4.52705 4.83301 2.21402 4.36502 3.01501 4.52707 0 ]xshgrestore
gsave
275.643 140.256 mo
397.665 140.256 li
397.665 120.798 li
275.643 120.798 li
275.643 140.256 li
clp
true set_gvm
%ADOBeginSubsetFont: RQYAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal RQYAAA+Calibri-Bold gcheck setglobal} if
1 6980 24 <00010049ff0a03ae05f5005f007fbf00570294002e000601cc0010003401
ce400c3e2e103e48483e102e041825b8029bb40064180118b8fff4b40f02
4d1844bb0127004d00160128b61d4d1d4d1d2252b80105b75725053f3933
5122b80129b2110b05002fcd33ed3fcd33123939ed1139392f2f10ed10ed
012f2b5dd4ed1217392f2f2f2f10ed10ed10ed313001140e0207070e0323
222e0237372e0535343e0233321e0233323635342e0635343e0237373e03
33321e0215071e0715140e0223222e0223220e0215141e0603ae3d709e60
1501071321192027160702152b4c3e2d170a040a0f0a0d324e6f4b757231
52676c675231325e895714010713201a1f291606141c3e362c1109050203
080a070d32495f39344a2e163253696d6952320189568a643c08d6080c08
05060b120bcb06131718172d2c222c18091e241e5748303e2f252a385275
534b7b5c390ac9080b0904060b120bbd040e131511111923171f2815071a
1e1a1424321e2f402e262a3751730000>RQYAAA+Calibri-Bold AddT42Char 
1 7356 25 <ffff0052ff0a03b705f5010600180900001cb90061ffc0b30f024d61b8ff
c0b30f014d61b8ffc0b20f004d2b2b2b0000>RQYAAA+Calibri-Bold AddT42Char 
1 7728 27 <00010094000003b00517002e00b5b10102435558400d0929010928010827
0101120130b8ffc040090f024d403001030029b80292b31e180b11b8ffde
b50f024d111312b8017d40092352290f10010b0510b8012bb24006540018
3f1a4ded5f5e5d323ffdcd012f2bcdc433fdcd31305f5d2b005d015d5d5d
1b4018292801292901092901092801082701011201403001031312b8017d
40092352290f10010b0510b8012bb240065400183f1a4ded5f5e5d323ffd
cd3130015f5d005d015d5d5d5d5d5925140e022321222e0235343e023333
11070606262635343e0237253e0333321e02151133321e0203b0060b0e09
fd36080e0b06050b0e09f1d0171d110602080e0c0116050f18271f262f18
08d3090f0b05641c27170a0a17271c1d27180b034a730b05112a26181f16
0e08b40405030103070c09fbd30b1827>RQYAAA+Calibri-Bold AddT42Char 
1 7404 26 <00020039ffe903d605250013002b00c7b10102435558b9002dffc0b60f02
4d002d0114ba02950000ffd4400a0f024d0000010f030020bb0295000a00
1bffe8b30b014d1bb8ffe8b40b0f014c1bb80154400e0f5325180b014d25
180b0f014c25b80155b240055600183f1a4ded2b2b3fed2b2b012fedd45f
5e5d2bed31305d2b1b4012002d01092001090a010214010200010f031bb8
ffe8b30b014d1bb8ffe8b40b0f014c1bb80154400e0f5325180b014d2518
0b0f014c25b80155b240055600183f1a4ded2b2b3fed2b2b015f5e5d5d5d
5d31305d5901140e0223222e0235343e0233321e0205342e0423220e0215
141e0233323e0403d63271b58385ae66293371b58285af6628fef70a151f
2c38223b4d2d12162f4a34273c2d1e1307028c9bfab05e5babf79c9afbb0
5e5babf7a95c8d68482b123972aa718ab56b2b19324c647e>RQYAAA+Calibri-Bold AddT42Char 
1 4336 15 <0001007efffa03d203d700320081b10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1a4ded2b2b012fd4ed10ed3931
301bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a
192449194c054c00183f3f3f12393f1a4ded2b2b31305925140e0223222e
023511342e022322060711140e0223222e023511343e0233321e02151536
3633321e021503d20c1c312425311c0c132439263062350c1d302525301d
0c0a1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a35
1d4643fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61
0000>RQYAAA+Calibri-Bold AddT42Char 
1 3308 11 <0001007efffa03d205700032006db10102435558b9000b025fb2322a14b8
0260b31e2a1910b8ffe8b40b0f014c10b8014d4009402d4a2446194c054c
00183f3f3f3f1a4ded2b1239012fed32d4ed31301bb22a1910b8ffe8b40b
0f014c10b8014d4009402d4a2446194c054c00183f3f3f3f1a4ded2b1239
31305925140e0223222e023511342e022322060711140e0223222e023511
343e0233321e021511363633321e021503d20c1c312425311c0c13243926
3062350c1d302525301d0c0c1d302525301d0c4187495b7d4d22220a0f0a
05050a0f0a01fd414a351d4643fdaf0a0f0a05050a0f0a05230a100b0606
0b100afe13403f3c688b6300>RQYAAA+Calibri-Bold AddT42Char 
RQYAAA+Calibri-Bold /CharStrings get begin
/g25 25 def
/g27 27 def
/g26 26 def
/g15 15 def
/g11 11 def
end
RQYAAA+Calibri-Bold /Encoding get
dup 54 /g25 put
dup 55 /g27 put
dup 56 /g26 put
dup 57 /g15 put
dup 58 /g11 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
reset_gvm
/DBLQDP+Calibri-Bold*1 [33{/.notdef}rp /g3 /g10 /g8 /g19 /g21 /g18 /g9 /g1 /g5 /g12 /g2 /g7 /g16 /g23 /g6 /g22 /g4 /g14 /g17 /g13 /g20 /g25 /g27 /g26 /g15 /g11 197{/.notdef}rp]DBLQDP+Calibri-Bold nfDBLQDP+Calibri-Bold*1 [9 0 0 -9 0 0 ]msf281.316 129.798 mo(6\(3"&\(7888\(/"&0"&$\(3"&\(!-95:\()[4.56305 2.03397 4.83304 4.52704 3.19498 2.03397 4.56305 4.56302 4.56305 4.56302 2.034 4.25705 4.52707 3.27594 4.18509 4.52704 3.09598 3.591 2.034 4.83301 4.52707 3.19495 2.034 7.86594 4.84195 4.75201 3.12302 4.83301 0 ]xshgrestore
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
DBLQDO+Calibri*1 [9 0 0 -9 0 0 ]msf276.577 116.605 mo(73)[4.56302 0 ]xsh304.618 116.605 mo(;7M7773)[4.56302 4.56305 2.25 4.56302 4.56305 4.56302 0 ]xsh378.034 116.605 mo(:7M7773)[4.56302 4.56305 2.25 4.56302 4.56305 4.56302 0 ]xsh350.79 36.903 mo
349.278 26.0663 357.925 17.0936 356.413 6.2569 cv
362.509 7.37531 li
364.021 18.212 355.374 27.1847 356.885 38.0214 cv
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
ef
350.79 36.9029 mo
349.278 26.0662 357.925 17.0935 356.413 6.25677 cv
362.509 7.37521 li
364.02 18.2119 355.373 27.1847 356.885 38.0214 cv
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
351.013 -1.43781 mo
365.1 1.14691 li
363.601 9.31918 li
349.514 6.7345 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
ef
350.238 33.9237 mo
364.326 36.5084 li
362.826 44.6807 li
348.739 42.0959 li
cp
ef
351.628 110.013 mo
350.157 106.473 354.84 104.062 353.369 100.522 cv
357.062 101.199 li
358.532 104.739 353.849 107.15 355.32 110.69 cv
cp
ef
351.628 110.013 mo
350.157 106.473 354.84 104.062 353.369 100.522 cv
357.061 101.199 li
358.532 104.739 353.849 107.15 355.32 110.69 cv
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0.74902 0.678431 0.654902 0.901961 colr
@
349.729 97.7777 mo
358.262 99.3434 li
357.797 101.874 li
349.264 100.309 li
cp
<< /CSA /1 get_csa_by_name
/Intent /RelativeColorimetric 
>> csacrd
0 0 0 0 colr
ef
351.159 109.035 mo
359.692 110.601 li
359.228 113.132 li
350.695 111.566 li
cp
ef
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
] del_res
true set_gvm
/DBLQDP+Calibri-Bold*1 uf/DBLQDP+Calibri-Bold uf/RQYAAA+Calibri-Bold uf/DBLQDO+Calibri*1 uf/DBLQDO+Calibri uf/DQVAAA+Calibri ufreset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
